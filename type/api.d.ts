/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/api/abp/api-definition": {
    get: {
      parameters: {
        query?: {
          IncludeTypes?: boolean;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.Modeling.ApplicationApiDescriptionModel"];
            "application/json": components["schemas"]["Volo.Abp.Http.Modeling.ApplicationApiDescriptionModel"];
            "text/json": components["schemas"]["Volo.Abp.Http.Modeling.ApplicationApiDescriptionModel"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/abp/application-configuration": {
    get: {
      parameters: {
        query?: {
          IncludeLocalizationResources?: boolean;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationConfigurationDto"];
            "application/json": components["schemas"]["Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationConfigurationDto"];
            "text/json": components["schemas"]["Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationConfigurationDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/abp/application-localization": {
    get: {
      parameters: {
        query: {
          CultureName: string;
          OnlyDynamics?: boolean;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationLocalizationDto"];
            "application/json": components["schemas"]["Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationLocalizationDto"];
            "text/json": components["schemas"]["Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationLocalizationDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/abp/multi-tenancy/tenants/by-name/{name}": {
    get: {
      parameters: {
        path: {
          name: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.AspNetCore.Mvc.MultiTenancy.FindTenantResultDto"];
            "application/json": components["schemas"]["Volo.Abp.AspNetCore.Mvc.MultiTenancy.FindTenantResultDto"];
            "text/json": components["schemas"]["Volo.Abp.AspNetCore.Mvc.MultiTenancy.FindTenantResultDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/abp/multi-tenancy/tenants/by-id/{id}": {
    get: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.AspNetCore.Mvc.MultiTenancy.FindTenantResultDto"];
            "application/json": components["schemas"]["Volo.Abp.AspNetCore.Mvc.MultiTenancy.FindTenantResultDto"];
            "text/json": components["schemas"]["Volo.Abp.AspNetCore.Mvc.MultiTenancy.FindTenantResultDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/account-admin/settings": {
    get: {
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Account.AccountSettingsDto"];
            "application/json": components["schemas"]["Volo.Abp.Account.AccountSettingsDto"];
            "text/json": components["schemas"]["Volo.Abp.Account.AccountSettingsDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
    put: {
      requestBody?: {
        content: {
          "application/json": components["schemas"]["Volo.Abp.Account.AccountSettingsDto"];
          "text/json": components["schemas"]["Volo.Abp.Account.AccountSettingsDto"];
          "application/*+json": components["schemas"]["Volo.Abp.Account.AccountSettingsDto"];
        };
      };
      responses: {
        /** @description Success */
        200: never;
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/account-admin/settings/two-factor": {
    get: {
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Account.AccountTwoFactorSettingsDto"];
            "application/json": components["schemas"]["Volo.Abp.Account.AccountTwoFactorSettingsDto"];
            "text/json": components["schemas"]["Volo.Abp.Account.AccountTwoFactorSettingsDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
    put: {
      requestBody?: {
        content: {
          "application/json": components["schemas"]["Volo.Abp.Account.AccountTwoFactorSettingsDto"];
          "text/json": components["schemas"]["Volo.Abp.Account.AccountTwoFactorSettingsDto"];
          "application/*+json": components["schemas"]["Volo.Abp.Account.AccountTwoFactorSettingsDto"];
        };
      };
      responses: {
        /** @description Success */
        200: never;
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/account-admin/settings/recaptcha": {
    get: {
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Account.AccountRecaptchaSettingsDto"];
            "application/json": components["schemas"]["Volo.Abp.Account.AccountRecaptchaSettingsDto"];
            "text/json": components["schemas"]["Volo.Abp.Account.AccountRecaptchaSettingsDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
    put: {
      requestBody?: {
        content: {
          "application/json": components["schemas"]["Volo.Abp.Account.AccountRecaptchaSettingsDto"];
          "text/json": components["schemas"]["Volo.Abp.Account.AccountRecaptchaSettingsDto"];
          "application/*+json": components["schemas"]["Volo.Abp.Account.AccountRecaptchaSettingsDto"];
        };
      };
      responses: {
        /** @description Success */
        200: never;
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/account-admin/settings/external-provider": {
    get: {
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Account.AccountExternalProviderSettingsDto"];
            "application/json": components["schemas"]["Volo.Abp.Account.AccountExternalProviderSettingsDto"];
            "text/json": components["schemas"]["Volo.Abp.Account.AccountExternalProviderSettingsDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
    put: {
      requestBody?: {
        content: {
          "application/json": components["schemas"]["Volo.Abp.Account.UpdateExternalProviderDto"][];
          "text/json": components["schemas"]["Volo.Abp.Account.UpdateExternalProviderDto"][];
          "application/*+json": components["schemas"]["Volo.Abp.Account.UpdateExternalProviderDto"][];
        };
      };
      responses: {
        /** @description Success */
        200: never;
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/addition/addition": {
    post: {
      requestBody?: {
        content: {
          "application/json": components["schemas"]["Tourmap.Addition.Additions.AdditionDto+Create"];
          "text/json": components["schemas"]["Tourmap.Addition.Additions.AdditionDto+Create"];
          "application/*+json": components["schemas"]["Tourmap.Addition.Additions.AdditionDto+Create"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Tourmap.Addition.Additions.AdditionDto"];
            "application/json": components["schemas"]["Tourmap.Addition.Additions.AdditionDto"];
            "text/json": components["schemas"]["Tourmap.Addition.Additions.AdditionDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/addition/addition/{id}": {
    put: {
      parameters: {
        path: {
          id: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["Tourmap.Addition.Additions.AdditionDto+Update"];
          "text/json": components["schemas"]["Tourmap.Addition.Additions.AdditionDto+Update"];
          "application/*+json": components["schemas"]["Tourmap.Addition.Additions.AdditionDto+Update"];
        };
      };
      responses: {
        /** @description Success */
        200: never;
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
    delete: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** @description Success */
        200: never;
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/addition/addition/{id}/move-addition/{parentCategoryId}": {
    post: {
      parameters: {
        query?: {
          newIndex?: number;
        };
        path: {
          id: string;
          parentCategoryId: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Tourmap.Addition.Additions.AdditionDto"];
            "application/json": components["schemas"]["Tourmap.Addition.Additions.AdditionDto"];
            "text/json": components["schemas"]["Tourmap.Addition.Additions.AdditionDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/addition/addition-category": {
    post: {
      requestBody?: {
        content: {
          "application/json": components["schemas"]["Tourmap.Addition.AdditionCategories.AdditionCategoryDto+Create"];
          "text/json": components["schemas"]["Tourmap.Addition.AdditionCategories.AdditionCategoryDto+Create"];
          "application/*+json": components["schemas"]["Tourmap.Addition.AdditionCategories.AdditionCategoryDto+Create"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Tourmap.Addition.AdditionCategories.AdditionCategoryDto"];
            "application/json": components["schemas"]["Tourmap.Addition.AdditionCategories.AdditionCategoryDto"];
            "text/json": components["schemas"]["Tourmap.Addition.AdditionCategories.AdditionCategoryDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/addition/addition-category/{id}": {
    put: {
      parameters: {
        path: {
          id: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["Tourmap.Addition.AdditionCategories.AdditionCategoryDto+Update"];
          "text/json": components["schemas"]["Tourmap.Addition.AdditionCategories.AdditionCategoryDto+Update"];
          "application/*+json": components["schemas"]["Tourmap.Addition.AdditionCategories.AdditionCategoryDto+Update"];
        };
      };
      responses: {
        /** @description Success */
        200: never;
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
    delete: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** @description Success */
        200: never;
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/addition/addition-category/{id}/move-addition-category/{parentCategoryId}": {
    post: {
      parameters: {
        query?: {
          newIndex?: number;
        };
        path: {
          id: string;
          parentCategoryId: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Tourmap.Addition.AdditionCategories.AdditionCategoryDto"];
            "application/json": components["schemas"]["Tourmap.Addition.AdditionCategories.AdditionCategoryDto"];
            "text/json": components["schemas"]["Tourmap.Addition.AdditionCategories.AdditionCategoryDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/openiddict/applications/{id}": {
    get: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.OpenIddict.Applications.Dtos.ApplicationDto"];
            "application/json": components["schemas"]["Volo.Abp.OpenIddict.Applications.Dtos.ApplicationDto"];
            "text/json": components["schemas"]["Volo.Abp.OpenIddict.Applications.Dtos.ApplicationDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
    put: {
      parameters: {
        path: {
          id: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["Volo.Abp.OpenIddict.Applications.Dtos.UpdateApplicationInput"];
          "text/json": components["schemas"]["Volo.Abp.OpenIddict.Applications.Dtos.UpdateApplicationInput"];
          "application/*+json": components["schemas"]["Volo.Abp.OpenIddict.Applications.Dtos.UpdateApplicationInput"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.OpenIddict.Applications.Dtos.ApplicationDto"];
            "application/json": components["schemas"]["Volo.Abp.OpenIddict.Applications.Dtos.ApplicationDto"];
            "text/json": components["schemas"]["Volo.Abp.OpenIddict.Applications.Dtos.ApplicationDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/openiddict/applications": {
    get: {
      parameters: {
        query?: {
          Filter?: string;
          Sorting?: string;
          SkipCount?: number;
          MaxResultCount?: number;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Application.Dtos.PagedResultDto`1[[Volo.Abp.OpenIddict.Applications.Dtos.ApplicationDto, Volo.Abp.OpenIddict.Pro.Application.Contracts, Version=7.2.2.0, Culture=neutral, PublicKeyToken=null]]"];
            "application/json": components["schemas"]["Volo.Abp.Application.Dtos.PagedResultDto`1[[Volo.Abp.OpenIddict.Applications.Dtos.ApplicationDto, Volo.Abp.OpenIddict.Pro.Application.Contracts, Version=7.2.2.0, Culture=neutral, PublicKeyToken=null]]"];
            "text/json": components["schemas"]["Volo.Abp.Application.Dtos.PagedResultDto`1[[Volo.Abp.OpenIddict.Applications.Dtos.ApplicationDto, Volo.Abp.OpenIddict.Pro.Application.Contracts, Version=7.2.2.0, Culture=neutral, PublicKeyToken=null]]"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
    post: {
      requestBody?: {
        content: {
          "application/json": components["schemas"]["Volo.Abp.OpenIddict.Applications.Dtos.CreateApplicationInput"];
          "text/json": components["schemas"]["Volo.Abp.OpenIddict.Applications.Dtos.CreateApplicationInput"];
          "application/*+json": components["schemas"]["Volo.Abp.OpenIddict.Applications.Dtos.CreateApplicationInput"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.OpenIddict.Applications.Dtos.ApplicationDto"];
            "application/json": components["schemas"]["Volo.Abp.OpenIddict.Applications.Dtos.ApplicationDto"];
            "text/json": components["schemas"]["Volo.Abp.OpenIddict.Applications.Dtos.ApplicationDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
    delete: {
      parameters: {
        query?: {
          id?: string;
        };
      };
      responses: {
        /** @description Success */
        200: never;
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/booking-service/asset": {
    get: {
      parameters: {
        query?: {
          Name?: string;
          AssetDefinitionName?: string;
          AssetCategoryId?: string;
          Disabled?: boolean;
          Sorting?: string;
          SkipCount?: number;
          MaxResultCount?: number;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Application.Dtos.PagedResultDto`1[[EasyAbp.BookingService.Assets.Dtos.AssetDto, EasyAbp.BookingService.Common.Application.Contracts, Version=0.4.0.0, Culture=neutral, PublicKeyToken=null]]"];
            "application/json": components["schemas"]["Volo.Abp.Application.Dtos.PagedResultDto`1[[EasyAbp.BookingService.Assets.Dtos.AssetDto, EasyAbp.BookingService.Common.Application.Contracts, Version=0.4.0.0, Culture=neutral, PublicKeyToken=null]]"];
            "text/json": components["schemas"]["Volo.Abp.Application.Dtos.PagedResultDto`1[[EasyAbp.BookingService.Assets.Dtos.AssetDto, EasyAbp.BookingService.Common.Application.Contracts, Version=0.4.0.0, Culture=neutral, PublicKeyToken=null]]"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
    post: {
      requestBody?: {
        content: {
          "application/json": components["schemas"]["EasyAbp.BookingService.Assets.Dtos.CreateUpdateAssetDto"];
          "text/json": components["schemas"]["EasyAbp.BookingService.Assets.Dtos.CreateUpdateAssetDto"];
          "application/*+json": components["schemas"]["EasyAbp.BookingService.Assets.Dtos.CreateUpdateAssetDto"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["EasyAbp.BookingService.Assets.Dtos.AssetDto"];
            "application/json": components["schemas"]["EasyAbp.BookingService.Assets.Dtos.AssetDto"];
            "text/json": components["schemas"]["EasyAbp.BookingService.Assets.Dtos.AssetDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/booking-service/asset/{id}": {
    get: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["EasyAbp.BookingService.Assets.Dtos.AssetDto"];
            "application/json": components["schemas"]["EasyAbp.BookingService.Assets.Dtos.AssetDto"];
            "text/json": components["schemas"]["EasyAbp.BookingService.Assets.Dtos.AssetDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
    put: {
      parameters: {
        path: {
          id: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["EasyAbp.BookingService.Assets.Dtos.CreateUpdateAssetDto"];
          "text/json": components["schemas"]["EasyAbp.BookingService.Assets.Dtos.CreateUpdateAssetDto"];
          "application/*+json": components["schemas"]["EasyAbp.BookingService.Assets.Dtos.CreateUpdateAssetDto"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["EasyAbp.BookingService.Assets.Dtos.AssetDto"];
            "application/json": components["schemas"]["EasyAbp.BookingService.Assets.Dtos.AssetDto"];
            "text/json": components["schemas"]["EasyAbp.BookingService.Assets.Dtos.AssetDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
    delete: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** @description Success */
        200: never;
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/booking-service/asset-category": {
    get: {
      parameters: {
        query?: {
          AssetDefinitionName?: string;
          Disabled?: boolean;
          DisplayName?: string;
          ParentId?: string;
          Sorting?: string;
          SkipCount?: number;
          MaxResultCount?: number;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Application.Dtos.PagedResultDto`1[[EasyAbp.BookingService.AssetCategories.Dtos.AssetCategoryDto, EasyAbp.BookingService.Common.Application.Contracts, Version=0.4.0.0, Culture=neutral, PublicKeyToken=null]]"];
            "application/json": components["schemas"]["Volo.Abp.Application.Dtos.PagedResultDto`1[[EasyAbp.BookingService.AssetCategories.Dtos.AssetCategoryDto, EasyAbp.BookingService.Common.Application.Contracts, Version=0.4.0.0, Culture=neutral, PublicKeyToken=null]]"];
            "text/json": components["schemas"]["Volo.Abp.Application.Dtos.PagedResultDto`1[[EasyAbp.BookingService.AssetCategories.Dtos.AssetCategoryDto, EasyAbp.BookingService.Common.Application.Contracts, Version=0.4.0.0, Culture=neutral, PublicKeyToken=null]]"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
    post: {
      requestBody?: {
        content: {
          "application/json": components["schemas"]["EasyAbp.BookingService.AssetCategories.Dtos.CreateAssetCategoryDto"];
          "text/json": components["schemas"]["EasyAbp.BookingService.AssetCategories.Dtos.CreateAssetCategoryDto"];
          "application/*+json": components["schemas"]["EasyAbp.BookingService.AssetCategories.Dtos.CreateAssetCategoryDto"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["EasyAbp.BookingService.AssetCategories.Dtos.AssetCategoryDto"];
            "application/json": components["schemas"]["EasyAbp.BookingService.AssetCategories.Dtos.AssetCategoryDto"];
            "text/json": components["schemas"]["EasyAbp.BookingService.AssetCategories.Dtos.AssetCategoryDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/booking-service/asset-category/{id}": {
    get: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["EasyAbp.BookingService.AssetCategories.Dtos.AssetCategoryDto"];
            "application/json": components["schemas"]["EasyAbp.BookingService.AssetCategories.Dtos.AssetCategoryDto"];
            "text/json": components["schemas"]["EasyAbp.BookingService.AssetCategories.Dtos.AssetCategoryDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
    put: {
      parameters: {
        path: {
          id: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["EasyAbp.BookingService.AssetCategories.Dtos.UpdateAssetCategoryDto"];
          "text/json": components["schemas"]["EasyAbp.BookingService.AssetCategories.Dtos.UpdateAssetCategoryDto"];
          "application/*+json": components["schemas"]["EasyAbp.BookingService.AssetCategories.Dtos.UpdateAssetCategoryDto"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["EasyAbp.BookingService.AssetCategories.Dtos.AssetCategoryDto"];
            "application/json": components["schemas"]["EasyAbp.BookingService.AssetCategories.Dtos.AssetCategoryDto"];
            "text/json": components["schemas"]["EasyAbp.BookingService.AssetCategories.Dtos.AssetCategoryDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
    delete: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** @description Success */
        200: never;
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/booking-service/asset-occupancy": {
    get: {
      parameters: {
        query?: {
          AssetId?: string;
          Date?: string;
          Sorting?: string;
          SkipCount?: number;
          MaxResultCount?: number;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Application.Dtos.PagedResultDto`1[[EasyAbp.BookingService.AssetOccupancies.Dtos.AssetOccupancyDto, EasyAbp.BookingService.Common.Application.Contracts, Version=0.4.0.0, Culture=neutral, PublicKeyToken=null]]"];
            "application/json": components["schemas"]["Volo.Abp.Application.Dtos.PagedResultDto`1[[EasyAbp.BookingService.AssetOccupancies.Dtos.AssetOccupancyDto, EasyAbp.BookingService.Common.Application.Contracts, Version=0.4.0.0, Culture=neutral, PublicKeyToken=null]]"];
            "text/json": components["schemas"]["Volo.Abp.Application.Dtos.PagedResultDto`1[[EasyAbp.BookingService.AssetOccupancies.Dtos.AssetOccupancyDto, EasyAbp.BookingService.Common.Application.Contracts, Version=0.4.0.0, Culture=neutral, PublicKeyToken=null]]"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
    post: {
      requestBody?: {
        content: {
          "application/json": components["schemas"]["EasyAbp.BookingService.AssetOccupancies.Dtos.CreateAssetOccupancyDto"];
          "text/json": components["schemas"]["EasyAbp.BookingService.AssetOccupancies.Dtos.CreateAssetOccupancyDto"];
          "application/*+json": components["schemas"]["EasyAbp.BookingService.AssetOccupancies.Dtos.CreateAssetOccupancyDto"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["EasyAbp.BookingService.AssetOccupancies.Dtos.AssetOccupancyDto"];
            "application/json": components["schemas"]["EasyAbp.BookingService.AssetOccupancies.Dtos.AssetOccupancyDto"];
            "text/json": components["schemas"]["EasyAbp.BookingService.AssetOccupancies.Dtos.AssetOccupancyDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/booking-service/asset-occupancy/by-category-id": {
    post: {
      requestBody?: {
        content: {
          "application/json": components["schemas"]["EasyAbp.BookingService.AssetOccupancies.Dtos.CreateAssetOccupancyByCategoryIdDto"];
          "text/json": components["schemas"]["EasyAbp.BookingService.AssetOccupancies.Dtos.CreateAssetOccupancyByCategoryIdDto"];
          "application/*+json": components["schemas"]["EasyAbp.BookingService.AssetOccupancies.Dtos.CreateAssetOccupancyByCategoryIdDto"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["EasyAbp.BookingService.AssetOccupancies.Dtos.AssetOccupancyDto"];
            "application/json": components["schemas"]["EasyAbp.BookingService.AssetOccupancies.Dtos.AssetOccupancyDto"];
            "text/json": components["schemas"]["EasyAbp.BookingService.AssetOccupancies.Dtos.AssetOccupancyDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/booking-service/asset-occupancy/search-booking-periods": {
    post: {
      requestBody?: {
        content: {
          "application/json": components["schemas"]["EasyAbp.BookingService.AssetOccupancies.Dtos.SearchBookingPeriodsInputDto"];
          "text/json": components["schemas"]["EasyAbp.BookingService.AssetOccupancies.Dtos.SearchBookingPeriodsInputDto"];
          "application/*+json": components["schemas"]["EasyAbp.BookingService.AssetOccupancies.Dtos.SearchBookingPeriodsInputDto"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["EasyAbp.BookingService.AssetOccupancies.Dtos.SearchBookingPeriodsResultDto"];
            "application/json": components["schemas"]["EasyAbp.BookingService.AssetOccupancies.Dtos.SearchBookingPeriodsResultDto"];
            "text/json": components["schemas"]["EasyAbp.BookingService.AssetOccupancies.Dtos.SearchBookingPeriodsResultDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/booking-service/asset-occupancy/search-category-booking-periods": {
    post: {
      requestBody?: {
        content: {
          "application/json": components["schemas"]["EasyAbp.BookingService.AssetOccupancies.Dtos.SearchCategoryBookingPeriodsInputDto"];
          "text/json": components["schemas"]["EasyAbp.BookingService.AssetOccupancies.Dtos.SearchCategoryBookingPeriodsInputDto"];
          "application/*+json": components["schemas"]["EasyAbp.BookingService.AssetOccupancies.Dtos.SearchCategoryBookingPeriodsInputDto"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["EasyAbp.BookingService.AssetOccupancies.Dtos.SearchBookingPeriodsResultDto"];
            "application/json": components["schemas"]["EasyAbp.BookingService.AssetOccupancies.Dtos.SearchBookingPeriodsResultDto"];
            "text/json": components["schemas"]["EasyAbp.BookingService.AssetOccupancies.Dtos.SearchBookingPeriodsResultDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/booking-service/asset-occupancy/check-create": {
    post: {
      requestBody?: {
        content: {
          "application/json": components["schemas"]["EasyAbp.BookingService.AssetOccupancies.Dtos.CreateAssetOccupancyDto"];
          "text/json": components["schemas"]["EasyAbp.BookingService.AssetOccupancies.Dtos.CreateAssetOccupancyDto"];
          "application/*+json": components["schemas"]["EasyAbp.BookingService.AssetOccupancies.Dtos.CreateAssetOccupancyDto"];
        };
      };
      responses: {
        /** @description Success */
        200: never;
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/booking-service/asset-occupancy/check-create-by-category-id": {
    post: {
      requestBody?: {
        content: {
          "application/json": components["schemas"]["EasyAbp.BookingService.AssetOccupancies.Dtos.CreateAssetOccupancyByCategoryIdDto"];
          "text/json": components["schemas"]["EasyAbp.BookingService.AssetOccupancies.Dtos.CreateAssetOccupancyByCategoryIdDto"];
          "application/*+json": components["schemas"]["EasyAbp.BookingService.AssetOccupancies.Dtos.CreateAssetOccupancyByCategoryIdDto"];
        };
      };
      responses: {
        /** @description Success */
        200: never;
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/booking-service/asset-occupancy/check-bulk-create": {
    post: {
      requestBody?: {
        content: {
          "application/json": components["schemas"]["EasyAbp.BookingService.AssetOccupancies.Dtos.BulkCreateAssetOccupancyDto"];
          "text/json": components["schemas"]["EasyAbp.BookingService.AssetOccupancies.Dtos.BulkCreateAssetOccupancyDto"];
          "application/*+json": components["schemas"]["EasyAbp.BookingService.AssetOccupancies.Dtos.BulkCreateAssetOccupancyDto"];
        };
      };
      responses: {
        /** @description Success */
        200: never;
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/booking-service/asset-occupancy/{id}": {
    get: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["EasyAbp.BookingService.AssetOccupancies.Dtos.AssetOccupancyDto"];
            "application/json": components["schemas"]["EasyAbp.BookingService.AssetOccupancies.Dtos.AssetOccupancyDto"];
            "text/json": components["schemas"]["EasyAbp.BookingService.AssetOccupancies.Dtos.AssetOccupancyDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
    delete: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** @description Success */
        200: never;
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/booking-service/asset-period-scheme": {
    get: {
      parameters: {
        query?: {
          PeriodSchemeId?: string;
          AssetId?: string;
          Date?: string;
          Sorting?: string;
          SkipCount?: number;
          MaxResultCount?: number;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Application.Dtos.PagedResultDto`1[[EasyAbp.BookingService.AssetPeriodSchemes.Dtos.AssetPeriodSchemeDto, EasyAbp.BookingService.Common.Application.Contracts, Version=0.4.0.0, Culture=neutral, PublicKeyToken=null]]"];
            "application/json": components["schemas"]["Volo.Abp.Application.Dtos.PagedResultDto`1[[EasyAbp.BookingService.AssetPeriodSchemes.Dtos.AssetPeriodSchemeDto, EasyAbp.BookingService.Common.Application.Contracts, Version=0.4.0.0, Culture=neutral, PublicKeyToken=null]]"];
            "text/json": components["schemas"]["Volo.Abp.Application.Dtos.PagedResultDto`1[[EasyAbp.BookingService.AssetPeriodSchemes.Dtos.AssetPeriodSchemeDto, EasyAbp.BookingService.Common.Application.Contracts, Version=0.4.0.0, Culture=neutral, PublicKeyToken=null]]"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
    post: {
      requestBody?: {
        content: {
          "application/json": components["schemas"]["EasyAbp.BookingService.AssetPeriodSchemes.Dtos.CreateAssetPeriodSchemeDto"];
          "text/json": components["schemas"]["EasyAbp.BookingService.AssetPeriodSchemes.Dtos.CreateAssetPeriodSchemeDto"];
          "application/*+json": components["schemas"]["EasyAbp.BookingService.AssetPeriodSchemes.Dtos.CreateAssetPeriodSchemeDto"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["EasyAbp.BookingService.AssetPeriodSchemes.Dtos.AssetPeriodSchemeDto"];
            "application/json": components["schemas"]["EasyAbp.BookingService.AssetPeriodSchemes.Dtos.AssetPeriodSchemeDto"];
            "text/json": components["schemas"]["EasyAbp.BookingService.AssetPeriodSchemes.Dtos.AssetPeriodSchemeDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/booking-service/asset-period-scheme/{AssetId}/{Date}": {
    get: {
      parameters: {
        path: {
          AssetId: string;
          Date: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["EasyAbp.BookingService.AssetPeriodSchemes.Dtos.AssetPeriodSchemeDto"];
            "application/json": components["schemas"]["EasyAbp.BookingService.AssetPeriodSchemes.Dtos.AssetPeriodSchemeDto"];
            "text/json": components["schemas"]["EasyAbp.BookingService.AssetPeriodSchemes.Dtos.AssetPeriodSchemeDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
    put: {
      parameters: {
        path: {
          AssetId: string;
          Date: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["EasyAbp.BookingService.AssetPeriodSchemes.Dtos.UpdateAssetPeriodSchemeDto"];
          "text/json": components["schemas"]["EasyAbp.BookingService.AssetPeriodSchemes.Dtos.UpdateAssetPeriodSchemeDto"];
          "application/*+json": components["schemas"]["EasyAbp.BookingService.AssetPeriodSchemes.Dtos.UpdateAssetPeriodSchemeDto"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["EasyAbp.BookingService.AssetPeriodSchemes.Dtos.AssetPeriodSchemeDto"];
            "application/json": components["schemas"]["EasyAbp.BookingService.AssetPeriodSchemes.Dtos.AssetPeriodSchemeDto"];
            "text/json": components["schemas"]["EasyAbp.BookingService.AssetPeriodSchemes.Dtos.AssetPeriodSchemeDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
    delete: {
      parameters: {
        path: {
          AssetId: string;
          Date: string;
        };
      };
      responses: {
        /** @description Success */
        200: never;
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/booking-service/asset-schedule": {
    get: {
      parameters: {
        query?: {
          Date?: string;
          AssetId?: string;
          AssetCategoryId?: string;
          Sorting?: string;
          SkipCount?: number;
          MaxResultCount?: number;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Application.Dtos.PagedResultDto`1[[EasyAbp.BookingService.AssetSchedules.Dtos.AssetScheduleDto, EasyAbp.BookingService.Common.Application.Contracts, Version=0.4.0.0, Culture=neutral, PublicKeyToken=null]]"];
            "application/json": components["schemas"]["Volo.Abp.Application.Dtos.PagedResultDto`1[[EasyAbp.BookingService.AssetSchedules.Dtos.AssetScheduleDto, EasyAbp.BookingService.Common.Application.Contracts, Version=0.4.0.0, Culture=neutral, PublicKeyToken=null]]"];
            "text/json": components["schemas"]["Volo.Abp.Application.Dtos.PagedResultDto`1[[EasyAbp.BookingService.AssetSchedules.Dtos.AssetScheduleDto, EasyAbp.BookingService.Common.Application.Contracts, Version=0.4.0.0, Culture=neutral, PublicKeyToken=null]]"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
    post: {
      requestBody?: {
        content: {
          "application/json": components["schemas"]["EasyAbp.BookingService.AssetSchedules.Dtos.CreateAssetScheduleDto"];
          "text/json": components["schemas"]["EasyAbp.BookingService.AssetSchedules.Dtos.CreateAssetScheduleDto"];
          "application/*+json": components["schemas"]["EasyAbp.BookingService.AssetSchedules.Dtos.CreateAssetScheduleDto"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["EasyAbp.BookingService.AssetSchedules.Dtos.AssetScheduleDto"];
            "application/json": components["schemas"]["EasyAbp.BookingService.AssetSchedules.Dtos.AssetScheduleDto"];
            "text/json": components["schemas"]["EasyAbp.BookingService.AssetSchedules.Dtos.AssetScheduleDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/booking-service/asset-schedule/{id}": {
    get: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["EasyAbp.BookingService.AssetSchedules.Dtos.AssetScheduleDto"];
            "application/json": components["schemas"]["EasyAbp.BookingService.AssetSchedules.Dtos.AssetScheduleDto"];
            "text/json": components["schemas"]["EasyAbp.BookingService.AssetSchedules.Dtos.AssetScheduleDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
    put: {
      parameters: {
        path: {
          id: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["EasyAbp.BookingService.AssetSchedules.Dtos.UpdateAssetScheduleDto"];
          "text/json": components["schemas"]["EasyAbp.BookingService.AssetSchedules.Dtos.UpdateAssetScheduleDto"];
          "application/*+json": components["schemas"]["EasyAbp.BookingService.AssetSchedules.Dtos.UpdateAssetScheduleDto"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["EasyAbp.BookingService.AssetSchedules.Dtos.AssetScheduleDto"];
            "application/json": components["schemas"]["EasyAbp.BookingService.AssetSchedules.Dtos.AssetScheduleDto"];
            "text/json": components["schemas"]["EasyAbp.BookingService.AssetSchedules.Dtos.AssetScheduleDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
    delete: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** @description Success */
        200: never;
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/audit-logging/audit-logs": {
    get: {
      parameters: {
        query?: {
          StartTime?: string;
          EndTime?: string;
          Url?: string;
          UserName?: string;
          ApplicationName?: string;
          ClientIpAddress?: string;
          CorrelationId?: string;
          HttpMethod?: string;
          HttpStatusCode?: components["schemas"]["System.Net.HttpStatusCode"];
          MaxExecutionDuration?: number;
          MinExecutionDuration?: number;
          HasException?: boolean;
          Sorting?: string;
          SkipCount?: number;
          MaxResultCount?: number;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Application.Dtos.PagedResultDto`1[[Volo.Abp.AuditLogging.AuditLogDto, Volo.Abp.AuditLogging.Application.Contracts, Version=7.2.2.0, Culture=neutral, PublicKeyToken=null]]"];
            "application/json": components["schemas"]["Volo.Abp.Application.Dtos.PagedResultDto`1[[Volo.Abp.AuditLogging.AuditLogDto, Volo.Abp.AuditLogging.Application.Contracts, Version=7.2.2.0, Culture=neutral, PublicKeyToken=null]]"];
            "text/json": components["schemas"]["Volo.Abp.Application.Dtos.PagedResultDto`1[[Volo.Abp.AuditLogging.AuditLogDto, Volo.Abp.AuditLogging.Application.Contracts, Version=7.2.2.0, Culture=neutral, PublicKeyToken=null]]"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/audit-logging/audit-logs/{id}": {
    get: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.AuditLogging.AuditLogDto"];
            "application/json": components["schemas"]["Volo.Abp.AuditLogging.AuditLogDto"];
            "text/json": components["schemas"]["Volo.Abp.AuditLogging.AuditLogDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/audit-logging/audit-logs/statistics/error-rate": {
    get: {
      parameters: {
        query?: {
          StartDate?: string;
          EndDate?: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.AuditLogging.GetErrorRateOutput"];
            "application/json": components["schemas"]["Volo.Abp.AuditLogging.GetErrorRateOutput"];
            "text/json": components["schemas"]["Volo.Abp.AuditLogging.GetErrorRateOutput"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/audit-logging/audit-logs/statistics/average-execution-duration-per-day": {
    get: {
      parameters: {
        query?: {
          StartDate?: string;
          EndDate?: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.AuditLogging.GetAverageExecutionDurationPerDayOutput"];
            "application/json": components["schemas"]["Volo.Abp.AuditLogging.GetAverageExecutionDurationPerDayOutput"];
            "text/json": components["schemas"]["Volo.Abp.AuditLogging.GetAverageExecutionDurationPerDayOutput"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/audit-logging/audit-logs/entity-changes": {
    get: {
      parameters: {
        query?: {
          AuditLogId?: string;
          EntityChangeType?: components["schemas"]["Volo.Abp.Auditing.EntityChangeType"];
          EntityId?: string;
          EntityTypeFullName?: string;
          StartDate?: string;
          EndDate?: string;
          Sorting?: string;
          SkipCount?: number;
          MaxResultCount?: number;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Application.Dtos.PagedResultDto`1[[Volo.Abp.AuditLogging.EntityChangeDto, Volo.Abp.AuditLogging.Application.Contracts, Version=7.2.2.0, Culture=neutral, PublicKeyToken=null]]"];
            "application/json": components["schemas"]["Volo.Abp.Application.Dtos.PagedResultDto`1[[Volo.Abp.AuditLogging.EntityChangeDto, Volo.Abp.AuditLogging.Application.Contracts, Version=7.2.2.0, Culture=neutral, PublicKeyToken=null]]"];
            "text/json": components["schemas"]["Volo.Abp.Application.Dtos.PagedResultDto`1[[Volo.Abp.AuditLogging.EntityChangeDto, Volo.Abp.AuditLogging.Application.Contracts, Version=7.2.2.0, Culture=neutral, PublicKeyToken=null]]"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/audit-logging/audit-logs/entity-changes-with-username": {
    get: {
      parameters: {
        query?: {
          EntityId?: string;
          EntityTypeFullName?: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.AuditLogging.EntityChangeWithUsernameDto"][];
            "application/json": components["schemas"]["Volo.Abp.AuditLogging.EntityChangeWithUsernameDto"][];
            "text/json": components["schemas"]["Volo.Abp.AuditLogging.EntityChangeWithUsernameDto"][];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/audit-logging/audit-logs/entity-change-with-username/{entityChangeId}": {
    get: {
      parameters: {
        path: {
          entityChangeId: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.AuditLogging.EntityChangeWithUsernameDto"];
            "application/json": components["schemas"]["Volo.Abp.AuditLogging.EntityChangeWithUsernameDto"];
            "text/json": components["schemas"]["Volo.Abp.AuditLogging.EntityChangeWithUsernameDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/audit-logging/audit-logs/entity-changes/{entityChangeId}": {
    get: {
      parameters: {
        path: {
          entityChangeId: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.AuditLogging.EntityChangeDto"];
            "application/json": components["schemas"]["Volo.Abp.AuditLogging.EntityChangeDto"];
            "text/json": components["schemas"]["Volo.Abp.AuditLogging.EntityChangeDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/cms-kit-admin/blogs/{id}": {
    get: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.CmsKit.Admin.Blogs.BlogDto"];
            "application/json": components["schemas"]["Volo.CmsKit.Admin.Blogs.BlogDto"];
            "text/json": components["schemas"]["Volo.CmsKit.Admin.Blogs.BlogDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
    put: {
      parameters: {
        path: {
          id: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["Volo.CmsKit.Admin.Blogs.UpdateBlogDto"];
          "text/json": components["schemas"]["Volo.CmsKit.Admin.Blogs.UpdateBlogDto"];
          "application/*+json": components["schemas"]["Volo.CmsKit.Admin.Blogs.UpdateBlogDto"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.CmsKit.Admin.Blogs.BlogDto"];
            "application/json": components["schemas"]["Volo.CmsKit.Admin.Blogs.BlogDto"];
            "text/json": components["schemas"]["Volo.CmsKit.Admin.Blogs.BlogDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
    delete: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** @description Success */
        200: never;
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/cms-kit-admin/blogs": {
    get: {
      parameters: {
        query?: {
          Filter?: string;
          Sorting?: string;
          SkipCount?: number;
          MaxResultCount?: number;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Application.Dtos.PagedResultDto`1[[Volo.CmsKit.Admin.Blogs.BlogDto, Volo.CmsKit.Admin.Application.Contracts, Version=7.2.2.0, Culture=neutral, PublicKeyToken=null]]"];
            "application/json": components["schemas"]["Volo.Abp.Application.Dtos.PagedResultDto`1[[Volo.CmsKit.Admin.Blogs.BlogDto, Volo.CmsKit.Admin.Application.Contracts, Version=7.2.2.0, Culture=neutral, PublicKeyToken=null]]"];
            "text/json": components["schemas"]["Volo.Abp.Application.Dtos.PagedResultDto`1[[Volo.CmsKit.Admin.Blogs.BlogDto, Volo.CmsKit.Admin.Application.Contracts, Version=7.2.2.0, Culture=neutral, PublicKeyToken=null]]"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
    post: {
      requestBody?: {
        content: {
          "application/json": components["schemas"]["Volo.CmsKit.Admin.Blogs.CreateBlogDto"];
          "text/json": components["schemas"]["Volo.CmsKit.Admin.Blogs.CreateBlogDto"];
          "application/*+json": components["schemas"]["Volo.CmsKit.Admin.Blogs.CreateBlogDto"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.CmsKit.Admin.Blogs.BlogDto"];
            "application/json": components["schemas"]["Volo.CmsKit.Admin.Blogs.BlogDto"];
            "text/json": components["schemas"]["Volo.CmsKit.Admin.Blogs.BlogDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/cms-kit/blogs/{blogId}/features/{featureName}": {
    get: {
      parameters: {
        path: {
          blogId: string;
          featureName: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.CmsKit.Blogs.BlogFeatureDto"];
            "application/json": components["schemas"]["Volo.CmsKit.Blogs.BlogFeatureDto"];
            "text/json": components["schemas"]["Volo.CmsKit.Blogs.BlogFeatureDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/cms-kit-admin/blogs/{blogId}/features": {
    get: {
      parameters: {
        path: {
          blogId: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.CmsKit.Blogs.BlogFeatureDto"][];
            "application/json": components["schemas"]["Volo.CmsKit.Blogs.BlogFeatureDto"][];
            "text/json": components["schemas"]["Volo.CmsKit.Blogs.BlogFeatureDto"][];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
    put: {
      parameters: {
        path: {
          blogId: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["Volo.CmsKit.Admin.Blogs.BlogFeatureInputDto"];
          "text/json": components["schemas"]["Volo.CmsKit.Admin.Blogs.BlogFeatureInputDto"];
          "application/*+json": components["schemas"]["Volo.CmsKit.Admin.Blogs.BlogFeatureInputDto"];
        };
      };
      responses: {
        /** @description Success */
        200: never;
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/cms-kit-admin/blogs/blog-posts": {
    get: {
      parameters: {
        query?: {
          Filter?: string;
          BlogId?: string;
          AuthorId?: string;
          TagId?: string;
          Status?: components["schemas"]["Volo.CmsKit.Blogs.BlogPostStatus"];
          Sorting?: string;
          SkipCount?: number;
          MaxResultCount?: number;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Application.Dtos.PagedResultDto`1[[Volo.CmsKit.Admin.Blogs.BlogPostListDto, Volo.CmsKit.Admin.Application.Contracts, Version=7.2.2.0, Culture=neutral, PublicKeyToken=null]]"];
            "application/json": components["schemas"]["Volo.Abp.Application.Dtos.PagedResultDto`1[[Volo.CmsKit.Admin.Blogs.BlogPostListDto, Volo.CmsKit.Admin.Application.Contracts, Version=7.2.2.0, Culture=neutral, PublicKeyToken=null]]"];
            "text/json": components["schemas"]["Volo.Abp.Application.Dtos.PagedResultDto`1[[Volo.CmsKit.Admin.Blogs.BlogPostListDto, Volo.CmsKit.Admin.Application.Contracts, Version=7.2.2.0, Culture=neutral, PublicKeyToken=null]]"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
    post: {
      requestBody?: {
        content: {
          "application/json": components["schemas"]["Volo.CmsKit.Admin.Blogs.CreateBlogPostDto"];
          "text/json": components["schemas"]["Volo.CmsKit.Admin.Blogs.CreateBlogPostDto"];
          "application/*+json": components["schemas"]["Volo.CmsKit.Admin.Blogs.CreateBlogPostDto"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.CmsKit.Admin.Blogs.BlogPostDto"];
            "application/json": components["schemas"]["Volo.CmsKit.Admin.Blogs.BlogPostDto"];
            "text/json": components["schemas"]["Volo.CmsKit.Admin.Blogs.BlogPostDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/cms-kit-admin/blogs/blog-posts/{id}": {
    get: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.CmsKit.Admin.Blogs.BlogPostDto"];
            "application/json": components["schemas"]["Volo.CmsKit.Admin.Blogs.BlogPostDto"];
            "text/json": components["schemas"]["Volo.CmsKit.Admin.Blogs.BlogPostDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
    put: {
      parameters: {
        path: {
          id: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["Volo.CmsKit.Admin.Blogs.UpdateBlogPostDto"];
          "text/json": components["schemas"]["Volo.CmsKit.Admin.Blogs.UpdateBlogPostDto"];
          "application/*+json": components["schemas"]["Volo.CmsKit.Admin.Blogs.UpdateBlogPostDto"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.CmsKit.Admin.Blogs.BlogPostDto"];
            "application/json": components["schemas"]["Volo.CmsKit.Admin.Blogs.BlogPostDto"];
            "text/json": components["schemas"]["Volo.CmsKit.Admin.Blogs.BlogPostDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
    delete: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** @description Success */
        200: never;
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/cms-kit-admin/blogs/blog-posts/{id}/publish": {
    post: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** @description Success */
        200: never;
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/cms-kit-admin/blogs/blog-posts/{id}/draft": {
    post: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** @description Success */
        200: never;
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/cms-kit-admin/blogs/blog-posts/create-and-publish": {
    post: {
      requestBody?: {
        content: {
          "application/json": components["schemas"]["Volo.CmsKit.Admin.Blogs.CreateBlogPostDto"];
          "text/json": components["schemas"]["Volo.CmsKit.Admin.Blogs.CreateBlogPostDto"];
          "application/*+json": components["schemas"]["Volo.CmsKit.Admin.Blogs.CreateBlogPostDto"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.CmsKit.Admin.Blogs.BlogPostDto"];
            "application/json": components["schemas"]["Volo.CmsKit.Admin.Blogs.BlogPostDto"];
            "text/json": components["schemas"]["Volo.CmsKit.Admin.Blogs.BlogPostDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/cms-kit-admin/blogs/blog-posts/{id}/send-to-review": {
    post: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** @description Success */
        200: never;
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/cms-kit-admin/blogs/blog-posts/create-and-send-to-review": {
    post: {
      requestBody?: {
        content: {
          "application/json": components["schemas"]["Volo.CmsKit.Admin.Blogs.CreateBlogPostDto"];
          "text/json": components["schemas"]["Volo.CmsKit.Admin.Blogs.CreateBlogPostDto"];
          "application/*+json": components["schemas"]["Volo.CmsKit.Admin.Blogs.CreateBlogPostDto"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.CmsKit.Admin.Blogs.BlogPostDto"];
            "application/json": components["schemas"]["Volo.CmsKit.Admin.Blogs.BlogPostDto"];
            "text/json": components["schemas"]["Volo.CmsKit.Admin.Blogs.BlogPostDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/cms-kit-admin/blogs/blog-posts/has-blogpost-waiting-for-review": {
    get: {
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": boolean;
            "application/json": boolean;
            "text/json": boolean;
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/cms-kit-public/blog-posts/{blogSlug}/{blogPostSlug}": {
    get: {
      parameters: {
        path: {
          blogSlug: string;
          blogPostSlug: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.CmsKit.Contents.BlogPostCommonDto"];
            "application/json": components["schemas"]["Volo.CmsKit.Contents.BlogPostCommonDto"];
            "text/json": components["schemas"]["Volo.CmsKit.Contents.BlogPostCommonDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/cms-kit-public/blog-posts/{blogSlug}": {
    get: {
      parameters: {
        query?: {
          AuthorId?: string;
          TagId?: string;
          Sorting?: string;
          SkipCount?: number;
          MaxResultCount?: number;
        };
        path: {
          blogSlug: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Application.Dtos.PagedResultDto`1[[Volo.CmsKit.Contents.BlogPostCommonDto, Volo.CmsKit.Common.Application.Contracts, Version=7.2.2.0, Culture=neutral, PublicKeyToken=null]]"];
            "application/json": components["schemas"]["Volo.Abp.Application.Dtos.PagedResultDto`1[[Volo.CmsKit.Contents.BlogPostCommonDto, Volo.CmsKit.Common.Application.Contracts, Version=7.2.2.0, Culture=neutral, PublicKeyToken=null]]"];
            "text/json": components["schemas"]["Volo.Abp.Application.Dtos.PagedResultDto`1[[Volo.CmsKit.Contents.BlogPostCommonDto, Volo.CmsKit.Common.Application.Contracts, Version=7.2.2.0, Culture=neutral, PublicKeyToken=null]]"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/cms-kit-public/blog-posts/authors": {
    get: {
      parameters: {
        query?: {
          Filter?: string;
          Sorting?: string;
          SkipCount?: number;
          MaxResultCount?: number;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Application.Dtos.PagedResultDto`1[[Volo.CmsKit.Users.CmsUserDto, Volo.CmsKit.Common.Application.Contracts, Version=7.2.2.0, Culture=neutral, PublicKeyToken=null]]"];
            "application/json": components["schemas"]["Volo.Abp.Application.Dtos.PagedResultDto`1[[Volo.CmsKit.Users.CmsUserDto, Volo.CmsKit.Common.Application.Contracts, Version=7.2.2.0, Culture=neutral, PublicKeyToken=null]]"];
            "text/json": components["schemas"]["Volo.Abp.Application.Dtos.PagedResultDto`1[[Volo.CmsKit.Users.CmsUserDto, Volo.CmsKit.Common.Application.Contracts, Version=7.2.2.0, Culture=neutral, PublicKeyToken=null]]"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/cms-kit-public/blog-posts/authors/{id}": {
    get: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.CmsKit.Users.CmsUserDto"];
            "application/json": components["schemas"]["Volo.CmsKit.Users.CmsUserDto"];
            "text/json": components["schemas"]["Volo.CmsKit.Users.CmsUserDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/cms-kit-public/blog-posts/{id}": {
    delete: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** @description Success */
        200: never;
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/camping/camping": {
    post: {
      requestBody?: {
        content: {
          "application/json": components["schemas"]["Tourmap.Camping.Campings.CampingDto+Create"];
          "text/json": components["schemas"]["Tourmap.Camping.Campings.CampingDto+Create"];
          "application/*+json": components["schemas"]["Tourmap.Camping.Campings.CampingDto+Create"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Tourmap.Camping.Campings.CampingDto"];
            "application/json": components["schemas"]["Tourmap.Camping.Campings.CampingDto"];
            "text/json": components["schemas"]["Tourmap.Camping.Campings.CampingDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/camping/camping/{id}": {
    put: {
      parameters: {
        path: {
          id: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["Tourmap.Camping.Campings.CampingDto+Update"];
          "text/json": components["schemas"]["Tourmap.Camping.Campings.CampingDto+Update"];
          "application/*+json": components["schemas"]["Tourmap.Camping.Campings.CampingDto+Update"];
        };
      };
      responses: {
        /** @description Success */
        200: never;
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
    delete: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** @description Success */
        200: never;
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/camping/camping/{id}/camping-cover-img/{mediaId}": {
    delete: {
      parameters: {
        path: {
          id: string;
          mediaId: string;
        };
      };
      responses: {
        /** @description Success */
        200: never;
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/camping/camping/move-camping-index/{campingAreaId}": {
    put: {
      parameters: {
        query?: {
          prevIndex?: number;
          nextIndex?: number;
        };
        path: {
          campingAreaId: string;
        };
      };
      responses: {
        /** @description Success */
        200: never;
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/camping/camping-area/browse": {
    get: {
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Application.Dtos.ListResultDto`1[[Tourmap.Camping.CampingAreas.CampingAreaDto+ForBrowse, Tourmap.Camping.Application.Contracts, Version=0.1.0.0, Culture=neutral, PublicKeyToken=null]]"];
            "application/json": components["schemas"]["Volo.Abp.Application.Dtos.ListResultDto`1[[Tourmap.Camping.CampingAreas.CampingAreaDto+ForBrowse, Tourmap.Camping.Application.Contracts, Version=0.1.0.0, Culture=neutral, PublicKeyToken=null]]"];
            "text/json": components["schemas"]["Volo.Abp.Application.Dtos.ListResultDto`1[[Tourmap.Camping.CampingAreas.CampingAreaDto+ForBrowse, Tourmap.Camping.Application.Contracts, Version=0.1.0.0, Culture=neutral, PublicKeyToken=null]]"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/camping/camping-area": {
    get: {
      parameters: {
        query?: {
          Sorting?: string;
          SkipCount?: number;
          MaxResultCount?: number;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Application.Dtos.ListResultDto`1[[Tourmap.Camping.CampingAreas.CampingAreaDto, Tourmap.Camping.Application.Contracts, Version=0.1.0.0, Culture=neutral, PublicKeyToken=null]]"];
            "application/json": components["schemas"]["Volo.Abp.Application.Dtos.ListResultDto`1[[Tourmap.Camping.CampingAreas.CampingAreaDto, Tourmap.Camping.Application.Contracts, Version=0.1.0.0, Culture=neutral, PublicKeyToken=null]]"];
            "text/json": components["schemas"]["Volo.Abp.Application.Dtos.ListResultDto`1[[Tourmap.Camping.CampingAreas.CampingAreaDto, Tourmap.Camping.Application.Contracts, Version=0.1.0.0, Culture=neutral, PublicKeyToken=null]]"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
    post: {
      requestBody?: {
        content: {
          "application/json": components["schemas"]["Tourmap.Camping.CampingAreas.CampingAreaDto+Create"];
          "text/json": components["schemas"]["Tourmap.Camping.CampingAreas.CampingAreaDto+Create"];
          "application/*+json": components["schemas"]["Tourmap.Camping.CampingAreas.CampingAreaDto+Create"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Tourmap.Camping.CampingAreas.CampingAreaDto"];
            "application/json": components["schemas"]["Tourmap.Camping.CampingAreas.CampingAreaDto"];
            "text/json": components["schemas"]["Tourmap.Camping.CampingAreas.CampingAreaDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/camping/camping-area/{id}": {
    put: {
      parameters: {
        path: {
          id: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["Tourmap.Camping.CampingAreas.CampingAreaDto+Update"];
          "text/json": components["schemas"]["Tourmap.Camping.CampingAreas.CampingAreaDto+Update"];
          "application/*+json": components["schemas"]["Tourmap.Camping.CampingAreas.CampingAreaDto+Update"];
        };
      };
      responses: {
        /** @description Success */
        200: never;
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
    delete: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** @description Success */
        200: never;
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/camping/camping-area/{id}/camping-area-cover-img": {
    delete: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** @description Success */
        200: never;
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/camping/camping-area/move-camping-area-index": {
    put: {
      parameters: {
        query?: {
          prevIndex?: number;
          nextIndex?: number;
        };
      };
      responses: {
        /** @description Success */
        200: never;
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/camping/camping-settings/camping-system-settings": {
    get: {
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Tourmap.Camping.Settings.CampingSettingsDto"];
            "application/json": components["schemas"]["Tourmap.Camping.Settings.CampingSettingsDto"];
            "text/json": components["schemas"]["Tourmap.Camping.Settings.CampingSettingsDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
    put: {
      requestBody?: {
        content: {
          "application/json": components["schemas"]["Tourmap.Camping.Settings.CampingSettingsDto"];
          "text/json": components["schemas"]["Tourmap.Camping.Settings.CampingSettingsDto"];
          "application/*+json": components["schemas"]["Tourmap.Camping.Settings.CampingSettingsDto"];
        };
      };
      responses: {
        /** @description Success */
        200: never;
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/identity/claim-types": {
    get: {
      parameters: {
        query?: {
          Filter?: string;
          Sorting?: string;
          SkipCount?: number;
          MaxResultCount?: number;
          ExtraProperties?: {
            [key: string]: unknown;
          };
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Application.Dtos.PagedResultDto`1[[Volo.Abp.Identity.ClaimTypeDto, Volo.Abp.Identity.Pro.Application.Contracts, Version=7.2.2.0, Culture=neutral, PublicKeyToken=null]]"];
            "application/json": components["schemas"]["Volo.Abp.Application.Dtos.PagedResultDto`1[[Volo.Abp.Identity.ClaimTypeDto, Volo.Abp.Identity.Pro.Application.Contracts, Version=7.2.2.0, Culture=neutral, PublicKeyToken=null]]"];
            "text/json": components["schemas"]["Volo.Abp.Application.Dtos.PagedResultDto`1[[Volo.Abp.Identity.ClaimTypeDto, Volo.Abp.Identity.Pro.Application.Contracts, Version=7.2.2.0, Culture=neutral, PublicKeyToken=null]]"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
    post: {
      requestBody?: {
        content: {
          "application/json": components["schemas"]["Volo.Abp.Identity.CreateClaimTypeDto"];
          "text/json": components["schemas"]["Volo.Abp.Identity.CreateClaimTypeDto"];
          "application/*+json": components["schemas"]["Volo.Abp.Identity.CreateClaimTypeDto"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Identity.ClaimTypeDto"];
            "application/json": components["schemas"]["Volo.Abp.Identity.ClaimTypeDto"];
            "text/json": components["schemas"]["Volo.Abp.Identity.ClaimTypeDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/identity/claim-types/{id}": {
    get: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Identity.ClaimTypeDto"];
            "application/json": components["schemas"]["Volo.Abp.Identity.ClaimTypeDto"];
            "text/json": components["schemas"]["Volo.Abp.Identity.ClaimTypeDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
    put: {
      parameters: {
        path: {
          id: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["Volo.Abp.Identity.UpdateClaimTypeDto"];
          "text/json": components["schemas"]["Volo.Abp.Identity.UpdateClaimTypeDto"];
          "application/*+json": components["schemas"]["Volo.Abp.Identity.UpdateClaimTypeDto"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Identity.ClaimTypeDto"];
            "application/json": components["schemas"]["Volo.Abp.Identity.ClaimTypeDto"];
            "text/json": components["schemas"]["Volo.Abp.Identity.ClaimTypeDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
    delete: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** @description Success */
        200: never;
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/cms-kit-admin/comments": {
    get: {
      parameters: {
        query?: {
          EntityType?: string;
          Text?: string;
          RepliedCommentId?: string;
          Author?: string;
          CreationStartDate?: string;
          CreationEndDate?: string;
          Sorting?: string;
          SkipCount?: number;
          MaxResultCount?: number;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Application.Dtos.PagedResultDto`1[[Volo.CmsKit.Admin.Comments.CommentWithAuthorDto, Volo.CmsKit.Admin.Application.Contracts, Version=7.2.2.0, Culture=neutral, PublicKeyToken=null]]"];
            "application/json": components["schemas"]["Volo.Abp.Application.Dtos.PagedResultDto`1[[Volo.CmsKit.Admin.Comments.CommentWithAuthorDto, Volo.CmsKit.Admin.Application.Contracts, Version=7.2.2.0, Culture=neutral, PublicKeyToken=null]]"];
            "text/json": components["schemas"]["Volo.Abp.Application.Dtos.PagedResultDto`1[[Volo.CmsKit.Admin.Comments.CommentWithAuthorDto, Volo.CmsKit.Admin.Application.Contracts, Version=7.2.2.0, Culture=neutral, PublicKeyToken=null]]"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/cms-kit-admin/comments/{id}": {
    get: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.CmsKit.Admin.Comments.CommentWithAuthorDto"];
            "application/json": components["schemas"]["Volo.CmsKit.Admin.Comments.CommentWithAuthorDto"];
            "text/json": components["schemas"]["Volo.CmsKit.Admin.Comments.CommentWithAuthorDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
    delete: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** @description Success */
        200: never;
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/cms-kit-public/comments/{entityType}/{entityId}": {
    get: {
      parameters: {
        path: {
          entityType: string;
          entityId: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Application.Dtos.ListResultDto`1[[Volo.CmsKit.Public.Comments.CommentWithDetailsDto, Volo.CmsKit.Public.Application.Contracts, Version=7.2.2.0, Culture=neutral, PublicKeyToken=null]]"];
            "application/json": components["schemas"]["Volo.Abp.Application.Dtos.ListResultDto`1[[Volo.CmsKit.Public.Comments.CommentWithDetailsDto, Volo.CmsKit.Public.Application.Contracts, Version=7.2.2.0, Culture=neutral, PublicKeyToken=null]]"];
            "text/json": components["schemas"]["Volo.Abp.Application.Dtos.ListResultDto`1[[Volo.CmsKit.Public.Comments.CommentWithDetailsDto, Volo.CmsKit.Public.Application.Contracts, Version=7.2.2.0, Culture=neutral, PublicKeyToken=null]]"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
    post: {
      parameters: {
        path: {
          entityType: string;
          entityId: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["Volo.CmsKit.Public.Comments.CreateCommentInput"];
          "text/json": components["schemas"]["Volo.CmsKit.Public.Comments.CreateCommentInput"];
          "application/*+json": components["schemas"]["Volo.CmsKit.Public.Comments.CreateCommentInput"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.CmsKit.Public.Comments.CommentDto"];
            "application/json": components["schemas"]["Volo.CmsKit.Public.Comments.CommentDto"];
            "text/json": components["schemas"]["Volo.CmsKit.Public.Comments.CommentDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/cms-kit-public/comments/{id}": {
    put: {
      parameters: {
        path: {
          id: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["Volo.CmsKit.Public.Comments.UpdateCommentInput"];
          "text/json": components["schemas"]["Volo.CmsKit.Public.Comments.UpdateCommentInput"];
          "application/*+json": components["schemas"]["Volo.CmsKit.Public.Comments.UpdateCommentInput"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.CmsKit.Public.Comments.CommentDto"];
            "application/json": components["schemas"]["Volo.CmsKit.Public.Comments.CommentDto"];
            "text/json": components["schemas"]["Volo.CmsKit.Public.Comments.CommentDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
    delete: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** @description Success */
        200: never;
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/product-service/daily-period-scheme/month/{productGroupId}": {
    get: {
      parameters: {
        query?: {
          year?: number;
          month?: number;
        };
        path: {
          productGroupId: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Tourmap.ProductService.DailyPeriodSchemes.DailyPeriodSchemeDto+ForCalendar"];
            "application/json": components["schemas"]["Tourmap.ProductService.DailyPeriodSchemes.DailyPeriodSchemeDto+ForCalendar"];
            "text/json": components["schemas"]["Tourmap.ProductService.DailyPeriodSchemes.DailyPeriodSchemeDto+ForCalendar"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/product-service/daily-period-scheme": {
    put: {
      parameters: {
        query?: {
          dailyPeriodSchemeId?: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["Tourmap.ProductService.DailyPeriodSchemes.DailyPeriodSchemeDto+Update"];
          "text/json": components["schemas"]["Tourmap.ProductService.DailyPeriodSchemes.DailyPeriodSchemeDto+Update"];
          "application/*+json": components["schemas"]["Tourmap.ProductService.DailyPeriodSchemes.DailyPeriodSchemeDto+Update"];
        };
      };
      responses: {
        /** @description Success */
        200: never;
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
    post: {
      requestBody?: {
        content: {
          "application/json": components["schemas"]["Tourmap.ProductService.DailyPeriodSchemes.DailyPeriodSchemeDto+Update"];
          "text/json": components["schemas"]["Tourmap.ProductService.DailyPeriodSchemes.DailyPeriodSchemeDto+Update"];
          "application/*+json": components["schemas"]["Tourmap.ProductService.DailyPeriodSchemes.DailyPeriodSchemeDto+Update"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Tourmap.ProductService.DailyPeriodSchemes.DailyPeriodSchemeDto"];
            "application/json": components["schemas"]["Tourmap.ProductService.DailyPeriodSchemes.DailyPeriodSchemeDto"];
            "text/json": components["schemas"]["Tourmap.ProductService.DailyPeriodSchemes.DailyPeriodSchemeDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/product-service/daily-period-scheme/{id}": {
    delete: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** @description Success */
        200: never;
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/saas/editions/{id}": {
    get: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.Saas.Host.Dtos.EditionDto"];
            "application/json": components["schemas"]["Volo.Saas.Host.Dtos.EditionDto"];
            "text/json": components["schemas"]["Volo.Saas.Host.Dtos.EditionDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
    put: {
      parameters: {
        path: {
          id: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["Volo.Saas.Host.Dtos.EditionUpdateDto"];
          "text/json": components["schemas"]["Volo.Saas.Host.Dtos.EditionUpdateDto"];
          "application/*+json": components["schemas"]["Volo.Saas.Host.Dtos.EditionUpdateDto"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.Saas.Host.Dtos.EditionDto"];
            "application/json": components["schemas"]["Volo.Saas.Host.Dtos.EditionDto"];
            "text/json": components["schemas"]["Volo.Saas.Host.Dtos.EditionDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
    delete: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** @description Success */
        200: never;
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/saas/editions": {
    get: {
      parameters: {
        query?: {
          Filter?: string;
          Sorting?: string;
          SkipCount?: number;
          MaxResultCount?: number;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Application.Dtos.PagedResultDto`1[[Volo.Saas.Host.Dtos.EditionDto, Volo.Saas.Host.Application.Contracts, Version=7.2.2.0, Culture=neutral, PublicKeyToken=null]]"];
            "application/json": components["schemas"]["Volo.Abp.Application.Dtos.PagedResultDto`1[[Volo.Saas.Host.Dtos.EditionDto, Volo.Saas.Host.Application.Contracts, Version=7.2.2.0, Culture=neutral, PublicKeyToken=null]]"];
            "text/json": components["schemas"]["Volo.Abp.Application.Dtos.PagedResultDto`1[[Volo.Saas.Host.Dtos.EditionDto, Volo.Saas.Host.Application.Contracts, Version=7.2.2.0, Culture=neutral, PublicKeyToken=null]]"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
    post: {
      requestBody?: {
        content: {
          "application/json": components["schemas"]["Volo.Saas.Host.Dtos.EditionCreateDto"];
          "text/json": components["schemas"]["Volo.Saas.Host.Dtos.EditionCreateDto"];
          "application/*+json": components["schemas"]["Volo.Saas.Host.Dtos.EditionCreateDto"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.Saas.Host.Dtos.EditionDto"];
            "application/json": components["schemas"]["Volo.Saas.Host.Dtos.EditionDto"];
            "text/json": components["schemas"]["Volo.Saas.Host.Dtos.EditionDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/saas/editions/statistics/usage-statistic": {
    get: {
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.Saas.Host.GetEditionUsageStatisticsResultDto"];
            "application/json": components["schemas"]["Volo.Saas.Host.GetEditionUsageStatisticsResultDto"];
            "text/json": components["schemas"]["Volo.Saas.Host.GetEditionUsageStatisticsResultDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/saas/editions/plan-lookup": {
    get: {
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.Payment.Plans.PlanDto"][];
            "application/json": components["schemas"]["Volo.Payment.Plans.PlanDto"][];
            "text/json": components["schemas"]["Volo.Payment.Plans.PlanDto"][];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/saas/subscription": {
    post: {
      parameters: {
        query?: {
          editionId?: string;
          tenantId?: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.Payment.Requests.PaymentRequestWithDetailsDto"];
            "application/json": components["schemas"]["Volo.Payment.Requests.PaymentRequestWithDetailsDto"];
            "text/json": components["schemas"]["Volo.Payment.Requests.PaymentRequestWithDetailsDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/setting-management/emailing": {
    get: {
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.SettingManagement.EmailSettingsDto"];
            "application/json": components["schemas"]["Volo.Abp.SettingManagement.EmailSettingsDto"];
            "text/json": components["schemas"]["Volo.Abp.SettingManagement.EmailSettingsDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
    post: {
      requestBody?: {
        content: {
          "application/json": components["schemas"]["Volo.Abp.SettingManagement.UpdateEmailSettingsDto"];
          "text/json": components["schemas"]["Volo.Abp.SettingManagement.UpdateEmailSettingsDto"];
          "application/*+json": components["schemas"]["Volo.Abp.SettingManagement.UpdateEmailSettingsDto"];
        };
      };
      responses: {
        /** @description Success */
        200: never;
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/setting-management/emailing/send-test-email": {
    post: {
      requestBody?: {
        content: {
          "application/json": components["schemas"]["Volo.Abp.SettingManagement.SendTestEmailInput"];
          "text/json": components["schemas"]["Volo.Abp.SettingManagement.SendTestEmailInput"];
          "application/*+json": components["schemas"]["Volo.Abp.SettingManagement.SendTestEmailInput"];
        };
      };
      responses: {
        /** @description Success */
        200: never;
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/product-service/entity-schedules/entity-schedules-by-entity-id": {
    get: {
      parameters: {
        query?: {
          productGroupId?: string;
          startTime?: string;
          endTime?: string;
          type?: components["schemas"]["Tourmap.ProductService.EntitySchedules.EntityScheduleType"];
          entityId?: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Tourmap.ProductService.EntitySchedules.EntityScheduleDto+CalculateSchedulesResult"][];
            "application/json": components["schemas"]["Tourmap.ProductService.EntitySchedules.EntityScheduleDto+CalculateSchedulesResult"][];
            "text/json": components["schemas"]["Tourmap.ProductService.EntitySchedules.EntityScheduleDto+CalculateSchedulesResult"][];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/product-service/entity-schedules/entity-schedules-of-month-by-entity-id": {
    get: {
      parameters: {
        query?: {
          productGroupId?: string;
          month?: string;
          type?: components["schemas"]["Tourmap.ProductService.EntitySchedules.EntityScheduleType"];
          entityId?: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Tourmap.ProductService.EntitySchedules.EntityScheduleDto+CalculateSchedulesResult"][];
            "application/json": components["schemas"]["Tourmap.ProductService.EntitySchedules.EntityScheduleDto+CalculateSchedulesResult"][];
            "text/json": components["schemas"]["Tourmap.ProductService.EntitySchedules.EntityScheduleDto+CalculateSchedulesResult"][];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/product-service/entity-schedules/{id}/entity-schedule": {
    get: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Tourmap.ProductService.EntitySchedules.EntityScheduleDto"];
            "application/json": components["schemas"]["Tourmap.ProductService.EntitySchedules.EntityScheduleDto"];
            "text/json": components["schemas"]["Tourmap.ProductService.EntitySchedules.EntityScheduleDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/product-service/entity-schedules/entity-schedule": {
    post: {
      parameters: {
        query?: {
          type?: components["schemas"]["Tourmap.ProductService.EntitySchedules.EntityScheduleType"];
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["Tourmap.ProductService.EntitySchedules.EntityScheduleDto+Create"];
          "text/json": components["schemas"]["Tourmap.ProductService.EntitySchedules.EntityScheduleDto+Create"];
          "application/*+json": components["schemas"]["Tourmap.ProductService.EntitySchedules.EntityScheduleDto+Create"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Tourmap.ProductService.EntitySchedules.EntityScheduleDto"];
            "application/json": components["schemas"]["Tourmap.ProductService.EntitySchedules.EntityScheduleDto"];
            "text/json": components["schemas"]["Tourmap.ProductService.EntitySchedules.EntityScheduleDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/product-service/entity-schedules/{id}/entity-schedule-usable": {
    put: {
      parameters: {
        query?: {
          periodUsable?: components["schemas"]["EasyAbp.BookingService.AssetSchedules.PeriodUsable"];
        };
        path: {
          id: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Tourmap.ProductService.EntitySchedules.EntityScheduleDto"];
            "application/json": components["schemas"]["Tourmap.ProductService.EntitySchedules.EntityScheduleDto"];
            "text/json": components["schemas"]["Tourmap.ProductService.EntitySchedules.EntityScheduleDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/product-service/entity-schedules/{id}/entity-schedules-of-month": {
    delete: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** @description Success */
        200: never;
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/cms-kit-admin/entity-tags": {
    put: {
      requestBody?: {
        content: {
          "application/json": components["schemas"]["Volo.CmsKit.Admin.Tags.EntityTagSetDto"];
          "text/json": components["schemas"]["Volo.CmsKit.Admin.Tags.EntityTagSetDto"];
          "application/*+json": components["schemas"]["Volo.CmsKit.Admin.Tags.EntityTagSetDto"];
        };
      };
      responses: {
        /** @description Success */
        200: never;
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
    post: {
      requestBody?: {
        content: {
          "application/json": components["schemas"]["Volo.CmsKit.Admin.Tags.EntityTagCreateDto"];
          "text/json": components["schemas"]["Volo.CmsKit.Admin.Tags.EntityTagCreateDto"];
          "application/*+json": components["schemas"]["Volo.CmsKit.Admin.Tags.EntityTagCreateDto"];
        };
      };
      responses: {
        /** @description Success */
        200: never;
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
    delete: {
      parameters: {
        query: {
          TagId: string;
          EntityType: string;
          EntityId: string;
        };
      };
      responses: {
        /** @description Success */
        200: never;
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/identity/external-login": {
    post: {
      responses: {
        /** @description Success */
        200: never;
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/feature-management/features": {
    get: {
      parameters: {
        query?: {
          providerName?: string;
          providerKey?: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.FeatureManagement.GetFeatureListResultDto"];
            "application/json": components["schemas"]["Volo.Abp.FeatureManagement.GetFeatureListResultDto"];
            "text/json": components["schemas"]["Volo.Abp.FeatureManagement.GetFeatureListResultDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
    put: {
      parameters: {
        query?: {
          providerName?: string;
          providerKey?: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["Volo.Abp.FeatureManagement.UpdateFeaturesDto"];
          "text/json": components["schemas"]["Volo.Abp.FeatureManagement.UpdateFeaturesDto"];
          "application/*+json": components["schemas"]["Volo.Abp.FeatureManagement.UpdateFeaturesDto"];
        };
      };
      responses: {
        /** @description Success */
        200: never;
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
    delete: {
      parameters: {
        query?: {
          providerName?: string;
          providerKey?: string;
        };
      };
      responses: {
        /** @description Success */
        200: never;
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/cms-kit-admin/global-resources": {
    get: {
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.CmsKit.Admin.GlobalResources.GlobalResourcesDto"];
            "application/json": components["schemas"]["Volo.CmsKit.Admin.GlobalResources.GlobalResourcesDto"];
            "text/json": components["schemas"]["Volo.CmsKit.Admin.GlobalResources.GlobalResourcesDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
    post: {
      requestBody?: {
        content: {
          "application/json": components["schemas"]["Volo.CmsKit.Admin.GlobalResources.GlobalResourcesUpdateDto"];
          "text/json": components["schemas"]["Volo.CmsKit.Admin.GlobalResources.GlobalResourcesUpdateDto"];
          "application/*+json": components["schemas"]["Volo.CmsKit.Admin.GlobalResources.GlobalResourcesUpdateDto"];
        };
      };
      responses: {
        /** @description Success */
        200: never;
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/cms-kit-public/global-resources/script": {
    get: {
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.CmsKit.Public.GlobalResources.GlobalResourceDto"];
            "application/json": components["schemas"]["Volo.CmsKit.Public.GlobalResources.GlobalResourceDto"];
            "text/json": components["schemas"]["Volo.CmsKit.Public.GlobalResources.GlobalResourceDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/cms-kit-public/global-resources/style": {
    get: {
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.CmsKit.Public.GlobalResources.GlobalResourceDto"];
            "application/json": components["schemas"]["Volo.CmsKit.Public.GlobalResources.GlobalResourceDto"];
            "text/json": components["schemas"]["Volo.CmsKit.Public.GlobalResources.GlobalResourceDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/product-service/interval-period-scheme": {
    get: {
      parameters: {
        query?: {
          productGroupId?: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Application.Dtos.ListResultDto`1[[Tourmap.ProductService.IntervalPeriodSchemes.IntervalPeriodSchemeDto, Tourmap.ProductService.Application.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"];
            "application/json": components["schemas"]["Volo.Abp.Application.Dtos.ListResultDto`1[[Tourmap.ProductService.IntervalPeriodSchemes.IntervalPeriodSchemeDto, Tourmap.ProductService.Application.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"];
            "text/json": components["schemas"]["Volo.Abp.Application.Dtos.ListResultDto`1[[Tourmap.ProductService.IntervalPeriodSchemes.IntervalPeriodSchemeDto, Tourmap.ProductService.Application.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
    post: {
      requestBody?: {
        content: {
          "application/json": components["schemas"]["Tourmap.ProductService.IntervalPeriodSchemes.IntervalPeriodSchemeDto+Create"];
          "text/json": components["schemas"]["Tourmap.ProductService.IntervalPeriodSchemes.IntervalPeriodSchemeDto+Create"];
          "application/*+json": components["schemas"]["Tourmap.ProductService.IntervalPeriodSchemes.IntervalPeriodSchemeDto+Create"];
        };
      };
      responses: {
        /** @description Success */
        200: never;
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/product-service/interval-period-scheme/{id}": {
    put: {
      parameters: {
        path: {
          id: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["Tourmap.ProductService.IntervalPeriodSchemes.IntervalPeriodSchemeDto+Update"];
          "text/json": components["schemas"]["Tourmap.ProductService.IntervalPeriodSchemes.IntervalPeriodSchemeDto+Update"];
          "application/*+json": components["schemas"]["Tourmap.ProductService.IntervalPeriodSchemes.IntervalPeriodSchemeDto+Update"];
        };
      };
      responses: {
        /** @description Success */
        200: never;
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
    delete: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** @description Success */
        200: never;
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/language-management/languages/all": {
    get: {
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Application.Dtos.ListResultDto`1[[Volo.Abp.LanguageManagement.Dto.LanguageDto, Volo.Abp.LanguageManagement.Application.Contracts, Version=7.2.2.0, Culture=neutral, PublicKeyToken=null]]"];
            "application/json": components["schemas"]["Volo.Abp.Application.Dtos.ListResultDto`1[[Volo.Abp.LanguageManagement.Dto.LanguageDto, Volo.Abp.LanguageManagement.Application.Contracts, Version=7.2.2.0, Culture=neutral, PublicKeyToken=null]]"];
            "text/json": components["schemas"]["Volo.Abp.Application.Dtos.ListResultDto`1[[Volo.Abp.LanguageManagement.Dto.LanguageDto, Volo.Abp.LanguageManagement.Application.Contracts, Version=7.2.2.0, Culture=neutral, PublicKeyToken=null]]"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/language-management/languages": {
    get: {
      parameters: {
        query?: {
          Filter?: string;
          ResourceName?: string;
          BaseCultureName?: string;
          TargetCultureName?: string;
          GetOnlyEmptyValues?: boolean;
          Sorting?: string;
          SkipCount?: number;
          MaxResultCount?: number;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Application.Dtos.PagedResultDto`1[[Volo.Abp.LanguageManagement.Dto.LanguageDto, Volo.Abp.LanguageManagement.Application.Contracts, Version=7.2.2.0, Culture=neutral, PublicKeyToken=null]]"];
            "application/json": components["schemas"]["Volo.Abp.Application.Dtos.PagedResultDto`1[[Volo.Abp.LanguageManagement.Dto.LanguageDto, Volo.Abp.LanguageManagement.Application.Contracts, Version=7.2.2.0, Culture=neutral, PublicKeyToken=null]]"];
            "text/json": components["schemas"]["Volo.Abp.Application.Dtos.PagedResultDto`1[[Volo.Abp.LanguageManagement.Dto.LanguageDto, Volo.Abp.LanguageManagement.Application.Contracts, Version=7.2.2.0, Culture=neutral, PublicKeyToken=null]]"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
    post: {
      requestBody?: {
        content: {
          "application/json": components["schemas"]["Volo.Abp.LanguageManagement.Dto.CreateLanguageDto"];
          "text/json": components["schemas"]["Volo.Abp.LanguageManagement.Dto.CreateLanguageDto"];
          "application/*+json": components["schemas"]["Volo.Abp.LanguageManagement.Dto.CreateLanguageDto"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.LanguageManagement.Dto.LanguageDto"];
            "application/json": components["schemas"]["Volo.Abp.LanguageManagement.Dto.LanguageDto"];
            "text/json": components["schemas"]["Volo.Abp.LanguageManagement.Dto.LanguageDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/language-management/languages/{id}": {
    get: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.LanguageManagement.Dto.LanguageDto"];
            "application/json": components["schemas"]["Volo.Abp.LanguageManagement.Dto.LanguageDto"];
            "text/json": components["schemas"]["Volo.Abp.LanguageManagement.Dto.LanguageDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
    put: {
      parameters: {
        path: {
          id: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["Volo.Abp.LanguageManagement.Dto.UpdateLanguageDto"];
          "text/json": components["schemas"]["Volo.Abp.LanguageManagement.Dto.UpdateLanguageDto"];
          "application/*+json": components["schemas"]["Volo.Abp.LanguageManagement.Dto.UpdateLanguageDto"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.LanguageManagement.Dto.LanguageDto"];
            "application/json": components["schemas"]["Volo.Abp.LanguageManagement.Dto.LanguageDto"];
            "text/json": components["schemas"]["Volo.Abp.LanguageManagement.Dto.LanguageDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
    delete: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** @description Success */
        200: never;
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/language-management/languages/{id}/set-as-default": {
    put: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** @description Success */
        200: never;
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/language-management/languages/resources": {
    get: {
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.LanguageManagement.Dto.LanguageResourceDto"][];
            "application/json": components["schemas"]["Volo.Abp.LanguageManagement.Dto.LanguageResourceDto"][];
            "text/json": components["schemas"]["Volo.Abp.LanguageManagement.Dto.LanguageResourceDto"][];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/language-management/languages/culture-list": {
    get: {
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.LanguageManagement.Dto.CultureInfoDto"][];
            "application/json": components["schemas"]["Volo.Abp.LanguageManagement.Dto.CultureInfoDto"][];
            "text/json": components["schemas"]["Volo.Abp.LanguageManagement.Dto.CultureInfoDto"][];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/language-management/languages/flag-list": {
    get: {
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": string[];
            "application/json": string[];
            "text/json": string[];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/language-management/language-texts": {
    get: {
      parameters: {
        query?: {
          Filter?: string;
          ResourceName?: string;
          BaseCultureName?: string;
          TargetCultureName?: string;
          GetOnlyEmptyValues?: boolean;
          Sorting?: string;
          SkipCount?: number;
          MaxResultCount?: number;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Application.Dtos.PagedResultDto`1[[Volo.Abp.LanguageManagement.Dto.LanguageTextDto, Volo.Abp.LanguageManagement.Application.Contracts, Version=7.2.2.0, Culture=neutral, PublicKeyToken=null]]"];
            "application/json": components["schemas"]["Volo.Abp.Application.Dtos.PagedResultDto`1[[Volo.Abp.LanguageManagement.Dto.LanguageTextDto, Volo.Abp.LanguageManagement.Application.Contracts, Version=7.2.2.0, Culture=neutral, PublicKeyToken=null]]"];
            "text/json": components["schemas"]["Volo.Abp.Application.Dtos.PagedResultDto`1[[Volo.Abp.LanguageManagement.Dto.LanguageTextDto, Volo.Abp.LanguageManagement.Application.Contracts, Version=7.2.2.0, Culture=neutral, PublicKeyToken=null]]"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/language-management/language-texts/{resourceName}/{cultureName}/{name}": {
    get: {
      parameters: {
        query?: {
          baseCultureName?: string;
        };
        path: {
          resourceName: string;
          cultureName: string;
          name: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.LanguageManagement.Dto.LanguageTextDto"];
            "application/json": components["schemas"]["Volo.Abp.LanguageManagement.Dto.LanguageTextDto"];
            "text/json": components["schemas"]["Volo.Abp.LanguageManagement.Dto.LanguageTextDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
    put: {
      parameters: {
        query?: {
          value?: string;
        };
        path: {
          resourceName: string;
          cultureName: string;
          name: string;
        };
      };
      responses: {
        /** @description Success */
        200: never;
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/language-management/language-texts/{resourceName}/{cultureName}/{name}/restore": {
    put: {
      parameters: {
        path: {
          resourceName: string;
          cultureName: string;
          name: string;
        };
      };
      responses: {
        /** @description Success */
        200: never;
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/cms-kit/media/{id}": {
    get: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": string;
            "application/json": string;
            "text/json": string;
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/cms-kit-admin/media/{entityType}": {
    post: {
      parameters: {
        query: {
          Name: string;
        };
        path: {
          entityType: string;
        };
      };
      requestBody?: {
        content: {
          "multipart/form-data": {
            /** Format: binary */
            File?: string;
          };
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.CmsKit.Admin.MediaDescriptors.MediaDescriptorDto"];
            "application/json": components["schemas"]["Volo.CmsKit.Admin.MediaDescriptors.MediaDescriptorDto"];
            "text/json": components["schemas"]["Volo.CmsKit.Admin.MediaDescriptors.MediaDescriptorDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/cms-kit-admin/media/{id}": {
    delete: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** @description Success */
        200: never;
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/cms-kit-admin/menu-items": {
    get: {
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Application.Dtos.ListResultDto`1[[Volo.CmsKit.Menus.MenuItemDto, Volo.CmsKit.Common.Application.Contracts, Version=7.2.2.0, Culture=neutral, PublicKeyToken=null]]"];
            "application/json": components["schemas"]["Volo.Abp.Application.Dtos.ListResultDto`1[[Volo.CmsKit.Menus.MenuItemDto, Volo.CmsKit.Common.Application.Contracts, Version=7.2.2.0, Culture=neutral, PublicKeyToken=null]]"];
            "text/json": components["schemas"]["Volo.Abp.Application.Dtos.ListResultDto`1[[Volo.CmsKit.Menus.MenuItemDto, Volo.CmsKit.Common.Application.Contracts, Version=7.2.2.0, Culture=neutral, PublicKeyToken=null]]"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
    post: {
      requestBody?: {
        content: {
          "application/json": components["schemas"]["Volo.CmsKit.Admin.Menus.MenuItemCreateInput"];
          "text/json": components["schemas"]["Volo.CmsKit.Admin.Menus.MenuItemCreateInput"];
          "application/*+json": components["schemas"]["Volo.CmsKit.Admin.Menus.MenuItemCreateInput"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.CmsKit.Menus.MenuItemDto"];
            "application/json": components["schemas"]["Volo.CmsKit.Menus.MenuItemDto"];
            "text/json": components["schemas"]["Volo.CmsKit.Menus.MenuItemDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/cms-kit-admin/menu-items/{id}": {
    get: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.CmsKit.Menus.MenuItemDto"];
            "application/json": components["schemas"]["Volo.CmsKit.Menus.MenuItemDto"];
            "text/json": components["schemas"]["Volo.CmsKit.Menus.MenuItemDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
    put: {
      parameters: {
        path: {
          id: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["Volo.CmsKit.Admin.Menus.MenuItemUpdateInput"];
          "text/json": components["schemas"]["Volo.CmsKit.Admin.Menus.MenuItemUpdateInput"];
          "application/*+json": components["schemas"]["Volo.CmsKit.Admin.Menus.MenuItemUpdateInput"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.CmsKit.Menus.MenuItemDto"];
            "application/json": components["schemas"]["Volo.CmsKit.Menus.MenuItemDto"];
            "text/json": components["schemas"]["Volo.CmsKit.Menus.MenuItemDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
    delete: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** @description Success */
        200: never;
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/cms-kit-admin/menu-items/{id}/move": {
    put: {
      parameters: {
        path: {
          id: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["Volo.CmsKit.Admin.Menus.MenuItemMoveInput"];
          "text/json": components["schemas"]["Volo.CmsKit.Admin.Menus.MenuItemMoveInput"];
          "application/*+json": components["schemas"]["Volo.CmsKit.Admin.Menus.MenuItemMoveInput"];
        };
      };
      responses: {
        /** @description Success */
        200: never;
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/cms-kit-admin/menu-items/lookup/pages": {
    get: {
      parameters: {
        query?: {
          Filter?: string;
          Sorting?: string;
          SkipCount?: number;
          MaxResultCount?: number;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Application.Dtos.PagedResultDto`1[[Volo.CmsKit.Admin.Menus.PageLookupDto, Volo.CmsKit.Admin.Application.Contracts, Version=7.2.2.0, Culture=neutral, PublicKeyToken=null]]"];
            "application/json": components["schemas"]["Volo.Abp.Application.Dtos.PagedResultDto`1[[Volo.CmsKit.Admin.Menus.PageLookupDto, Volo.CmsKit.Admin.Application.Contracts, Version=7.2.2.0, Culture=neutral, PublicKeyToken=null]]"];
            "text/json": components["schemas"]["Volo.Abp.Application.Dtos.PagedResultDto`1[[Volo.CmsKit.Admin.Menus.PageLookupDto, Volo.CmsKit.Admin.Application.Contracts, Version=7.2.2.0, Culture=neutral, PublicKeyToken=null]]"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/cms-kit-public/menu-items": {
    get: {
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.CmsKit.Menus.MenuItemDto"][];
            "application/json": components["schemas"]["Volo.CmsKit.Menus.MenuItemDto"][];
            "text/json": components["schemas"]["Volo.CmsKit.Menus.MenuItemDto"][];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/identity/organization-units/{id}/roles": {
    get: {
      parameters: {
        query?: {
          Sorting?: string;
          SkipCount?: number;
          MaxResultCount?: number;
        };
        path: {
          id: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Application.Dtos.PagedResultDto`1[[Volo.Abp.Identity.IdentityRoleDto, Volo.Abp.Identity.Pro.Application.Contracts, Version=7.2.2.0, Culture=neutral, PublicKeyToken=null]]"];
            "application/json": components["schemas"]["Volo.Abp.Application.Dtos.PagedResultDto`1[[Volo.Abp.Identity.IdentityRoleDto, Volo.Abp.Identity.Pro.Application.Contracts, Version=7.2.2.0, Culture=neutral, PublicKeyToken=null]]"];
            "text/json": components["schemas"]["Volo.Abp.Application.Dtos.PagedResultDto`1[[Volo.Abp.Identity.IdentityRoleDto, Volo.Abp.Identity.Pro.Application.Contracts, Version=7.2.2.0, Culture=neutral, PublicKeyToken=null]]"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
    put: {
      parameters: {
        path: {
          id: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["Volo.Abp.Identity.OrganizationUnitRoleInput"];
          "text/json": components["schemas"]["Volo.Abp.Identity.OrganizationUnitRoleInput"];
          "application/*+json": components["schemas"]["Volo.Abp.Identity.OrganizationUnitRoleInput"];
        };
      };
      responses: {
        /** @description Success */
        200: never;
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/identity/organization-units/{id}/members": {
    get: {
      parameters: {
        query?: {
          Filter?: string;
          RoleId?: string;
          OrganizationUnitId?: string;
          UserName?: string;
          PhoneNumber?: string;
          EmailAddress?: string;
          Name?: string;
          Surname?: string;
          IsLockedOut?: boolean;
          NotActive?: boolean;
          EmailConfirmed?: boolean;
          IsExternal?: boolean;
          MaxCreationTime?: string;
          MinCreationTime?: string;
          MaxModifitionTime?: string;
          MinModifitionTime?: string;
          Sorting?: string;
          SkipCount?: number;
          MaxResultCount?: number;
          ExtraProperties?: {
            [key: string]: unknown;
          };
        };
        path: {
          id: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Application.Dtos.PagedResultDto`1[[Volo.Abp.Identity.IdentityUserDto, Volo.Abp.Identity.Pro.Application.Contracts, Version=7.2.2.0, Culture=neutral, PublicKeyToken=null]]"];
            "application/json": components["schemas"]["Volo.Abp.Application.Dtos.PagedResultDto`1[[Volo.Abp.Identity.IdentityUserDto, Volo.Abp.Identity.Pro.Application.Contracts, Version=7.2.2.0, Culture=neutral, PublicKeyToken=null]]"];
            "text/json": components["schemas"]["Volo.Abp.Application.Dtos.PagedResultDto`1[[Volo.Abp.Identity.IdentityUserDto, Volo.Abp.Identity.Pro.Application.Contracts, Version=7.2.2.0, Culture=neutral, PublicKeyToken=null]]"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
    put: {
      parameters: {
        path: {
          id: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["Volo.Abp.Identity.OrganizationUnitUserInput"];
          "text/json": components["schemas"]["Volo.Abp.Identity.OrganizationUnitUserInput"];
          "application/*+json": components["schemas"]["Volo.Abp.Identity.OrganizationUnitUserInput"];
        };
      };
      responses: {
        /** @description Success */
        200: never;
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/identity/organization-units": {
    get: {
      parameters: {
        query?: {
          Filter?: string;
          Sorting?: string;
          SkipCount?: number;
          MaxResultCount?: number;
          ExtraProperties?: {
            [key: string]: unknown;
          };
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Application.Dtos.PagedResultDto`1[[Volo.Abp.Identity.OrganizationUnitWithDetailsDto, Volo.Abp.Identity.Pro.Application.Contracts, Version=7.2.2.0, Culture=neutral, PublicKeyToken=null]]"];
            "application/json": components["schemas"]["Volo.Abp.Application.Dtos.PagedResultDto`1[[Volo.Abp.Identity.OrganizationUnitWithDetailsDto, Volo.Abp.Identity.Pro.Application.Contracts, Version=7.2.2.0, Culture=neutral, PublicKeyToken=null]]"];
            "text/json": components["schemas"]["Volo.Abp.Application.Dtos.PagedResultDto`1[[Volo.Abp.Identity.OrganizationUnitWithDetailsDto, Volo.Abp.Identity.Pro.Application.Contracts, Version=7.2.2.0, Culture=neutral, PublicKeyToken=null]]"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
    post: {
      requestBody?: {
        content: {
          "application/json": components["schemas"]["Volo.Abp.Identity.OrganizationUnitCreateDto"];
          "text/json": components["schemas"]["Volo.Abp.Identity.OrganizationUnitCreateDto"];
          "application/*+json": components["schemas"]["Volo.Abp.Identity.OrganizationUnitCreateDto"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Identity.OrganizationUnitWithDetailsDto"];
            "application/json": components["schemas"]["Volo.Abp.Identity.OrganizationUnitWithDetailsDto"];
            "text/json": components["schemas"]["Volo.Abp.Identity.OrganizationUnitWithDetailsDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
    delete: {
      parameters: {
        query?: {
          id?: string;
        };
      };
      responses: {
        /** @description Success */
        200: never;
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/identity/organization-units/{id}": {
    get: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Identity.OrganizationUnitWithDetailsDto"];
            "application/json": components["schemas"]["Volo.Abp.Identity.OrganizationUnitWithDetailsDto"];
            "text/json": components["schemas"]["Volo.Abp.Identity.OrganizationUnitWithDetailsDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
    put: {
      parameters: {
        path: {
          id: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["Volo.Abp.Identity.OrganizationUnitUpdateDto"];
          "text/json": components["schemas"]["Volo.Abp.Identity.OrganizationUnitUpdateDto"];
          "application/*+json": components["schemas"]["Volo.Abp.Identity.OrganizationUnitUpdateDto"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Identity.OrganizationUnitWithDetailsDto"];
            "application/json": components["schemas"]["Volo.Abp.Identity.OrganizationUnitWithDetailsDto"];
            "text/json": components["schemas"]["Volo.Abp.Identity.OrganizationUnitWithDetailsDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/identity/organization-units/all": {
    get: {
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Application.Dtos.ListResultDto`1[[Volo.Abp.Identity.OrganizationUnitWithDetailsDto, Volo.Abp.Identity.Pro.Application.Contracts, Version=7.2.2.0, Culture=neutral, PublicKeyToken=null]]"];
            "application/json": components["schemas"]["Volo.Abp.Application.Dtos.ListResultDto`1[[Volo.Abp.Identity.OrganizationUnitWithDetailsDto, Volo.Abp.Identity.Pro.Application.Contracts, Version=7.2.2.0, Culture=neutral, PublicKeyToken=null]]"];
            "text/json": components["schemas"]["Volo.Abp.Application.Dtos.ListResultDto`1[[Volo.Abp.Identity.OrganizationUnitWithDetailsDto, Volo.Abp.Identity.Pro.Application.Contracts, Version=7.2.2.0, Culture=neutral, PublicKeyToken=null]]"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/identity/organization-units/{id}/move": {
    put: {
      parameters: {
        path: {
          id: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["Volo.Abp.Identity.OrganizationUnitMoveInput"];
          "text/json": components["schemas"]["Volo.Abp.Identity.OrganizationUnitMoveInput"];
          "application/*+json": components["schemas"]["Volo.Abp.Identity.OrganizationUnitMoveInput"];
        };
      };
      responses: {
        /** @description Success */
        200: never;
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/identity/organization-units/available-users": {
    get: {
      parameters: {
        query?: {
          Filter?: string;
          Id?: string;
          Sorting?: string;
          SkipCount?: number;
          MaxResultCount?: number;
          ExtraProperties?: {
            [key: string]: unknown;
          };
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Application.Dtos.PagedResultDto`1[[Volo.Abp.Identity.IdentityUserDto, Volo.Abp.Identity.Pro.Application.Contracts, Version=7.2.2.0, Culture=neutral, PublicKeyToken=null]]"];
            "application/json": components["schemas"]["Volo.Abp.Application.Dtos.PagedResultDto`1[[Volo.Abp.Identity.IdentityUserDto, Volo.Abp.Identity.Pro.Application.Contracts, Version=7.2.2.0, Culture=neutral, PublicKeyToken=null]]"];
            "text/json": components["schemas"]["Volo.Abp.Application.Dtos.PagedResultDto`1[[Volo.Abp.Identity.IdentityUserDto, Volo.Abp.Identity.Pro.Application.Contracts, Version=7.2.2.0, Culture=neutral, PublicKeyToken=null]]"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/identity/organization-units/available-roles": {
    get: {
      parameters: {
        query?: {
          Filter?: string;
          Id?: string;
          Sorting?: string;
          SkipCount?: number;
          MaxResultCount?: number;
          ExtraProperties?: {
            [key: string]: unknown;
          };
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Application.Dtos.PagedResultDto`1[[Volo.Abp.Identity.IdentityRoleDto, Volo.Abp.Identity.Pro.Application.Contracts, Version=7.2.2.0, Culture=neutral, PublicKeyToken=null]]"];
            "application/json": components["schemas"]["Volo.Abp.Application.Dtos.PagedResultDto`1[[Volo.Abp.Identity.IdentityRoleDto, Volo.Abp.Identity.Pro.Application.Contracts, Version=7.2.2.0, Culture=neutral, PublicKeyToken=null]]"];
            "text/json": components["schemas"]["Volo.Abp.Application.Dtos.PagedResultDto`1[[Volo.Abp.Identity.IdentityRoleDto, Volo.Abp.Identity.Pro.Application.Contracts, Version=7.2.2.0, Culture=neutral, PublicKeyToken=null]]"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/identity/organization-units/{id}/members/{memberId}": {
    delete: {
      parameters: {
        path: {
          id: string;
          memberId: string;
        };
      };
      responses: {
        /** @description Success */
        200: never;
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/identity/organization-units/{id}/roles/{roleId}": {
    delete: {
      parameters: {
        path: {
          id: string;
          roleId: string;
        };
      };
      responses: {
        /** @description Success */
        200: never;
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/cms-kit-admin/pages/{id}": {
    get: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.CmsKit.Admin.Pages.PageDto"];
            "application/json": components["schemas"]["Volo.CmsKit.Admin.Pages.PageDto"];
            "text/json": components["schemas"]["Volo.CmsKit.Admin.Pages.PageDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
    put: {
      parameters: {
        path: {
          id: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["Volo.CmsKit.Admin.Pages.UpdatePageInputDto"];
          "text/json": components["schemas"]["Volo.CmsKit.Admin.Pages.UpdatePageInputDto"];
          "application/*+json": components["schemas"]["Volo.CmsKit.Admin.Pages.UpdatePageInputDto"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.CmsKit.Admin.Pages.PageDto"];
            "application/json": components["schemas"]["Volo.CmsKit.Admin.Pages.PageDto"];
            "text/json": components["schemas"]["Volo.CmsKit.Admin.Pages.PageDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
    delete: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** @description Success */
        200: never;
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/cms-kit-admin/pages": {
    get: {
      parameters: {
        query?: {
          Filter?: string;
          Sorting?: string;
          SkipCount?: number;
          MaxResultCount?: number;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Application.Dtos.PagedResultDto`1[[Volo.CmsKit.Admin.Pages.PageDto, Volo.CmsKit.Admin.Application.Contracts, Version=7.2.2.0, Culture=neutral, PublicKeyToken=null]]"];
            "application/json": components["schemas"]["Volo.Abp.Application.Dtos.PagedResultDto`1[[Volo.CmsKit.Admin.Pages.PageDto, Volo.CmsKit.Admin.Application.Contracts, Version=7.2.2.0, Culture=neutral, PublicKeyToken=null]]"];
            "text/json": components["schemas"]["Volo.Abp.Application.Dtos.PagedResultDto`1[[Volo.CmsKit.Admin.Pages.PageDto, Volo.CmsKit.Admin.Application.Contracts, Version=7.2.2.0, Culture=neutral, PublicKeyToken=null]]"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
    post: {
      requestBody?: {
        content: {
          "application/json": components["schemas"]["Volo.CmsKit.Admin.Pages.CreatePageInputDto"];
          "text/json": components["schemas"]["Volo.CmsKit.Admin.Pages.CreatePageInputDto"];
          "application/*+json": components["schemas"]["Volo.CmsKit.Admin.Pages.CreatePageInputDto"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.CmsKit.Admin.Pages.PageDto"];
            "application/json": components["schemas"]["Volo.CmsKit.Admin.Pages.PageDto"];
            "text/json": components["schemas"]["Volo.CmsKit.Admin.Pages.PageDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/cms-kit-admin/pages/setashomepage/{id}": {
    put: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** @description Success */
        200: never;
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/cms-kit-public/pages/{slug}": {
    get: {
      parameters: {
        path: {
          slug: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.CmsKit.Contents.PageDto"];
            "application/json": components["schemas"]["Volo.CmsKit.Contents.PageDto"];
            "text/json": components["schemas"]["Volo.CmsKit.Contents.PageDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/cms-kit-public/pages": {
    get: {
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.CmsKit.Contents.PageDto"];
            "application/json": components["schemas"]["Volo.CmsKit.Contents.PageDto"];
            "text/json": components["schemas"]["Volo.CmsKit.Contents.PageDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/product-service/period-scheme/period-schemes/{productGroupId}": {
    get: {
      parameters: {
        path: {
          productGroupId: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Application.Dtos.ListResultDto`1[[EasyAbp.BookingService.PeriodSchemes.Dtos.PeriodSchemeDto, EasyAbp.BookingService.Common.Application.Contracts, Version=0.4.0.0, Culture=neutral, PublicKeyToken=null]]"];
            "application/json": components["schemas"]["Volo.Abp.Application.Dtos.ListResultDto`1[[EasyAbp.BookingService.PeriodSchemes.Dtos.PeriodSchemeDto, EasyAbp.BookingService.Common.Application.Contracts, Version=0.4.0.0, Culture=neutral, PublicKeyToken=null]]"];
            "text/json": components["schemas"]["Volo.Abp.Application.Dtos.ListResultDto`1[[EasyAbp.BookingService.PeriodSchemes.Dtos.PeriodSchemeDto, EasyAbp.BookingService.Common.Application.Contracts, Version=0.4.0.0, Culture=neutral, PublicKeyToken=null]]"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
    post: {
      parameters: {
        path: {
          productGroupId: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["EasyAbp.BookingService.PeriodSchemes.Dtos.CreatePeriodSchemeDto"];
          "text/json": components["schemas"]["EasyAbp.BookingService.PeriodSchemes.Dtos.CreatePeriodSchemeDto"];
          "application/*+json": components["schemas"]["EasyAbp.BookingService.PeriodSchemes.Dtos.CreatePeriodSchemeDto"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["EasyAbp.BookingService.PeriodSchemes.Dtos.PeriodSchemeDto"];
            "application/json": components["schemas"]["EasyAbp.BookingService.PeriodSchemes.Dtos.PeriodSchemeDto"];
            "text/json": components["schemas"]["EasyAbp.BookingService.PeriodSchemes.Dtos.PeriodSchemeDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/product-service/period-scheme/{id}/period-schemes-name": {
    put: {
      parameters: {
        query?: {
          name?: string;
        };
        path: {
          id: string;
        };
      };
      responses: {
        /** @description Success */
        200: never;
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/product-service/period-scheme/{id}/period-schemes": {
    delete: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** @description Success */
        200: never;
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/product-service/period-scheme/periods/{periodSchemeId}": {
    get: {
      parameters: {
        path: {
          periodSchemeId: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Application.Dtos.ListResultDto`1[[EasyAbp.BookingService.PeriodSchemes.Dtos.PeriodDto, EasyAbp.BookingService.Common.Application.Contracts, Version=0.4.0.0, Culture=neutral, PublicKeyToken=null]]"];
            "application/json": components["schemas"]["Volo.Abp.Application.Dtos.ListResultDto`1[[EasyAbp.BookingService.PeriodSchemes.Dtos.PeriodDto, EasyAbp.BookingService.Common.Application.Contracts, Version=0.4.0.0, Culture=neutral, PublicKeyToken=null]]"];
            "text/json": components["schemas"]["Volo.Abp.Application.Dtos.ListResultDto`1[[EasyAbp.BookingService.PeriodSchemes.Dtos.PeriodDto, EasyAbp.BookingService.Common.Application.Contracts, Version=0.4.0.0, Culture=neutral, PublicKeyToken=null]]"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/product-service/period-scheme/period/{periodSchemeId}": {
    post: {
      parameters: {
        query?: {
          startTime?: components["schemas"]["System.TimeSpan"];
          duration?: components["schemas"]["System.TimeSpan"];
        };
        path: {
          periodSchemeId: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["EasyAbp.BookingService.PeriodSchemes.Dtos.PeriodSchemeDto"];
            "application/json": components["schemas"]["EasyAbp.BookingService.PeriodSchemes.Dtos.PeriodSchemeDto"];
            "text/json": components["schemas"]["EasyAbp.BookingService.PeriodSchemes.Dtos.PeriodSchemeDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/product-service/period-scheme/period": {
    put: {
      parameters: {
        query?: {
          periodSchemeId?: string;
          periodId?: string;
          startTime?: components["schemas"]["System.TimeSpan"];
          duration?: components["schemas"]["System.TimeSpan"];
        };
      };
      responses: {
        /** @description Success */
        200: never;
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
    delete: {
      parameters: {
        query?: {
          periodSchemeId?: string;
          periodId?: string;
        };
      };
      responses: {
        /** @description Success */
        200: never;
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/booking-service/period-scheme/{id}/set-as-default": {
    post: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["EasyAbp.BookingService.PeriodSchemes.Dtos.PeriodSchemeDto"];
            "application/json": components["schemas"]["EasyAbp.BookingService.PeriodSchemes.Dtos.PeriodSchemeDto"];
            "text/json": components["schemas"]["EasyAbp.BookingService.PeriodSchemes.Dtos.PeriodSchemeDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/booking-service/period-scheme/period/{periodSchemeId}": {
    post: {
      parameters: {
        path: {
          periodSchemeId: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["EasyAbp.BookingService.PeriodSchemes.Dtos.CreateUpdatePeriodDto"];
          "text/json": components["schemas"]["EasyAbp.BookingService.PeriodSchemes.Dtos.CreateUpdatePeriodDto"];
          "application/*+json": components["schemas"]["EasyAbp.BookingService.PeriodSchemes.Dtos.CreateUpdatePeriodDto"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["EasyAbp.BookingService.PeriodSchemes.Dtos.PeriodSchemeDto"];
            "application/json": components["schemas"]["EasyAbp.BookingService.PeriodSchemes.Dtos.PeriodSchemeDto"];
            "text/json": components["schemas"]["EasyAbp.BookingService.PeriodSchemes.Dtos.PeriodSchemeDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/booking-service/period-scheme/period": {
    put: {
      parameters: {
        query?: {
          periodSchemeId?: string;
          periodId?: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["EasyAbp.BookingService.PeriodSchemes.Dtos.CreateUpdatePeriodDto"];
          "text/json": components["schemas"]["EasyAbp.BookingService.PeriodSchemes.Dtos.CreateUpdatePeriodDto"];
          "application/*+json": components["schemas"]["EasyAbp.BookingService.PeriodSchemes.Dtos.CreateUpdatePeriodDto"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["EasyAbp.BookingService.PeriodSchemes.Dtos.PeriodSchemeDto"];
            "application/json": components["schemas"]["EasyAbp.BookingService.PeriodSchemes.Dtos.PeriodSchemeDto"];
            "text/json": components["schemas"]["EasyAbp.BookingService.PeriodSchemes.Dtos.PeriodSchemeDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
    delete: {
      parameters: {
        query?: {
          periodSchemeId?: string;
          periodId?: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["EasyAbp.BookingService.PeriodSchemes.Dtos.PeriodSchemeDto"];
            "application/json": components["schemas"]["EasyAbp.BookingService.PeriodSchemes.Dtos.PeriodSchemeDto"];
            "text/json": components["schemas"]["EasyAbp.BookingService.PeriodSchemes.Dtos.PeriodSchemeDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/booking-service/period-scheme/{id}": {
    get: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["EasyAbp.BookingService.PeriodSchemes.Dtos.PeriodSchemeDto"];
            "application/json": components["schemas"]["EasyAbp.BookingService.PeriodSchemes.Dtos.PeriodSchemeDto"];
            "text/json": components["schemas"]["EasyAbp.BookingService.PeriodSchemes.Dtos.PeriodSchemeDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
    put: {
      parameters: {
        path: {
          id: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["EasyAbp.BookingService.PeriodSchemes.Dtos.UpdatePeriodSchemeDto"];
          "text/json": components["schemas"]["EasyAbp.BookingService.PeriodSchemes.Dtos.UpdatePeriodSchemeDto"];
          "application/*+json": components["schemas"]["EasyAbp.BookingService.PeriodSchemes.Dtos.UpdatePeriodSchemeDto"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["EasyAbp.BookingService.PeriodSchemes.Dtos.PeriodSchemeDto"];
            "application/json": components["schemas"]["EasyAbp.BookingService.PeriodSchemes.Dtos.PeriodSchemeDto"];
            "text/json": components["schemas"]["EasyAbp.BookingService.PeriodSchemes.Dtos.PeriodSchemeDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
    delete: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** @description Success */
        200: never;
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/booking-service/period-scheme": {
    get: {
      parameters: {
        query?: {
          Name?: string;
          Sorting?: string;
          SkipCount?: number;
          MaxResultCount?: number;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Application.Dtos.PagedResultDto`1[[EasyAbp.BookingService.PeriodSchemes.Dtos.PeriodSchemeDto, EasyAbp.BookingService.Common.Application.Contracts, Version=0.4.0.0, Culture=neutral, PublicKeyToken=null]]"];
            "application/json": components["schemas"]["Volo.Abp.Application.Dtos.PagedResultDto`1[[EasyAbp.BookingService.PeriodSchemes.Dtos.PeriodSchemeDto, EasyAbp.BookingService.Common.Application.Contracts, Version=0.4.0.0, Culture=neutral, PublicKeyToken=null]]"];
            "text/json": components["schemas"]["Volo.Abp.Application.Dtos.PagedResultDto`1[[EasyAbp.BookingService.PeriodSchemes.Dtos.PeriodSchemeDto, EasyAbp.BookingService.Common.Application.Contracts, Version=0.4.0.0, Culture=neutral, PublicKeyToken=null]]"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
    post: {
      requestBody?: {
        content: {
          "application/json": components["schemas"]["EasyAbp.BookingService.PeriodSchemes.Dtos.CreatePeriodSchemeDto"];
          "text/json": components["schemas"]["EasyAbp.BookingService.PeriodSchemes.Dtos.CreatePeriodSchemeDto"];
          "application/*+json": components["schemas"]["EasyAbp.BookingService.PeriodSchemes.Dtos.CreatePeriodSchemeDto"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["EasyAbp.BookingService.PeriodSchemes.Dtos.PeriodSchemeDto"];
            "application/json": components["schemas"]["EasyAbp.BookingService.PeriodSchemes.Dtos.PeriodSchemeDto"];
            "text/json": components["schemas"]["EasyAbp.BookingService.PeriodSchemes.Dtos.PeriodSchemeDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/permission-management/permissions": {
    get: {
      parameters: {
        query?: {
          providerName?: string;
          providerKey?: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.PermissionManagement.GetPermissionListResultDto"];
            "application/json": components["schemas"]["Volo.Abp.PermissionManagement.GetPermissionListResultDto"];
            "text/json": components["schemas"]["Volo.Abp.PermissionManagement.GetPermissionListResultDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
    put: {
      parameters: {
        query?: {
          providerName?: string;
          providerKey?: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["Volo.Abp.PermissionManagement.UpdatePermissionsDto"];
          "text/json": components["schemas"]["Volo.Abp.PermissionManagement.UpdatePermissionsDto"];
          "application/*+json": components["schemas"]["Volo.Abp.PermissionManagement.UpdatePermissionsDto"];
        };
      };
      responses: {
        /** @description Success */
        200: never;
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/product-service/product-group/product-group": {
    get: {
      parameters: {
        query?: {
          productGroupName?: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Tourmap.ProductService.ProductGroups.ProductGroupDto+WithNavigationProperties"];
            "application/json": components["schemas"]["Tourmap.ProductService.ProductGroups.ProductGroupDto+WithNavigationProperties"];
            "text/json": components["schemas"]["Tourmap.ProductService.ProductGroups.ProductGroupDto+WithNavigationProperties"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/product-service/product-group/product-groups": {
    get: {
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Tourmap.ProductService.ProductGroups.ProductGroupDto+WithNavigationProperties"][];
            "application/json": components["schemas"]["Tourmap.ProductService.ProductGroups.ProductGroupDto+WithNavigationProperties"][];
            "text/json": components["schemas"]["Tourmap.ProductService.ProductGroups.ProductGroupDto+WithNavigationProperties"][];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/product-service/product-group/booking-month-calendar/{productGroupId}": {
    get: {
      parameters: {
        query?: {
          month?: string;
        };
        path: {
          productGroupId: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Tourmap.ProductService.Products.BookingCalendarDto"];
            "application/json": components["schemas"]["Tourmap.ProductService.Products.BookingCalendarDto"];
            "text/json": components["schemas"]["Tourmap.ProductService.Products.BookingCalendarDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/product-service/product-group/{id}/first-can-booking-date": {
    get: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Tourmap.ProductService.ProductGroups.ProductGroupDto+FirstCanBookingDate"];
            "application/json": components["schemas"]["Tourmap.ProductService.ProductGroups.ProductGroupDto+FirstCanBookingDate"];
            "text/json": components["schemas"]["Tourmap.ProductService.ProductGroups.ProductGroupDto+FirstCanBookingDate"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/product-service/product-group/{id}/time-in-advance-setting": {
    get: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Tourmap.ProductService.ProductGroups.ProductGroupDto+TimeInAdvance"];
            "application/json": components["schemas"]["Tourmap.ProductService.ProductGroups.ProductGroupDto+TimeInAdvance"];
            "text/json": components["schemas"]["Tourmap.ProductService.ProductGroups.ProductGroupDto+TimeInAdvance"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/product-service/product-group/product-group-find-by-name": {
    get: {
      parameters: {
        query?: {
          productGroupName?: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Tourmap.ProductService.ProductGroups.ProductGroupDto"];
            "application/json": components["schemas"]["Tourmap.ProductService.ProductGroups.ProductGroupDto"];
            "text/json": components["schemas"]["Tourmap.ProductService.ProductGroups.ProductGroupDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/product-service/product-price/for-product-price": {
    get: {
      parameters: {
        query?: {
          ProductId?: string;
          PeriodScchemeId?: string;
          Sorting?: string;
          SkipCount?: number;
          MaxResultCount?: number;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Tourmap.ProductService.ProductPrices.ProductPriceDto+WithNavigationProperties"][];
            "application/json": components["schemas"]["Tourmap.ProductService.ProductPrices.ProductPriceDto+WithNavigationProperties"][];
            "text/json": components["schemas"]["Tourmap.ProductService.ProductPrices.ProductPriceDto+WithNavigationProperties"][];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/product-service/product-price/with-period-price": {
    post: {
      requestBody?: {
        content: {
          "application/json": components["schemas"]["Tourmap.ProductService.ProductPrices.ProductPriceDto+CreateWithPeriodPrice"];
          "text/json": components["schemas"]["Tourmap.ProductService.ProductPrices.ProductPriceDto+CreateWithPeriodPrice"];
          "application/*+json": components["schemas"]["Tourmap.ProductService.ProductPrices.ProductPriceDto+CreateWithPeriodPrice"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Tourmap.ProductService.ProductPrices.ProductPriceDto+WithNavigationProperties"];
            "application/json": components["schemas"]["Tourmap.ProductService.ProductPrices.ProductPriceDto+WithNavigationProperties"];
            "text/json": components["schemas"]["Tourmap.ProductService.ProductPrices.ProductPriceDto+WithNavigationProperties"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/product-service/product-price/{id}/default-price": {
    put: {
      parameters: {
        query?: {
          price?: number;
        };
        path: {
          id: string;
        };
      };
      responses: {
        /** @description Success */
        200: never;
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/product-service/product-price/{id}": {
    get: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Tourmap.ProductService.ProductPrices.ProductPriceDto+WithNavigationProperties"];
            "application/json": components["schemas"]["Tourmap.ProductService.ProductPrices.ProductPriceDto+WithNavigationProperties"];
            "text/json": components["schemas"]["Tourmap.ProductService.ProductPrices.ProductPriceDto+WithNavigationProperties"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
    delete: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** @description Success */
        200: never;
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/product-service/product-price": {
    post: {
      requestBody?: {
        content: {
          "application/json": components["schemas"]["Tourmap.ProductService.ProductPrices.ProductPriceDto+Create"];
          "text/json": components["schemas"]["Tourmap.ProductService.ProductPrices.ProductPriceDto+Create"];
          "application/*+json": components["schemas"]["Tourmap.ProductService.ProductPrices.ProductPriceDto+Create"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Tourmap.ProductService.ProductPrices.ProductPriceDto"];
            "application/json": components["schemas"]["Tourmap.ProductService.ProductPrices.ProductPriceDto"];
            "text/json": components["schemas"]["Tourmap.ProductService.ProductPrices.ProductPriceDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/product-service/product-price/period": {
    post: {
      requestBody?: {
        content: {
          "application/json": components["schemas"]["Tourmap.ProductService.ProductPeriodPrices.ProductPeriodPriceDto+Create"];
          "text/json": components["schemas"]["Tourmap.ProductService.ProductPeriodPrices.ProductPeriodPriceDto+Create"];
          "application/*+json": components["schemas"]["Tourmap.ProductService.ProductPeriodPrices.ProductPeriodPriceDto+Create"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Tourmap.ProductService.ProductPeriodPrices.ProductPeriodPriceDto"];
            "application/json": components["schemas"]["Tourmap.ProductService.ProductPeriodPrices.ProductPeriodPriceDto"];
            "text/json": components["schemas"]["Tourmap.ProductService.ProductPeriodPrices.ProductPeriodPriceDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/product-service/product-price/period/{productPeriodPriceId}": {
    put: {
      parameters: {
        query?: {
          price?: number;
        };
        path: {
          productPeriodPriceId: string;
        };
      };
      responses: {
        /** @description Success */
        200: never;
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
    delete: {
      parameters: {
        path: {
          productPeriodPriceId: string;
        };
      };
      responses: {
        /** @description Success */
        200: never;
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/product-service/products/product-for-browse": {
    get: {
      parameters: {
        query?: {
          campingIds?: string[];
          projectIds?: string[];
          filter?: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Application.Dtos.ListResultDto`1[[Tourmap.ProductService.Products.ProductDto+ForBrowse, Tourmap.ProductService.Application.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"];
            "application/json": components["schemas"]["Volo.Abp.Application.Dtos.ListResultDto`1[[Tourmap.ProductService.Products.ProductDto+ForBrowse, Tourmap.ProductService.Application.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"];
            "text/json": components["schemas"]["Volo.Abp.Application.Dtos.ListResultDto`1[[Tourmap.ProductService.Products.ProductDto+ForBrowse, Tourmap.ProductService.Application.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/product-service/products/product": {
    post: {
      requestBody?: {
        content: {
          "application/json": components["schemas"]["Tourmap.ProductService.Products.ProductDto+ForCamping"];
          "text/json": components["schemas"]["Tourmap.ProductService.Products.ProductDto+ForCamping"];
          "application/*+json": components["schemas"]["Tourmap.ProductService.Products.ProductDto+ForCamping"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Tourmap.ProductService.Products.ProductDto"];
            "application/json": components["schemas"]["Tourmap.ProductService.Products.ProductDto"];
            "text/json": components["schemas"]["Tourmap.ProductService.Products.ProductDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/product-service/products/{id}/product": {
    put: {
      parameters: {
        query?: {
          displayName?: string;
          description?: string;
        };
        path: {
          id: string;
        };
      };
      responses: {
        /** @description Success */
        200: never;
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/product-service/products/{id}/product-usable": {
    put: {
      parameters: {
        query?: {
          usable?: components["schemas"]["EasyAbp.BookingService.AssetSchedules.PeriodUsable"];
        };
        path: {
          id: string;
        };
      };
      responses: {
        /** @description Success */
        200: never;
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/product-service/products/check-camping-and-project-can-create-product": {
    post: {
      parameters: {
        query?: {
          campingId?: string;
          projectId?: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Tourmap.ProductService.Products.ProductDto+CheckCanCreateResult"];
            "application/json": components["schemas"]["Tourmap.ProductService.Products.ProductDto+CheckCanCreateResult"];
            "text/json": components["schemas"]["Tourmap.ProductService.Products.ProductDto+CheckCanCreateResult"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/product-service/products/camping-product-list": {
    get: {
      parameters: {
        query?: {
          CampingAreaId?: string;
          CampingName?: string;
          Date?: string;
          ProductGroupId?: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Tourmap.ProductService.Products.CampingProductViewDto+CampingWithDetailDto"][];
            "application/json": components["schemas"]["Tourmap.ProductService.Products.CampingProductViewDto+CampingWithDetailDto"][];
            "text/json": components["schemas"]["Tourmap.ProductService.Products.CampingProductViewDto+CampingWithDetailDto"][];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/product-service/products/camping-product-detail/{productId}": {
    get: {
      parameters: {
        query?: {
          date?: string;
        };
        path: {
          productId: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Tourmap.ProductService.Products.CampingProductViewDto+CampingProductDetailBrowseDto"];
            "application/json": components["schemas"]["Tourmap.ProductService.Products.CampingProductViewDto+CampingProductDetailBrowseDto"];
            "text/json": components["schemas"]["Tourmap.ProductService.Products.CampingProductViewDto+CampingProductDetailBrowseDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/product-service/products/camping-areas": {
    get: {
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Tourmap.Camping.CampingAreas.CampingAreaDto"][];
            "application/json": components["schemas"]["Tourmap.Camping.CampingAreas.CampingAreaDto"][];
            "text/json": components["schemas"]["Tourmap.Camping.CampingAreas.CampingAreaDto"][];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/product-service/products/occupy-camping-product/{productId}": {
    /** @deprecated */
    post: {
      parameters: {
        query?: {
          date?: string;
        };
        path: {
          productId: string;
        };
      };
      responses: {
        /** @description Success */
        200: never;
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/product-service/products/occupy-camping-product-by-cart-id/{shoppingCartOwnerId}": {
    /** @deprecated */
    post: {
      parameters: {
        path: {
          shoppingCartOwnerId: string;
        };
      };
      responses: {
        /** @description Success */
        200: never;
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/product-service/project": {
    get: {
      parameters: {
        query?: {
          Sorting?: string;
          SkipCount?: number;
          MaxResultCount?: number;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Application.Dtos.PagedResultDto`1[[Tourmap.ProductService.Projects.ProjectDto, Tourmap.ProductService.Application.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"];
            "application/json": components["schemas"]["Volo.Abp.Application.Dtos.PagedResultDto`1[[Tourmap.ProductService.Projects.ProjectDto, Tourmap.ProductService.Application.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"];
            "text/json": components["schemas"]["Volo.Abp.Application.Dtos.PagedResultDto`1[[Tourmap.ProductService.Projects.ProjectDto, Tourmap.ProductService.Application.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
    post: {
      requestBody?: {
        content: {
          "application/json": components["schemas"]["Tourmap.ProductService.Projects.ProjectDto+Create"];
          "text/json": components["schemas"]["Tourmap.ProductService.Projects.ProjectDto+Create"];
          "application/*+json": components["schemas"]["Tourmap.ProductService.Projects.ProjectDto+Create"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Tourmap.ProductService.Projects.ProjectDto"];
            "application/json": components["schemas"]["Tourmap.ProductService.Projects.ProjectDto"];
            "text/json": components["schemas"]["Tourmap.ProductService.Projects.ProjectDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/product-service/project/{id}": {
    get: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Tourmap.ProductService.Projects.ProjectDto"];
            "application/json": components["schemas"]["Tourmap.ProductService.Projects.ProjectDto"];
            "text/json": components["schemas"]["Tourmap.ProductService.Projects.ProjectDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
    put: {
      parameters: {
        path: {
          id: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["Tourmap.ProductService.Projects.ProjectDto+Update"];
          "text/json": components["schemas"]["Tourmap.ProductService.Projects.ProjectDto+Update"];
          "application/*+json": components["schemas"]["Tourmap.ProductService.Projects.ProjectDto+Update"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Tourmap.ProductService.Projects.ProjectDto"];
            "application/json": components["schemas"]["Tourmap.ProductService.Projects.ProjectDto"];
            "text/json": components["schemas"]["Tourmap.ProductService.Projects.ProjectDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
    delete: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** @description Success */
        200: never;
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/cms-kit-public/ratings/{entityType}/{entityId}": {
    get: {
      parameters: {
        path: {
          entityType: string;
          entityId: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.CmsKit.Public.Ratings.RatingWithStarCountDto"][];
            "application/json": components["schemas"]["Volo.CmsKit.Public.Ratings.RatingWithStarCountDto"][];
            "text/json": components["schemas"]["Volo.CmsKit.Public.Ratings.RatingWithStarCountDto"][];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
    put: {
      parameters: {
        path: {
          entityType: string;
          entityId: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["Volo.CmsKit.Public.Ratings.CreateUpdateRatingInput"];
          "text/json": components["schemas"]["Volo.CmsKit.Public.Ratings.CreateUpdateRatingInput"];
          "application/*+json": components["schemas"]["Volo.CmsKit.Public.Ratings.CreateUpdateRatingInput"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.CmsKit.Public.Ratings.RatingDto"];
            "application/json": components["schemas"]["Volo.CmsKit.Public.Ratings.RatingDto"];
            "text/json": components["schemas"]["Volo.CmsKit.Public.Ratings.RatingDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
    delete: {
      parameters: {
        path: {
          entityType: string;
          entityId: string;
        };
      };
      responses: {
        /** @description Success */
        200: never;
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/cms-kit-public/reactions/{entityType}/{entityId}": {
    get: {
      parameters: {
        path: {
          entityType: string;
          entityId: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Application.Dtos.ListResultDto`1[[Volo.CmsKit.Public.Reactions.ReactionWithSelectionDto, Volo.CmsKit.Public.Application.Contracts, Version=7.2.2.0, Culture=neutral, PublicKeyToken=null]]"];
            "application/json": components["schemas"]["Volo.Abp.Application.Dtos.ListResultDto`1[[Volo.CmsKit.Public.Reactions.ReactionWithSelectionDto, Volo.CmsKit.Public.Application.Contracts, Version=7.2.2.0, Culture=neutral, PublicKeyToken=null]]"];
            "text/json": components["schemas"]["Volo.Abp.Application.Dtos.ListResultDto`1[[Volo.CmsKit.Public.Reactions.ReactionWithSelectionDto, Volo.CmsKit.Public.Application.Contracts, Version=7.2.2.0, Culture=neutral, PublicKeyToken=null]]"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/cms-kit-public/reactions/{entityType}/{entityId}/{reaction}": {
    put: {
      parameters: {
        path: {
          entityType: string;
          entityId: string;
          reaction: string;
        };
      };
      responses: {
        /** @description Success */
        200: never;
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
    delete: {
      parameters: {
        path: {
          entityType: string;
          entityId: string;
          reaction: string;
        };
      };
      responses: {
        /** @description Success */
        200: never;
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/identity/roles/{id}": {
    get: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Identity.IdentityRoleDto"];
            "application/json": components["schemas"]["Volo.Abp.Identity.IdentityRoleDto"];
            "text/json": components["schemas"]["Volo.Abp.Identity.IdentityRoleDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
    put: {
      parameters: {
        path: {
          id: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["Volo.Abp.Identity.IdentityRoleUpdateDto"];
          "text/json": components["schemas"]["Volo.Abp.Identity.IdentityRoleUpdateDto"];
          "application/*+json": components["schemas"]["Volo.Abp.Identity.IdentityRoleUpdateDto"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Identity.IdentityRoleDto"];
            "application/json": components["schemas"]["Volo.Abp.Identity.IdentityRoleDto"];
            "text/json": components["schemas"]["Volo.Abp.Identity.IdentityRoleDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
    delete: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** @description Success */
        200: never;
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/identity/roles": {
    get: {
      parameters: {
        query?: {
          Filter?: string;
          Sorting?: string;
          SkipCount?: number;
          MaxResultCount?: number;
          ExtraProperties?: {
            [key: string]: unknown;
          };
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Application.Dtos.PagedResultDto`1[[Volo.Abp.Identity.IdentityRoleDto, Volo.Abp.Identity.Pro.Application.Contracts, Version=7.2.2.0, Culture=neutral, PublicKeyToken=null]]"];
            "application/json": components["schemas"]["Volo.Abp.Application.Dtos.PagedResultDto`1[[Volo.Abp.Identity.IdentityRoleDto, Volo.Abp.Identity.Pro.Application.Contracts, Version=7.2.2.0, Culture=neutral, PublicKeyToken=null]]"];
            "text/json": components["schemas"]["Volo.Abp.Application.Dtos.PagedResultDto`1[[Volo.Abp.Identity.IdentityRoleDto, Volo.Abp.Identity.Pro.Application.Contracts, Version=7.2.2.0, Culture=neutral, PublicKeyToken=null]]"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
    post: {
      requestBody?: {
        content: {
          "application/json": components["schemas"]["Volo.Abp.Identity.IdentityRoleCreateDto"];
          "text/json": components["schemas"]["Volo.Abp.Identity.IdentityRoleCreateDto"];
          "application/*+json": components["schemas"]["Volo.Abp.Identity.IdentityRoleCreateDto"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Identity.IdentityRoleDto"];
            "application/json": components["schemas"]["Volo.Abp.Identity.IdentityRoleDto"];
            "text/json": components["schemas"]["Volo.Abp.Identity.IdentityRoleDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/identity/roles/all": {
    get: {
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Application.Dtos.ListResultDto`1[[Volo.Abp.Identity.IdentityRoleDto, Volo.Abp.Identity.Pro.Application.Contracts, Version=7.2.2.0, Culture=neutral, PublicKeyToken=null]]"];
            "application/json": components["schemas"]["Volo.Abp.Application.Dtos.ListResultDto`1[[Volo.Abp.Identity.IdentityRoleDto, Volo.Abp.Identity.Pro.Application.Contracts, Version=7.2.2.0, Culture=neutral, PublicKeyToken=null]]"];
            "text/json": components["schemas"]["Volo.Abp.Application.Dtos.ListResultDto`1[[Volo.Abp.Identity.IdentityRoleDto, Volo.Abp.Identity.Pro.Application.Contracts, Version=7.2.2.0, Culture=neutral, PublicKeyToken=null]]"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/identity/roles/{id}/claims": {
    get: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Identity.IdentityRoleClaimDto"][];
            "application/json": components["schemas"]["Volo.Abp.Identity.IdentityRoleClaimDto"][];
            "text/json": components["schemas"]["Volo.Abp.Identity.IdentityRoleClaimDto"][];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
    put: {
      parameters: {
        path: {
          id: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["Volo.Abp.Identity.IdentityRoleClaimDto"][];
          "text/json": components["schemas"]["Volo.Abp.Identity.IdentityRoleClaimDto"][];
          "application/*+json": components["schemas"]["Volo.Abp.Identity.IdentityRoleClaimDto"][];
        };
      };
      responses: {
        /** @description Success */
        200: never;
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/identity/roles/all-claim-types": {
    get: {
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Identity.ClaimTypeDto"][];
            "application/json": components["schemas"]["Volo.Abp.Identity.ClaimTypeDto"][];
            "text/json": components["schemas"]["Volo.Abp.Identity.ClaimTypeDto"][];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/openiddict/scopes/{id}": {
    get: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.OpenIddict.Scopes.Dtos.ScopeDto"];
            "application/json": components["schemas"]["Volo.Abp.OpenIddict.Scopes.Dtos.ScopeDto"];
            "text/json": components["schemas"]["Volo.Abp.OpenIddict.Scopes.Dtos.ScopeDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
    put: {
      parameters: {
        path: {
          id: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["Volo.Abp.OpenIddict.Scopes.Dtos.UpdateScopeInput"];
          "text/json": components["schemas"]["Volo.Abp.OpenIddict.Scopes.Dtos.UpdateScopeInput"];
          "application/*+json": components["schemas"]["Volo.Abp.OpenIddict.Scopes.Dtos.UpdateScopeInput"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.OpenIddict.Scopes.Dtos.ScopeDto"];
            "application/json": components["schemas"]["Volo.Abp.OpenIddict.Scopes.Dtos.ScopeDto"];
            "text/json": components["schemas"]["Volo.Abp.OpenIddict.Scopes.Dtos.ScopeDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/openiddict/scopes": {
    get: {
      parameters: {
        query?: {
          Filter?: string;
          Sorting?: string;
          SkipCount?: number;
          MaxResultCount?: number;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Application.Dtos.PagedResultDto`1[[Volo.Abp.OpenIddict.Scopes.Dtos.ScopeDto, Volo.Abp.OpenIddict.Pro.Application.Contracts, Version=7.2.2.0, Culture=neutral, PublicKeyToken=null]]"];
            "application/json": components["schemas"]["Volo.Abp.Application.Dtos.PagedResultDto`1[[Volo.Abp.OpenIddict.Scopes.Dtos.ScopeDto, Volo.Abp.OpenIddict.Pro.Application.Contracts, Version=7.2.2.0, Culture=neutral, PublicKeyToken=null]]"];
            "text/json": components["schemas"]["Volo.Abp.Application.Dtos.PagedResultDto`1[[Volo.Abp.OpenIddict.Scopes.Dtos.ScopeDto, Volo.Abp.OpenIddict.Pro.Application.Contracts, Version=7.2.2.0, Culture=neutral, PublicKeyToken=null]]"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
    post: {
      requestBody?: {
        content: {
          "application/json": components["schemas"]["Volo.Abp.OpenIddict.Scopes.Dtos.CreateScopeInput"];
          "text/json": components["schemas"]["Volo.Abp.OpenIddict.Scopes.Dtos.CreateScopeInput"];
          "application/*+json": components["schemas"]["Volo.Abp.OpenIddict.Scopes.Dtos.CreateScopeInput"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.OpenIddict.Scopes.Dtos.ScopeDto"];
            "application/json": components["schemas"]["Volo.Abp.OpenIddict.Scopes.Dtos.ScopeDto"];
            "text/json": components["schemas"]["Volo.Abp.OpenIddict.Scopes.Dtos.ScopeDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
    delete: {
      parameters: {
        query?: {
          id?: string;
        };
      };
      responses: {
        /** @description Success */
        200: never;
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/openiddict/scopes/all": {
    get: {
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.OpenIddict.Scopes.Dtos.ScopeDto"][];
            "application/json": components["schemas"]["Volo.Abp.OpenIddict.Scopes.Dtos.ScopeDto"][];
            "text/json": components["schemas"]["Volo.Abp.OpenIddict.Scopes.Dtos.ScopeDto"][];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/identity/security-logs": {
    get: {
      parameters: {
        query?: {
          StartTime?: string;
          EndTime?: string;
          ApplicationName?: string;
          Identity?: string;
          Action?: string;
          UserName?: string;
          ClientId?: string;
          CorrelationId?: string;
          Sorting?: string;
          SkipCount?: number;
          MaxResultCount?: number;
          ExtraProperties?: {
            [key: string]: unknown;
          };
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Application.Dtos.PagedResultDto`1[[Volo.Abp.Identity.IdentitySecurityLogDto, Volo.Abp.Identity.Pro.Application.Contracts, Version=7.2.2.0, Culture=neutral, PublicKeyToken=null]]"];
            "application/json": components["schemas"]["Volo.Abp.Application.Dtos.PagedResultDto`1[[Volo.Abp.Identity.IdentitySecurityLogDto, Volo.Abp.Identity.Pro.Application.Contracts, Version=7.2.2.0, Culture=neutral, PublicKeyToken=null]]"];
            "text/json": components["schemas"]["Volo.Abp.Application.Dtos.PagedResultDto`1[[Volo.Abp.Identity.IdentitySecurityLogDto, Volo.Abp.Identity.Pro.Application.Contracts, Version=7.2.2.0, Culture=neutral, PublicKeyToken=null]]"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/identity/security-logs/{id}": {
    get: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Identity.IdentitySecurityLogDto"];
            "application/json": components["schemas"]["Volo.Abp.Identity.IdentitySecurityLogDto"];
            "text/json": components["schemas"]["Volo.Abp.Identity.IdentitySecurityLogDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/identity/security-logs/my": {
    get: {
      parameters: {
        query?: {
          StartTime?: string;
          EndTime?: string;
          ApplicationName?: string;
          Identity?: string;
          Action?: string;
          UserName?: string;
          ClientId?: string;
          CorrelationId?: string;
          Sorting?: string;
          SkipCount?: number;
          MaxResultCount?: number;
          ExtraProperties?: {
            [key: string]: unknown;
          };
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Application.Dtos.PagedResultDto`1[[Volo.Abp.Identity.IdentitySecurityLogDto, Volo.Abp.Identity.Pro.Application.Contracts, Version=7.2.2.0, Culture=neutral, PublicKeyToken=null]]"];
            "application/json": components["schemas"]["Volo.Abp.Application.Dtos.PagedResultDto`1[[Volo.Abp.Identity.IdentitySecurityLogDto, Volo.Abp.Identity.Pro.Application.Contracts, Version=7.2.2.0, Culture=neutral, PublicKeyToken=null]]"];
            "text/json": components["schemas"]["Volo.Abp.Application.Dtos.PagedResultDto`1[[Volo.Abp.Identity.IdentitySecurityLogDto, Volo.Abp.Identity.Pro.Application.Contracts, Version=7.2.2.0, Culture=neutral, PublicKeyToken=null]]"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/identity/security-logs/my/{id}": {
    get: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Identity.IdentitySecurityLogDto"];
            "application/json": components["schemas"]["Volo.Abp.Identity.IdentitySecurityLogDto"];
            "text/json": components["schemas"]["Volo.Abp.Identity.IdentitySecurityLogDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/identity/settings": {
    get: {
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Identity.IdentitySettingsDto"];
            "application/json": components["schemas"]["Volo.Abp.Identity.IdentitySettingsDto"];
            "text/json": components["schemas"]["Volo.Abp.Identity.IdentitySettingsDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
    put: {
      requestBody?: {
        content: {
          "application/json": components["schemas"]["Volo.Abp.Identity.IdentitySettingsDto"];
          "text/json": components["schemas"]["Volo.Abp.Identity.IdentitySettingsDto"];
          "application/*+json": components["schemas"]["Volo.Abp.Identity.IdentitySettingsDto"];
        };
      };
      responses: {
        /** @description Success */
        200: never;
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/identity/settings/ldap": {
    get: {
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Identity.IdentityLdapSettingsDto"];
            "application/json": components["schemas"]["Volo.Abp.Identity.IdentityLdapSettingsDto"];
            "text/json": components["schemas"]["Volo.Abp.Identity.IdentityLdapSettingsDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
    put: {
      requestBody?: {
        content: {
          "application/json": components["schemas"]["Volo.Abp.Identity.IdentityLdapSettingsDto"];
          "text/json": components["schemas"]["Volo.Abp.Identity.IdentityLdapSettingsDto"];
          "application/*+json": components["schemas"]["Volo.Abp.Identity.IdentityLdapSettingsDto"];
        };
      };
      responses: {
        /** @description Success */
        200: never;
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/identity/settings/oauth": {
    get: {
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Identity.IdentityOAuthSettingsDto"];
            "application/json": components["schemas"]["Volo.Abp.Identity.IdentityOAuthSettingsDto"];
            "text/json": components["schemas"]["Volo.Abp.Identity.IdentityOAuthSettingsDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
    put: {
      requestBody?: {
        content: {
          "application/json": components["schemas"]["Volo.Abp.Identity.IdentityOAuthSettingsDto"];
          "text/json": components["schemas"]["Volo.Abp.Identity.IdentityOAuthSettingsDto"];
          "application/*+json": components["schemas"]["Volo.Abp.Identity.IdentityOAuthSettingsDto"];
        };
      };
      responses: {
        /** @description Success */
        200: never;
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/product-service/shopping-cart-item/shopping-cart/{ownerId}": {
    get: {
      parameters: {
        path: {
          ownerId: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Tourmap.ProductService.ShoppingCarts.Dtos.ShoppingCartDisplayDto"];
            "application/json": components["schemas"]["Tourmap.ProductService.ShoppingCarts.Dtos.ShoppingCartDisplayDto"];
            "text/json": components["schemas"]["Tourmap.ProductService.ShoppingCarts.Dtos.ShoppingCartDisplayDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
    delete: {
      parameters: {
        path: {
          ownerId: string;
        };
      };
      responses: {
        /** @description Success */
        200: never;
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/product-service/shopping-cart-item/shopping-cart": {
    put: {
      requestBody?: {
        content: {
          "application/json": components["schemas"]["Tourmap.ProductService.ShoppingCarts.ShoppingCartItemDto+CreateOrUpdate"];
          "text/json": components["schemas"]["Tourmap.ProductService.ShoppingCarts.ShoppingCartItemDto+CreateOrUpdate"];
          "application/*+json": components["schemas"]["Tourmap.ProductService.ShoppingCarts.ShoppingCartItemDto+CreateOrUpdate"];
        };
      };
      responses: {
        /** @description Success */
        200: never;
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/cms-kit-admin/tags": {
    get: {
      parameters: {
        query?: {
          Filter?: string;
          Sorting?: string;
          SkipCount?: number;
          MaxResultCount?: number;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Application.Dtos.PagedResultDto`1[[Volo.CmsKit.Tags.TagDto, Volo.CmsKit.Common.Application.Contracts, Version=7.2.2.0, Culture=neutral, PublicKeyToken=null]]"];
            "application/json": components["schemas"]["Volo.Abp.Application.Dtos.PagedResultDto`1[[Volo.CmsKit.Tags.TagDto, Volo.CmsKit.Common.Application.Contracts, Version=7.2.2.0, Culture=neutral, PublicKeyToken=null]]"];
            "text/json": components["schemas"]["Volo.Abp.Application.Dtos.PagedResultDto`1[[Volo.CmsKit.Tags.TagDto, Volo.CmsKit.Common.Application.Contracts, Version=7.2.2.0, Culture=neutral, PublicKeyToken=null]]"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
    post: {
      requestBody?: {
        content: {
          "application/json": components["schemas"]["Volo.CmsKit.Admin.Tags.TagCreateDto"];
          "text/json": components["schemas"]["Volo.CmsKit.Admin.Tags.TagCreateDto"];
          "application/*+json": components["schemas"]["Volo.CmsKit.Admin.Tags.TagCreateDto"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.CmsKit.Tags.TagDto"];
            "application/json": components["schemas"]["Volo.CmsKit.Tags.TagDto"];
            "text/json": components["schemas"]["Volo.CmsKit.Tags.TagDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/cms-kit-admin/tags/{id}": {
    get: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.CmsKit.Tags.TagDto"];
            "application/json": components["schemas"]["Volo.CmsKit.Tags.TagDto"];
            "text/json": components["schemas"]["Volo.CmsKit.Tags.TagDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
    put: {
      parameters: {
        path: {
          id: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["Volo.CmsKit.Admin.Tags.TagUpdateDto"];
          "text/json": components["schemas"]["Volo.CmsKit.Admin.Tags.TagUpdateDto"];
          "application/*+json": components["schemas"]["Volo.CmsKit.Admin.Tags.TagUpdateDto"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.CmsKit.Tags.TagDto"];
            "application/json": components["schemas"]["Volo.CmsKit.Tags.TagDto"];
            "text/json": components["schemas"]["Volo.CmsKit.Tags.TagDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
    delete: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** @description Success */
        200: never;
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/cms-kit-admin/tags/tag-definitions": {
    get: {
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.CmsKit.Admin.Tags.TagDefinitionDto"][];
            "application/json": components["schemas"]["Volo.CmsKit.Admin.Tags.TagDefinitionDto"][];
            "text/json": components["schemas"]["Volo.CmsKit.Admin.Tags.TagDefinitionDto"][];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/cms-kit-public/tags/{entityType}/{entityId}": {
    get: {
      parameters: {
        path: {
          entityType: string;
          entityId: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.CmsKit.Tags.TagDto"][];
            "application/json": components["schemas"]["Volo.CmsKit.Tags.TagDto"][];
            "text/json": components["schemas"]["Volo.CmsKit.Tags.TagDto"][];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/saas/tenants/{id}": {
    get: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.Saas.Host.Dtos.SaasTenantDto"];
            "application/json": components["schemas"]["Volo.Saas.Host.Dtos.SaasTenantDto"];
            "text/json": components["schemas"]["Volo.Saas.Host.Dtos.SaasTenantDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
    put: {
      parameters: {
        path: {
          id: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["Volo.Saas.Host.Dtos.SaasTenantUpdateDto"];
          "text/json": components["schemas"]["Volo.Saas.Host.Dtos.SaasTenantUpdateDto"];
          "application/*+json": components["schemas"]["Volo.Saas.Host.Dtos.SaasTenantUpdateDto"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.Saas.Host.Dtos.SaasTenantDto"];
            "application/json": components["schemas"]["Volo.Saas.Host.Dtos.SaasTenantDto"];
            "text/json": components["schemas"]["Volo.Saas.Host.Dtos.SaasTenantDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
    delete: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** @description Success */
        200: never;
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/saas/tenants": {
    get: {
      parameters: {
        query?: {
          Filter?: string;
          GetEditionNames?: boolean;
          EditionId?: string;
          ExpirationDateMin?: string;
          ExpirationDateMax?: string;
          ActivationState?: components["schemas"]["Volo.Saas.TenantActivationState"];
          Sorting?: string;
          SkipCount?: number;
          MaxResultCount?: number;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Application.Dtos.PagedResultDto`1[[Volo.Saas.Host.Dtos.SaasTenantDto, Volo.Saas.Host.Application.Contracts, Version=7.2.2.0, Culture=neutral, PublicKeyToken=null]]"];
            "application/json": components["schemas"]["Volo.Abp.Application.Dtos.PagedResultDto`1[[Volo.Saas.Host.Dtos.SaasTenantDto, Volo.Saas.Host.Application.Contracts, Version=7.2.2.0, Culture=neutral, PublicKeyToken=null]]"];
            "text/json": components["schemas"]["Volo.Abp.Application.Dtos.PagedResultDto`1[[Volo.Saas.Host.Dtos.SaasTenantDto, Volo.Saas.Host.Application.Contracts, Version=7.2.2.0, Culture=neutral, PublicKeyToken=null]]"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
    post: {
      requestBody?: {
        content: {
          "application/json": components["schemas"]["Volo.Saas.Host.Dtos.SaasTenantCreateDto"];
          "text/json": components["schemas"]["Volo.Saas.Host.Dtos.SaasTenantCreateDto"];
          "application/*+json": components["schemas"]["Volo.Saas.Host.Dtos.SaasTenantCreateDto"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.Saas.Host.Dtos.SaasTenantDto"];
            "application/json": components["schemas"]["Volo.Saas.Host.Dtos.SaasTenantDto"];
            "text/json": components["schemas"]["Volo.Saas.Host.Dtos.SaasTenantDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/saas/tenants/databases": {
    get: {
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.Saas.Host.Dtos.SaasTenantDatabasesDto"];
            "application/json": components["schemas"]["Volo.Saas.Host.Dtos.SaasTenantDatabasesDto"];
            "text/json": components["schemas"]["Volo.Saas.Host.Dtos.SaasTenantDatabasesDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/saas/tenants/{id}/connection-strings": {
    get: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.Saas.Host.Dtos.SaasTenantConnectionStringsDto"];
            "application/json": components["schemas"]["Volo.Saas.Host.Dtos.SaasTenantConnectionStringsDto"];
            "text/json": components["schemas"]["Volo.Saas.Host.Dtos.SaasTenantConnectionStringsDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
    put: {
      parameters: {
        path: {
          id: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["Volo.Saas.Host.Dtos.SaasTenantConnectionStringsDto"];
          "text/json": components["schemas"]["Volo.Saas.Host.Dtos.SaasTenantConnectionStringsDto"];
          "application/*+json": components["schemas"]["Volo.Saas.Host.Dtos.SaasTenantConnectionStringsDto"];
        };
      };
      responses: {
        /** @description Success */
        200: never;
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/saas/tenants/{id}/apply-database-migrations": {
    post: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** @description Success */
        200: never;
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/saas/tenants/lookup/editions": {
    get: {
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.Saas.Host.Dtos.EditionLookupDto"][];
            "application/json": components["schemas"]["Volo.Saas.Host.Dtos.EditionLookupDto"][];
            "text/json": components["schemas"]["Volo.Saas.Host.Dtos.EditionLookupDto"][];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/saas/tenants/check-connection-string": {
    get: {
      parameters: {
        query?: {
          connectionString?: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": boolean;
            "application/json": boolean;
            "text/json": boolean;
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/saas/tenants/{id}/set-password": {
    put: {
      parameters: {
        path: {
          id: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["Volo.Saas.Host.Dtos.SaasTenantSetPasswordDto"];
          "text/json": components["schemas"]["Volo.Saas.Host.Dtos.SaasTenantSetPasswordDto"];
          "application/*+json": components["schemas"]["Volo.Saas.Host.Dtos.SaasTenantSetPasswordDto"];
        };
      };
      responses: {
        /** @description Success */
        200: never;
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/text-template-management/template-contents": {
    get: {
      parameters: {
        query: {
          TemplateName: string;
          CultureName?: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.TextTemplateManagement.TextTemplates.TextTemplateContentDto"];
            "application/json": components["schemas"]["Volo.Abp.TextTemplateManagement.TextTemplates.TextTemplateContentDto"];
            "text/json": components["schemas"]["Volo.Abp.TextTemplateManagement.TextTemplates.TextTemplateContentDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
    put: {
      requestBody?: {
        content: {
          "application/json": components["schemas"]["Volo.Abp.TextTemplateManagement.TextTemplates.UpdateTemplateContentInput"];
          "text/json": components["schemas"]["Volo.Abp.TextTemplateManagement.TextTemplates.UpdateTemplateContentInput"];
          "application/*+json": components["schemas"]["Volo.Abp.TextTemplateManagement.TextTemplates.UpdateTemplateContentInput"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.TextTemplateManagement.TextTemplates.TextTemplateContentDto"];
            "application/json": components["schemas"]["Volo.Abp.TextTemplateManagement.TextTemplates.TextTemplateContentDto"];
            "text/json": components["schemas"]["Volo.Abp.TextTemplateManagement.TextTemplates.TextTemplateContentDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/text-template-management/template-contents/restore-to-default": {
    put: {
      requestBody?: {
        content: {
          "application/json": components["schemas"]["Volo.Abp.TextTemplateManagement.TextTemplates.RestoreTemplateContentInput"];
          "text/json": components["schemas"]["Volo.Abp.TextTemplateManagement.TextTemplates.RestoreTemplateContentInput"];
          "application/*+json": components["schemas"]["Volo.Abp.TextTemplateManagement.TextTemplates.RestoreTemplateContentInput"];
        };
      };
      responses: {
        /** @description Success */
        200: never;
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/text-template-management/template-definitions": {
    get: {
      parameters: {
        query?: {
          FilterText?: string;
          Sorting?: string;
          SkipCount?: number;
          MaxResultCount?: number;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Application.Dtos.PagedResultDto`1[[Volo.Abp.TextTemplateManagement.TextTemplates.TemplateDefinitionDto, Volo.Abp.TextTemplateManagement.Application.Contracts, Version=7.2.2.0, Culture=neutral, PublicKeyToken=null]]"];
            "application/json": components["schemas"]["Volo.Abp.Application.Dtos.PagedResultDto`1[[Volo.Abp.TextTemplateManagement.TextTemplates.TemplateDefinitionDto, Volo.Abp.TextTemplateManagement.Application.Contracts, Version=7.2.2.0, Culture=neutral, PublicKeyToken=null]]"];
            "text/json": components["schemas"]["Volo.Abp.Application.Dtos.PagedResultDto`1[[Volo.Abp.TextTemplateManagement.TextTemplates.TemplateDefinitionDto, Volo.Abp.TextTemplateManagement.Application.Contracts, Version=7.2.2.0, Culture=neutral, PublicKeyToken=null]]"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/text-template-management/template-definitions/{name}": {
    get: {
      parameters: {
        path: {
          name: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.TextTemplateManagement.TextTemplates.TemplateDefinitionDto"];
            "application/json": components["schemas"]["Volo.Abp.TextTemplateManagement.TextTemplates.TemplateDefinitionDto"];
            "text/json": components["schemas"]["Volo.Abp.TextTemplateManagement.TextTemplates.TemplateDefinitionDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/identity/users/{id}": {
    get: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Identity.IdentityUserDto"];
            "application/json": components["schemas"]["Volo.Abp.Identity.IdentityUserDto"];
            "text/json": components["schemas"]["Volo.Abp.Identity.IdentityUserDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
    put: {
      parameters: {
        path: {
          id: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["Volo.Abp.Identity.IdentityUserUpdateDto"];
          "text/json": components["schemas"]["Volo.Abp.Identity.IdentityUserUpdateDto"];
          "application/*+json": components["schemas"]["Volo.Abp.Identity.IdentityUserUpdateDto"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Identity.IdentityUserDto"];
            "application/json": components["schemas"]["Volo.Abp.Identity.IdentityUserDto"];
            "text/json": components["schemas"]["Volo.Abp.Identity.IdentityUserDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
    delete: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** @description Success */
        200: never;
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/identity/users": {
    get: {
      parameters: {
        query?: {
          Filter?: string;
          RoleId?: string;
          OrganizationUnitId?: string;
          UserName?: string;
          PhoneNumber?: string;
          EmailAddress?: string;
          Name?: string;
          Surname?: string;
          IsLockedOut?: boolean;
          NotActive?: boolean;
          EmailConfirmed?: boolean;
          IsExternal?: boolean;
          MaxCreationTime?: string;
          MinCreationTime?: string;
          MaxModifitionTime?: string;
          MinModifitionTime?: string;
          Sorting?: string;
          SkipCount?: number;
          MaxResultCount?: number;
          ExtraProperties?: {
            [key: string]: unknown;
          };
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Application.Dtos.PagedResultDto`1[[Volo.Abp.Identity.IdentityUserDto, Volo.Abp.Identity.Pro.Application.Contracts, Version=7.2.2.0, Culture=neutral, PublicKeyToken=null]]"];
            "application/json": components["schemas"]["Volo.Abp.Application.Dtos.PagedResultDto`1[[Volo.Abp.Identity.IdentityUserDto, Volo.Abp.Identity.Pro.Application.Contracts, Version=7.2.2.0, Culture=neutral, PublicKeyToken=null]]"];
            "text/json": components["schemas"]["Volo.Abp.Application.Dtos.PagedResultDto`1[[Volo.Abp.Identity.IdentityUserDto, Volo.Abp.Identity.Pro.Application.Contracts, Version=7.2.2.0, Culture=neutral, PublicKeyToken=null]]"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
    post: {
      requestBody?: {
        content: {
          "application/json": components["schemas"]["Volo.Abp.Identity.IdentityUserCreateDto"];
          "text/json": components["schemas"]["Volo.Abp.Identity.IdentityUserCreateDto"];
          "application/*+json": components["schemas"]["Volo.Abp.Identity.IdentityUserCreateDto"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Identity.IdentityUserDto"];
            "application/json": components["schemas"]["Volo.Abp.Identity.IdentityUserDto"];
            "text/json": components["schemas"]["Volo.Abp.Identity.IdentityUserDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/identity/users/{id}/roles": {
    get: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Application.Dtos.ListResultDto`1[[Volo.Abp.Identity.IdentityRoleDto, Volo.Abp.Identity.Pro.Application.Contracts, Version=7.2.2.0, Culture=neutral, PublicKeyToken=null]]"];
            "application/json": components["schemas"]["Volo.Abp.Application.Dtos.ListResultDto`1[[Volo.Abp.Identity.IdentityRoleDto, Volo.Abp.Identity.Pro.Application.Contracts, Version=7.2.2.0, Culture=neutral, PublicKeyToken=null]]"];
            "text/json": components["schemas"]["Volo.Abp.Application.Dtos.ListResultDto`1[[Volo.Abp.Identity.IdentityRoleDto, Volo.Abp.Identity.Pro.Application.Contracts, Version=7.2.2.0, Culture=neutral, PublicKeyToken=null]]"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
    put: {
      parameters: {
        path: {
          id: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["Volo.Abp.Identity.IdentityUserUpdateRolesDto"];
          "text/json": components["schemas"]["Volo.Abp.Identity.IdentityUserUpdateRolesDto"];
          "application/*+json": components["schemas"]["Volo.Abp.Identity.IdentityUserUpdateRolesDto"];
        };
      };
      responses: {
        /** @description Success */
        200: never;
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/identity/users/assignable-roles": {
    get: {
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Application.Dtos.ListResultDto`1[[Volo.Abp.Identity.IdentityRoleDto, Volo.Abp.Identity.Pro.Application.Contracts, Version=7.2.2.0, Culture=neutral, PublicKeyToken=null]]"];
            "application/json": components["schemas"]["Volo.Abp.Application.Dtos.ListResultDto`1[[Volo.Abp.Identity.IdentityRoleDto, Volo.Abp.Identity.Pro.Application.Contracts, Version=7.2.2.0, Culture=neutral, PublicKeyToken=null]]"];
            "text/json": components["schemas"]["Volo.Abp.Application.Dtos.ListResultDto`1[[Volo.Abp.Identity.IdentityRoleDto, Volo.Abp.Identity.Pro.Application.Contracts, Version=7.2.2.0, Culture=neutral, PublicKeyToken=null]]"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/identity/users/available-organization-units": {
    get: {
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Application.Dtos.ListResultDto`1[[Volo.Abp.Identity.OrganizationUnitWithDetailsDto, Volo.Abp.Identity.Pro.Application.Contracts, Version=7.2.2.0, Culture=neutral, PublicKeyToken=null]]"];
            "application/json": components["schemas"]["Volo.Abp.Application.Dtos.ListResultDto`1[[Volo.Abp.Identity.OrganizationUnitWithDetailsDto, Volo.Abp.Identity.Pro.Application.Contracts, Version=7.2.2.0, Culture=neutral, PublicKeyToken=null]]"];
            "text/json": components["schemas"]["Volo.Abp.Application.Dtos.ListResultDto`1[[Volo.Abp.Identity.OrganizationUnitWithDetailsDto, Volo.Abp.Identity.Pro.Application.Contracts, Version=7.2.2.0, Culture=neutral, PublicKeyToken=null]]"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/identity/users/all-claim-types": {
    get: {
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Identity.ClaimTypeDto"][];
            "application/json": components["schemas"]["Volo.Abp.Identity.ClaimTypeDto"][];
            "text/json": components["schemas"]["Volo.Abp.Identity.ClaimTypeDto"][];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/identity/users/{id}/claims": {
    get: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Identity.IdentityUserClaimDto"][];
            "application/json": components["schemas"]["Volo.Abp.Identity.IdentityUserClaimDto"][];
            "text/json": components["schemas"]["Volo.Abp.Identity.IdentityUserClaimDto"][];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
    put: {
      parameters: {
        path: {
          id: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["Volo.Abp.Identity.IdentityUserClaimDto"][];
          "text/json": components["schemas"]["Volo.Abp.Identity.IdentityUserClaimDto"][];
          "application/*+json": components["schemas"]["Volo.Abp.Identity.IdentityUserClaimDto"][];
        };
      };
      responses: {
        /** @description Success */
        200: never;
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/identity/users/{id}/organization-units": {
    get: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Identity.OrganizationUnitDto"][];
            "application/json": components["schemas"]["Volo.Abp.Identity.OrganizationUnitDto"][];
            "text/json": components["schemas"]["Volo.Abp.Identity.OrganizationUnitDto"][];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/identity/users/{id}/lock/{lockoutEnd}": {
    put: {
      parameters: {
        path: {
          id: string;
          lockoutEnd: string;
        };
      };
      responses: {
        /** @description Success */
        200: never;
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/identity/users/{id}/unlock": {
    put: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** @description Success */
        200: never;
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/identity/users/by-username/{username}": {
    get: {
      parameters: {
        path: {
          username: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Identity.IdentityUserDto"];
            "application/json": components["schemas"]["Volo.Abp.Identity.IdentityUserDto"];
            "text/json": components["schemas"]["Volo.Abp.Identity.IdentityUserDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/identity/users/by-email/{email}": {
    get: {
      parameters: {
        path: {
          email: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Identity.IdentityUserDto"];
            "application/json": components["schemas"]["Volo.Abp.Identity.IdentityUserDto"];
            "text/json": components["schemas"]["Volo.Abp.Identity.IdentityUserDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/identity/users/{id}/two-factor-enabled": {
    get: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": boolean;
            "application/json": boolean;
            "text/json": boolean;
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/identity/users/{id}/two-factor/{enabled}": {
    put: {
      parameters: {
        path: {
          id: string;
          enabled: boolean;
        };
      };
      responses: {
        /** @description Success */
        200: never;
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/identity/users/{id}/change-password": {
    put: {
      parameters: {
        path: {
          id: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["Volo.Abp.Identity.IdentityUserUpdatePasswordInput"];
          "text/json": components["schemas"]["Volo.Abp.Identity.IdentityUserUpdatePasswordInput"];
          "application/*+json": components["schemas"]["Volo.Abp.Identity.IdentityUserUpdatePasswordInput"];
        };
      };
      responses: {
        /** @description Success */
        200: never;
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/identity/users/lookup/roles": {
    get: {
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Identity.IdentityRoleLookupDto"][];
            "application/json": components["schemas"]["Volo.Abp.Identity.IdentityRoleLookupDto"][];
            "text/json": components["schemas"]["Volo.Abp.Identity.IdentityRoleLookupDto"][];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/identity/users/lookup/organization-units": {
    get: {
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Identity.OrganizationUnitLookupDto"][];
            "application/json": components["schemas"]["Volo.Abp.Identity.OrganizationUnitLookupDto"][];
            "text/json": components["schemas"]["Volo.Abp.Identity.OrganizationUnitLookupDto"][];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/identity/users/external-login-Providers": {
    get: {
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Identity.ExternalLoginProviderDto"][];
            "application/json": components["schemas"]["Volo.Abp.Identity.ExternalLoginProviderDto"][];
            "text/json": components["schemas"]["Volo.Abp.Identity.ExternalLoginProviderDto"][];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/identity/users/import-external-user": {
    post: {
      requestBody?: {
        content: {
          "application/json": components["schemas"]["Volo.Abp.Identity.ImportExternalUserInput"];
          "text/json": components["schemas"]["Volo.Abp.Identity.ImportExternalUserInput"];
          "application/*+json": components["schemas"]["Volo.Abp.Identity.ImportExternalUserInput"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Identity.IdentityUserDto"];
            "application/json": components["schemas"]["Volo.Abp.Identity.IdentityUserDto"];
            "text/json": components["schemas"]["Volo.Abp.Identity.IdentityUserDto"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/identity/users/lookup/{id}": {
    get: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Users.UserData"];
            "application/json": components["schemas"]["Volo.Abp.Users.UserData"];
            "text/json": components["schemas"]["Volo.Abp.Users.UserData"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/identity/users/lookup/by-username/{userName}": {
    get: {
      parameters: {
        path: {
          userName: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Users.UserData"];
            "application/json": components["schemas"]["Volo.Abp.Users.UserData"];
            "text/json": components["schemas"]["Volo.Abp.Users.UserData"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/identity/users/lookup/search": {
    get: {
      parameters: {
        query?: {
          Sorting?: string;
          Filter?: string;
          SkipCount?: number;
          MaxResultCount?: number;
          ExtraProperties?: {
            [key: string]: unknown;
          };
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Application.Dtos.ListResultDto`1[[Volo.Abp.Users.UserData, Volo.Abp.Users.Abstractions, Version=7.2.2.0, Culture=neutral, PublicKeyToken=null]]"];
            "application/json": components["schemas"]["Volo.Abp.Application.Dtos.ListResultDto`1[[Volo.Abp.Users.UserData, Volo.Abp.Users.Abstractions, Version=7.2.2.0, Culture=neutral, PublicKeyToken=null]]"];
            "text/json": components["schemas"]["Volo.Abp.Application.Dtos.ListResultDto`1[[Volo.Abp.Users.UserData, Volo.Abp.Users.Abstractions, Version=7.2.2.0, Culture=neutral, PublicKeyToken=null]]"];
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
  "/api/identity/users/lookup/count": {
    get: {
      parameters: {
        query?: {
          Filter?: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "text/plain": number;
            "application/json": number;
            "text/json": number;
          };
        };
        /** @description Bad Request */
        400: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Unauthorized */
        401: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Forbidden */
        403: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        500: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
        /** @description Server Error */
        501: {
          content: {
            "text/plain": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "application/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
            "text/json": components["schemas"]["Volo.Abp.Http.RemoteServiceErrorResponse"];
          };
        };
      };
    };
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    "EasyAbp.BookingService.AssetCategories.Dtos.AssetCategoryDto": {
      extraProperties?: {
        [key: string]: unknown;
      } | null;
      /** Format: uuid */
      id?: string;
      /** Format: date-time */
      creationTime?: string;
      /** Format: uuid */
      creatorId?: string | null;
      /** Format: date-time */
      lastModificationTime?: string | null;
      /** Format: uuid */
      lastModifierId?: string | null;
      isDeleted?: boolean;
      /** Format: uuid */
      deleterId?: string | null;
      /** Format: date-time */
      deletionTime?: string | null;
      assetDefinitionName?: string | null;
      /** Format: uuid */
      periodSchemeId?: string | null;
      defaultPeriodUsable?: components["schemas"]["EasyAbp.BookingService.AssetSchedules.PeriodUsable"];
      timeInAdvance?: components["schemas"]["EasyAbp.BookingService.Dtos.TimeInAdvanceDto"];
      disabled?: boolean;
      code?: string | null;
      /** Format: int32 */
      level?: number;
      /** Format: uuid */
      parentId?: string | null;
      children?: components["schemas"]["EasyAbp.BookingService.AssetCategories.Dtos.AssetCategoryDto"][] | null;
      displayName?: string | null;
    };
    "EasyAbp.BookingService.AssetCategories.Dtos.CreateAssetCategoryDto": {
      extraProperties?: {
        [key: string]: unknown;
      } | null;
      /** Format: uuid */
      periodSchemeId?: string | null;
      defaultPeriodUsable?: components["schemas"]["EasyAbp.BookingService.AssetSchedules.PeriodUsable"];
      timeInAdvance?: components["schemas"]["EasyAbp.BookingService.Dtos.TimeInAdvanceDto"];
      disabled?: boolean;
      /** Format: uuid */
      parentId?: string | null;
      displayName?: string | null;
      assetDefinitionName?: string | null;
    };
    "EasyAbp.BookingService.AssetCategories.Dtos.UpdateAssetCategoryDto": {
      extraProperties?: {
        [key: string]: unknown;
      } | null;
      /** Format: uuid */
      periodSchemeId?: string | null;
      defaultPeriodUsable?: components["schemas"]["EasyAbp.BookingService.AssetSchedules.PeriodUsable"];
      timeInAdvance?: components["schemas"]["EasyAbp.BookingService.Dtos.TimeInAdvanceDto"];
      disabled?: boolean;
      /** Format: uuid */
      parentId?: string | null;
      displayName?: string | null;
    };
    "EasyAbp.BookingService.AssetOccupancies.Dtos.AssetOccupancyDto": {
      extraProperties?: {
        [key: string]: unknown;
      } | null;
      /** Format: uuid */
      id?: string;
      /** Format: date-time */
      creationTime?: string;
      /** Format: uuid */
      creatorId?: string | null;
      /** Format: uuid */
      assetId?: string;
      asset?: string | null;
      assetDefinitionName?: string | null;
      /** Format: int32 */
      volume?: number;
      /** Format: date-time */
      date?: string;
      startingTime?: components["schemas"]["System.TimeSpan"];
      duration?: components["schemas"]["System.TimeSpan"];
      /** Format: uuid */
      occupierUserId?: string | null;
      occupierName?: string | null;
    };
    "EasyAbp.BookingService.AssetOccupancies.Dtos.BookingPeriodDto": {
      /** Format: date-time */
      date?: string;
      startingTime?: components["schemas"]["System.TimeSpan"];
      endingTime?: components["schemas"]["System.TimeSpan"];
      /** Format: uuid */
      periodSchemeId?: string;
      /** Format: uuid */
      periodId?: string;
      /** Format: int32 */
      totalVolume?: number;
      /** Format: int32 */
      availableVolume?: number;
      duration?: components["schemas"]["System.TimeSpan"];
    };
    "EasyAbp.BookingService.AssetOccupancies.Dtos.BulkCreateAssetOccupancyDto": {
      extraProperties?: {
        [key: string]: unknown;
      } | null;
      /** Format: uuid */
      occupierUserId?: string | null;
      models?: components["schemas"]["EasyAbp.BookingService.AssetOccupancyProviders.OccupyAssetInfoModel"][] | null;
      byCategoryModels?: components["schemas"]["EasyAbp.BookingService.AssetOccupancyProviders.OccupyAssetByCategoryInfoModel"][] | null;
    };
    "EasyAbp.BookingService.AssetOccupancies.Dtos.CreateAssetOccupancyByCategoryIdDto": {
      extraProperties?: {
        [key: string]: unknown;
      } | null;
      /** Format: uuid */
      assetCategoryId?: string;
      /** Format: uuid */
      periodSchemeId?: string | null;
      /** Format: int32 */
      volume?: number;
      /** Format: date-time */
      date?: string;
      startingTime?: components["schemas"]["System.TimeSpan"];
      duration?: components["schemas"]["System.TimeSpan"];
      /** Format: uuid */
      occupierUserId?: string | null;
    };
    "EasyAbp.BookingService.AssetOccupancies.Dtos.CreateAssetOccupancyDto": {
      extraProperties?: {
        [key: string]: unknown;
      } | null;
      /** Format: uuid */
      assetId?: string;
      /** Format: int32 */
      volume?: number;
      /** Format: date-time */
      date?: string;
      startingTime?: components["schemas"]["System.TimeSpan"];
      duration?: components["schemas"]["System.TimeSpan"];
      /** Format: uuid */
      occupierUserId?: string | null;
    };
    "EasyAbp.BookingService.AssetOccupancies.Dtos.SearchBookingPeriodsInputDto": {
      /** Format: uuid */
      assetId: string;
      /** Format: date-time */
      currentDateTime?: string | null;
      /** Format: date-time */
      targetDate: string;
    };
    "EasyAbp.BookingService.AssetOccupancies.Dtos.SearchBookingPeriodsResultDto": {
      items?: components["schemas"]["EasyAbp.BookingService.AssetOccupancies.Dtos.BookingPeriodDto"][] | null;
    };
    "EasyAbp.BookingService.AssetOccupancies.Dtos.SearchCategoryBookingPeriodsInputDto": {
      /** Format: uuid */
      categoryId: string;
      /** Format: uuid */
      periodSchemeId?: string | null;
      /** Format: date-time */
      currentDateTime?: string | null;
      /** Format: date-time */
      targetDate: string;
    };
    "EasyAbp.BookingService.AssetOccupancyProviders.OccupyAssetByCategoryInfoModel": {
      /** Format: uuid */
      assetCategoryId?: string;
      /** Format: uuid */
      periodSchemeId?: string | null;
      /** Format: int32 */
      volume?: number;
      /** Format: date-time */
      date?: string;
      startingTime?: components["schemas"]["System.TimeSpan"];
      duration?: components["schemas"]["System.TimeSpan"];
    };
    "EasyAbp.BookingService.AssetOccupancyProviders.OccupyAssetInfoModel": {
      /** Format: uuid */
      assetId?: string;
      /** Format: int32 */
      volume?: number;
      /** Format: date-time */
      date?: string;
      startingTime?: components["schemas"]["System.TimeSpan"];
      duration?: components["schemas"]["System.TimeSpan"];
    };
    "EasyAbp.BookingService.AssetPeriodSchemes.Dtos.AssetPeriodSchemeDto": {
      extraProperties?: {
        [key: string]: unknown;
      } | null;
      /** Format: date-time */
      creationTime?: string;
      /** Format: uuid */
      creatorId?: string | null;
      /** Format: date-time */
      lastModificationTime?: string | null;
      /** Format: uuid */
      lastModifierId?: string | null;
      /** Format: uuid */
      periodSchemeId?: string;
      /** Format: uuid */
      assetId?: string;
      /** Format: date-time */
      date?: string;
    };
    "EasyAbp.BookingService.AssetPeriodSchemes.Dtos.CreateAssetPeriodSchemeDto": {
      extraProperties?: {
        [key: string]: unknown;
      } | null;
      /** Format: uuid */
      periodSchemeId?: string;
      /** Format: uuid */
      assetId?: string;
      /** Format: date-time */
      date?: string;
    };
    "EasyAbp.BookingService.AssetPeriodSchemes.Dtos.UpdateAssetPeriodSchemeDto": {
      extraProperties?: {
        [key: string]: unknown;
      } | null;
      /** Format: date-time */
      date?: string;
    };
    "EasyAbp.BookingService.AssetSchedules.Dtos.AssetScheduleDto": {
      extraProperties?: {
        [key: string]: unknown;
      } | null;
      /** Format: uuid */
      id?: string;
      /** Format: date-time */
      creationTime?: string;
      /** Format: uuid */
      creatorId?: string | null;
      /** Format: date-time */
      lastModificationTime?: string | null;
      /** Format: uuid */
      lastModifierId?: string | null;
      isDeleted?: boolean;
      /** Format: uuid */
      deleterId?: string | null;
      /** Format: date-time */
      deletionTime?: string | null;
      /** Format: uuid */
      assetId?: string;
      /** Format: uuid */
      periodSchemeId?: string;
      /** Format: uuid */
      periodId?: string;
      periodUsable?: components["schemas"]["EasyAbp.BookingService.AssetSchedules.PeriodUsable"];
      timeInAdvance?: components["schemas"]["EasyAbp.BookingService.Dtos.TimeInAdvanceDto"];
    };
    "EasyAbp.BookingService.AssetSchedules.Dtos.CreateAssetScheduleDto": {
      extraProperties?: {
        [key: string]: unknown;
      } | null;
      /** Format: date-time */
      date?: string;
      /** Format: uuid */
      assetId?: string;
      /** Format: uuid */
      periodSchemeId?: string;
      /** Format: uuid */
      periodId?: string;
      periodUsable?: components["schemas"]["EasyAbp.BookingService.AssetSchedules.PeriodUsable"];
      timeInAdvance?: components["schemas"]["EasyAbp.BookingService.Dtos.TimeInAdvanceDto"];
    };
    "EasyAbp.BookingService.AssetSchedules.Dtos.UpdateAssetScheduleDto": {
      extraProperties?: {
        [key: string]: unknown;
      } | null;
      periodUsable?: components["schemas"]["EasyAbp.BookingService.AssetSchedules.PeriodUsable"];
      timeInAdvance?: components["schemas"]["EasyAbp.BookingService.Dtos.TimeInAdvanceDto"];
    };
    /**
     * Format: int32
     * @enum {integer}
     */
    "EasyAbp.BookingService.AssetSchedules.PeriodUsable": 0 | 1;
    "EasyAbp.BookingService.Assets.Dtos.AssetDto": {
      extraProperties?: {
        [key: string]: unknown;
      } | null;
      /** Format: uuid */
      id?: string;
      /** Format: date-time */
      creationTime?: string;
      /** Format: uuid */
      creatorId?: string | null;
      /** Format: date-time */
      lastModificationTime?: string | null;
      /** Format: uuid */
      lastModifierId?: string | null;
      isDeleted?: boolean;
      /** Format: uuid */
      deleterId?: string | null;
      /** Format: date-time */
      deletionTime?: string | null;
      name?: string | null;
      assetDefinitionName?: string | null;
      /** Format: uuid */
      assetCategoryId?: string;
      /** Format: uuid */
      periodSchemeId?: string | null;
      defaultPeriodUsable?: components["schemas"]["EasyAbp.BookingService.AssetSchedules.PeriodUsable"];
      /** Format: int32 */
      volume?: number;
      /** Format: int32 */
      priority?: number;
      timeInAdvance?: components["schemas"]["EasyAbp.BookingService.Dtos.TimeInAdvanceDto"];
      disabled?: boolean;
    };
    "EasyAbp.BookingService.Assets.Dtos.CreateUpdateAssetDto": {
      extraProperties?: {
        [key: string]: unknown;
      } | null;
      name?: string | null;
      assetDefinitionName: string;
      /** Format: uuid */
      assetCategoryId?: string;
      /** Format: uuid */
      periodSchemeId?: string | null;
      defaultPeriodUsable?: components["schemas"]["EasyAbp.BookingService.AssetSchedules.PeriodUsable"];
      /** Format: int32 */
      volume?: number;
      /** Format: int32 */
      priority?: number;
      timeInAdvance?: components["schemas"]["EasyAbp.BookingService.Dtos.TimeInAdvanceDto"];
      disabled?: boolean;
    };
    "EasyAbp.BookingService.Dtos.TimeInAdvanceDto": {
      /** Format: int32 */
      maxDaysInAdvance: number;
      maxTimespanInAdvance?: components["schemas"]["System.TimeSpan"];
      /** Format: int32 */
      minDaysInAdvance?: number | null;
      minTimespanInAdvance?: components["schemas"]["System.TimeSpan"];
    };
    "EasyAbp.BookingService.PeriodSchemes.Dtos.CreatePeriodSchemeDto": {
      extraProperties?: {
        [key: string]: unknown;
      } | null;
      name?: string | null;
      periods?: components["schemas"]["EasyAbp.BookingService.PeriodSchemes.Dtos.CreateUpdatePeriodDto"][] | null;
    };
    "EasyAbp.BookingService.PeriodSchemes.Dtos.CreateUpdatePeriodDto": {
      extraProperties?: {
        [key: string]: unknown;
      } | null;
      startingTime?: components["schemas"]["System.TimeSpan"];
      duration?: components["schemas"]["System.TimeSpan"];
    };
    "EasyAbp.BookingService.PeriodSchemes.Dtos.PeriodDto": {
      /** Format: uuid */
      id?: string;
      startingTime?: components["schemas"]["System.TimeSpan"];
      duration?: components["schemas"]["System.TimeSpan"];
    };
    "EasyAbp.BookingService.PeriodSchemes.Dtos.PeriodSchemeDto": {
      extraProperties?: {
        [key: string]: unknown;
      } | null;
      /** Format: uuid */
      id?: string;
      /** Format: date-time */
      creationTime?: string;
      /** Format: uuid */
      creatorId?: string | null;
      /** Format: date-time */
      lastModificationTime?: string | null;
      /** Format: uuid */
      lastModifierId?: string | null;
      isDeleted?: boolean;
      /** Format: uuid */
      deleterId?: string | null;
      /** Format: date-time */
      deletionTime?: string | null;
      name?: string | null;
      isDefault?: boolean;
      periods?: components["schemas"]["EasyAbp.BookingService.PeriodSchemes.Dtos.PeriodDto"][] | null;
    };
    "EasyAbp.BookingService.PeriodSchemes.Dtos.UpdatePeriodSchemeDto": {
      extraProperties?: {
        [key: string]: unknown;
      } | null;
      name?: string | null;
    };
    /**
     * Format: int32
     * @enum {integer}
     */
    "System.Net.HttpStatusCode": 100 | 101 | 102 | 103 | 200 | 201 | 202 | 203 | 204 | 205 | 206 | 207 | 208 | 226 | 300 | 301 | 302 | 303 | 304 | 305 | 306 | 307 | 308 | 400 | 401 | 402 | 403 | 404 | 405 | 406 | 407 | 408 | 409 | 410 | 411 | 412 | 413 | 414 | 415 | 416 | 417 | 421 | 422 | 423 | 424 | 426 | 428 | 429 | 431 | 451 | 500 | 501 | 502 | 503 | 504 | 505 | 506 | 507 | 508 | 510 | 511;
    "System.TimeSpan": {
      /** Format: int64 */
      ticks?: number;
      /** Format: int32 */
      days?: number;
      /** Format: int32 */
      hours?: number;
      /** Format: int32 */
      milliseconds?: number;
      /** Format: int32 */
      microseconds?: number;
      /** Format: int32 */
      nanoseconds?: number;
      /** Format: int32 */
      minutes?: number;
      /** Format: int32 */
      seconds?: number;
      /** Format: double */
      totalDays?: number;
      /** Format: double */
      totalHours?: number;
      /** Format: double */
      totalMilliseconds?: number;
      /** Format: double */
      totalMicroseconds?: number;
      /** Format: double */
      totalNanoseconds?: number;
      /** Format: double */
      totalMinutes?: number;
      /** Format: double */
      totalSeconds?: number;
    };
    "Tourmap.Addition.AdditionCategories.AdditionCategoryDto": {
      /** Format: uuid */
      id?: string;
      /** Format: date-time */
      creationTime?: string;
      /** Format: uuid */
      creatorId?: string | null;
      /** Format: date-time */
      lastModificationTime?: string | null;
      /** Format: uuid */
      lastModifierId?: string | null;
      isDeleted?: boolean;
      /** Format: uuid */
      deleterId?: string | null;
      /** Format: date-time */
      deletionTime?: string | null;
      /** Format: uuid */
      coverImageId?: string | null;
      /** Format: uuid */
      parentId?: string | null;
      displayName?: string | null;
      /** Format: int32 */
      index?: number;
    };
    "Tourmap.Addition.AdditionCategories.AdditionCategoryDto+Create": {
      /** Format: uuid */
      coverImageId?: string | null;
      /** Format: uuid */
      parentId?: string | null;
      displayName?: string | null;
      /** Format: int32 */
      index?: number;
    };
    "Tourmap.Addition.AdditionCategories.AdditionCategoryDto+Update": {
      /** Format: uuid */
      coverImageId?: string | null;
      /** Format: uuid */
      parentId?: string | null;
      displayName?: string | null;
      /** Format: int32 */
      index?: number;
    };
    "Tourmap.Addition.Additions.AdditionAmountDto": {
      title?: string | null;
      unit?: string | null;
      /** Format: int32 */
      minLimit?: number;
      /** Format: int32 */
      maxLimit?: number;
      /** Format: int32 */
      totalAmountLimit?: number | null;
      /** Format: int32 */
      purchaseLimit?: number | null;
    };
    "Tourmap.Addition.Additions.AdditionCustomerRemarkDto": {
      title?: string | null;
      isRequired?: boolean | null;
    };
    "Tourmap.Addition.Additions.AdditionDto": {
      /** Format: uuid */
      id?: string;
      /** Format: date-time */
      creationTime?: string;
      /** Format: uuid */
      creatorId?: string | null;
      /** Format: date-time */
      lastModificationTime?: string | null;
      /** Format: uuid */
      lastModifierId?: string | null;
      isDeleted?: boolean;
      /** Format: uuid */
      deleterId?: string | null;
      /** Format: date-time */
      deletionTime?: string | null;
      /** Format: uuid */
      coverImageId?: string | null;
      /** Format: uuid */
      additionCategoryId?: string;
      displayName?: string | null;
      /** Format: int32 */
      index?: number;
      /** Format: double */
      handlingFeeRatio?: number;
      primarySpec?: components["schemas"]["Tourmap.Addition.Additions.AdditionSpecDto"];
      secondarySpec?: components["schemas"]["Tourmap.Addition.Additions.AdditionSpecDto"];
      primaryTimeSpec?: components["schemas"]["Tourmap.Addition.Additions.AdditionTimeSpecDto"];
      secondaryTimeSpec?: components["schemas"]["Tourmap.Addition.Additions.AdditionTimeSpecDto"];
      schedule?: components["schemas"]["Tourmap.Addition.Additions.AdditionScheduleDto"];
      amount?: components["schemas"]["Tourmap.Addition.Additions.AdditionAmountDto"];
      cutomerRemark?: components["schemas"]["Tourmap.Addition.Additions.AdditionCustomerRemarkDto"];
      introductions?: components["schemas"]["Tourmap.Addition.Additions.AdditionIntroductionsDto"];
    };
    "Tourmap.Addition.Additions.AdditionDto+Create": {
      /** Format: uuid */
      coverImageId?: string | null;
      /** Format: uuid */
      additionCategoryId?: string;
      displayName?: string | null;
      /** Format: int32 */
      index?: number;
      /** Format: double */
      handlingFeeRatio?: number;
      primarySpec?: components["schemas"]["Tourmap.Addition.Additions.AdditionSpecDto"];
      secondarySpec?: components["schemas"]["Tourmap.Addition.Additions.AdditionSpecDto"];
      primaryTimeSpec?: components["schemas"]["Tourmap.Addition.Additions.AdditionTimeSpecDto"];
      secondaryTimeSpec?: components["schemas"]["Tourmap.Addition.Additions.AdditionTimeSpecDto"];
      schedule?: components["schemas"]["Tourmap.Addition.Additions.AdditionScheduleDto"];
      amount?: components["schemas"]["Tourmap.Addition.Additions.AdditionAmountDto"];
      cutomerRemark?: components["schemas"]["Tourmap.Addition.Additions.AdditionCustomerRemarkDto"];
      introductions?: components["schemas"]["Tourmap.Addition.Additions.AdditionIntroductionsDto"];
    };
    "Tourmap.Addition.Additions.AdditionDto+Update": {
      /** Format: uuid */
      coverImageId?: string | null;
      /** Format: uuid */
      additionCategoryId?: string;
      displayName?: string | null;
      /** Format: int32 */
      index?: number;
      /** Format: double */
      handlingFeeRatio?: number;
      primarySpec?: components["schemas"]["Tourmap.Addition.Additions.AdditionSpecDto"];
      secondarySpec?: components["schemas"]["Tourmap.Addition.Additions.AdditionSpecDto"];
      primaryTimeSpec?: components["schemas"]["Tourmap.Addition.Additions.AdditionTimeSpecDto"];
      secondaryTimeSpec?: components["schemas"]["Tourmap.Addition.Additions.AdditionTimeSpecDto"];
      schedule?: components["schemas"]["Tourmap.Addition.Additions.AdditionScheduleDto"];
      amount?: components["schemas"]["Tourmap.Addition.Additions.AdditionAmountDto"];
      cutomerRemark?: components["schemas"]["Tourmap.Addition.Additions.AdditionCustomerRemarkDto"];
      introductions?: components["schemas"]["Tourmap.Addition.Additions.AdditionIntroductionsDto"];
    };
    "Tourmap.Addition.Additions.AdditionIntroductionsDto": {
      subtitle?: string | null;
      summary?: string | null;
      productIntro?: string | null;
      howToUse?: string | null;
      feature?: string | null;
      notice?: string | null;
    };
    "Tourmap.Addition.Additions.AdditionScheduleDto": {
      /** Format: int32 */
      prepareTime?: number;
      /** Format: int32 */
      preProvideTime?: number;
      /** Format: int32 */
      postProvideTime?: number;
    };
    "Tourmap.Addition.Additions.AdditionSpecDto": {
      title?: string | null;
      options?: string | null;
    };
    "Tourmap.Addition.Additions.AdditionTimeSpecDto": {
      dateTitle?: string | null;
      timeTitle?: string | null;
      startTime?: components["schemas"]["System.TimeSpan"];
      endTime?: components["schemas"]["System.TimeSpan"];
      /** Format: int32 */
      interval?: number | null;
    };
    "Tourmap.Camping.CampingAreas.CampingAreaDto": {
      /** Format: uuid */
      id?: string;
      /** Format: date-time */
      creationTime?: string;
      /** Format: uuid */
      creatorId?: string | null;
      /** Format: date-time */
      lastModificationTime?: string | null;
      /** Format: uuid */
      lastModifierId?: string | null;
      isDeleted?: boolean;
      /** Format: uuid */
      deleterId?: string | null;
      /** Format: date-time */
      deletionTime?: string | null;
      displayName?: string | null;
      /** Format: int32 */
      deafultAddPeopleLimit?: number;
      /** Format: int32 */
      defaultAddPeoplePrice?: number;
      /** Format: uuid */
      coverImageId?: string | null;
      /** Format: int32 */
      index?: number;
    };
    "Tourmap.Camping.CampingAreas.CampingAreaDto+Create": {
      displayName?: string | null;
      /** Format: int32 */
      deafultAddPeopleLimit?: number;
      /** Format: int32 */
      defaultAddPeoplePrice?: number;
      /** Format: uuid */
      coverImageId?: string | null;
      /** Format: int32 */
      index?: number;
    };
    "Tourmap.Camping.CampingAreas.CampingAreaDto+ForBrowse": {
      campingArea?: components["schemas"]["Tourmap.Camping.CampingAreas.CampingAreaDto"];
      coverImage?: components["schemas"]["Volo.Cmskit.MediaDescriptors.MediaDescriptorsDto+Attachment"];
      campings?: components["schemas"]["Tourmap.Camping.Campings.CampingDto+ForBrowse"][] | null;
    };
    "Tourmap.Camping.CampingAreas.CampingAreaDto+Update": {
      displayName?: string | null;
      /** Format: int32 */
      deafultAddPeopleLimit?: number;
      /** Format: int32 */
      defaultAddPeoplePrice?: number;
      /** Format: uuid */
      coverImageId?: string | null;
      /** Format: int32 */
      index?: number;
    };
    "Tourmap.Camping.Campings.CampingDto": {
      /** Format: uuid */
      id?: string;
      /** Format: date-time */
      creationTime?: string;
      /** Format: uuid */
      creatorId?: string | null;
      /** Format: date-time */
      lastModificationTime?: string | null;
      /** Format: uuid */
      lastModifierId?: string | null;
      isDeleted?: boolean;
      /** Format: uuid */
      deleterId?: string | null;
      /** Format: date-time */
      deletionTime?: string | null;
      /** Format: uuid */
      campingAreaId?: string;
      /** Format: uuid */
      assetId?: string;
      displayName?: string | null;
      /** Format: int32 */
      addPeopleLimit?: number | null;
      /** Format: int32 */
      addPeoplePrice?: number | null;
      defaultUsable?: components["schemas"]["EasyAbp.BookingService.AssetSchedules.PeriodUsable"];
      description?: string | null;
      /** Format: int32 */
      index?: number;
    };
    "Tourmap.Camping.Campings.CampingDto+Create": {
      /** Format: uuid */
      campingAreaId?: string;
      /** Format: uuid */
      assetId?: string;
      displayName?: string | null;
      /** Format: int32 */
      addPeopleLimit?: number | null;
      /** Format: int32 */
      addPeoplePrice?: number | null;
      defaultUsable?: components["schemas"]["EasyAbp.BookingService.AssetSchedules.PeriodUsable"];
      description?: string | null;
      /** Format: int32 */
      index?: number;
    };
    "Tourmap.Camping.Campings.CampingDto+ForBrowse": {
      camping?: components["schemas"]["Tourmap.Camping.Campings.CampingDto"];
      asset?: components["schemas"]["EasyAbp.BookingService.Assets.Dtos.AssetDto"];
      attachments?: components["schemas"]["Volo.Cmskit.MediaDescriptors.MediaDescriptorsDto+Attachment"][] | null;
    };
    "Tourmap.Camping.Campings.CampingDto+Update": {
      /** Format: uuid */
      campingAreaId?: string;
      /** Format: uuid */
      assetId?: string;
      displayName?: string | null;
      /** Format: int32 */
      addPeopleLimit?: number | null;
      /** Format: int32 */
      addPeoplePrice?: number | null;
      defaultUsable?: components["schemas"]["EasyAbp.BookingService.AssetSchedules.PeriodUsable"];
      description?: string | null;
      /** Format: int32 */
      index?: number;
    };
    "Tourmap.Camping.Settings.CampingSettingsDto": {
      /** Format: int32 */
      salesDetailDisplayDayCount?: number;
      /** Format: int32 */
      calendarMaximumDays?: number;
      timeInAdvance?: components["schemas"]["EasyAbp.BookingService.Dtos.TimeInAdvanceDto"];
    };
    "Tourmap.ProductService.DailyPeriodSchemes.DailyPeriodSchemeDto": {
      /** Format: uuid */
      id?: string;
      /** Format: date-time */
      creationTime?: string;
      /** Format: uuid */
      creatorId?: string | null;
      /** Format: date-time */
      lastModificationTime?: string | null;
      /** Format: uuid */
      lastModifierId?: string | null;
      isDeleted?: boolean;
      /** Format: uuid */
      deleterId?: string | null;
      /** Format: date-time */
      deletionTime?: string | null;
      /** Format: uuid */
      productGroupId?: string;
      /** Format: date-time */
      date?: string;
      /** Format: uuid */
      periodSchemeId?: string;
    };
    "Tourmap.ProductService.DailyPeriodSchemes.DailyPeriodSchemeDto+ForCalendar": {
      calendar?: ({
        [key: string]: components["schemas"]["Tourmap.ProductService.DailyPeriodSchemes.DailyPeriodSchemeDto+ForCalendar+Daily"] | undefined;
      }) | null;
      periodSchemes?: components["schemas"]["EasyAbp.BookingService.PeriodSchemes.Dtos.PeriodSchemeDto"][] | null;
    };
    "Tourmap.ProductService.DailyPeriodSchemes.DailyPeriodSchemeDto+ForCalendar+Daily": {
      dailyPeriodScheme?: components["schemas"]["Tourmap.ProductService.DailyPeriodSchemes.DailyPeriodSchemeDto"];
      intervalPeriodScheme?: components["schemas"]["Tourmap.ProductService.IntervalPeriodSchemes.IntervalPeriodSchemeDto"];
      activePeriodSchemeName?: string | null;
    };
    "Tourmap.ProductService.DailyPeriodSchemes.DailyPeriodSchemeDto+Update": {
      /** Format: uuid */
      productGroupId?: string;
      /** Format: date-time */
      date?: string;
      /** Format: uuid */
      periodSchemeId?: string;
    };
    "Tourmap.ProductService.EntitySchedules.EntityScheduleDto": {
      /** Format: uuid */
      id?: string;
      /** Format: date-time */
      creationTime?: string;
      /** Format: uuid */
      creatorId?: string | null;
      /** Format: date-time */
      lastModificationTime?: string | null;
      /** Format: uuid */
      lastModifierId?: string | null;
      isDeleted?: boolean;
      /** Format: uuid */
      deleterId?: string | null;
      /** Format: date-time */
      deletionTime?: string | null;
      /** Format: date-time */
      date?: string;
      /** Format: uuid */
      entityId?: string;
      periodUsable?: components["schemas"]["EasyAbp.BookingService.AssetSchedules.PeriodUsable"];
    };
    "Tourmap.ProductService.EntitySchedules.EntityScheduleDto+CalculateSchedulesResult": {
      entitySchedule?: components["schemas"]["Tourmap.ProductService.EntitySchedules.EntityScheduleDto"];
      canEdit?: boolean;
      rejectSource?: string | null;
      /** Format: date-time */
      date?: string;
    };
    "Tourmap.ProductService.EntitySchedules.EntityScheduleDto+Create": {
      /** Format: date-time */
      date?: string;
      /** Format: uuid */
      entityId?: string;
      periodUsable?: components["schemas"]["EasyAbp.BookingService.AssetSchedules.PeriodUsable"];
    };
    /**
     * Format: int32
     * @enum {integer}
     */
    "Tourmap.ProductService.EntitySchedules.EntityScheduleType": 0 | 1 | 2 | 3;
    "Tourmap.ProductService.IntervalPeriodSchemes.IntervalPeriodSchemeDto": {
      /** Format: uuid */
      id?: string;
      /** Format: date-time */
      creationTime?: string;
      /** Format: uuid */
      creatorId?: string | null;
      /** Format: date-time */
      lastModificationTime?: string | null;
      /** Format: uuid */
      lastModifierId?: string | null;
      isDeleted?: boolean;
      /** Format: uuid */
      deleterId?: string | null;
      /** Format: date-time */
      deletionTime?: string | null;
      /** Format: uuid */
      productGroupId?: string;
      /** Format: date-time */
      startDate?: string;
      /** Format: date-time */
      endDate?: string;
      isDefault?: boolean;
      weekOfPeriodScheme?: components["schemas"]["Tourmap.ProductService.IntervalPeriodSchemes.WeekOfPeriodSchemeDto"];
    };
    "Tourmap.ProductService.IntervalPeriodSchemes.IntervalPeriodSchemeDto+Create": {
      /** Format: uuid */
      productGroupId?: string;
      /** Format: date-time */
      startDate?: string;
      /** Format: date-time */
      endDate?: string;
      isDefault?: boolean;
      weekOfPeriodScheme?: components["schemas"]["Tourmap.ProductService.IntervalPeriodSchemes.WeekOfPeriodSchemeDto"];
    };
    "Tourmap.ProductService.IntervalPeriodSchemes.IntervalPeriodSchemeDto+Update": {
      /** Format: uuid */
      productGroupId?: string;
      /** Format: date-time */
      startDate?: string;
      /** Format: date-time */
      endDate?: string;
      isDefault?: boolean;
      weekOfPeriodScheme?: components["schemas"]["Tourmap.ProductService.IntervalPeriodSchemes.WeekOfPeriodSchemeDto"];
    };
    "Tourmap.ProductService.IntervalPeriodSchemes.WeekOfPeriodSchemeDto": {
      /** Format: uuid */
      sunday?: string;
      /** Format: uuid */
      monday?: string;
      /** Format: uuid */
      tuesday?: string;
      /** Format: uuid */
      wednesday?: string;
      /** Format: uuid */
      thursday?: string;
      /** Format: uuid */
      friday?: string;
      /** Format: uuid */
      saturday?: string;
    };
    /**
     * Format: int32
     * @enum {integer}
     */
    "Tourmap.ProductService.ProductGroups.AssetType": 0 | 1;
    "Tourmap.ProductService.ProductGroups.ProductGroupDto": {
      /** Format: uuid */
      id?: string;
      /** Format: date-time */
      creationTime?: string;
      /** Format: uuid */
      creatorId?: string | null;
      /** Format: date-time */
      lastModificationTime?: string | null;
      /** Format: uuid */
      lastModifierId?: string | null;
      isDeleted?: boolean;
      /** Format: uuid */
      deleterId?: string | null;
      /** Format: date-time */
      deletionTime?: string | null;
      name?: string | null;
      isPrimary?: boolean;
      assetType?: components["schemas"]["Tourmap.ProductService.ProductGroups.AssetType"];
      defaultPeriodUsable?: components["schemas"]["EasyAbp.BookingService.AssetSchedules.PeriodUsable"];
    };
    "Tourmap.ProductService.ProductGroups.ProductGroupDto+FirstCanBookingDate": {
      /** Format: date-time */
      date?: string;
    };
    "Tourmap.ProductService.ProductGroups.ProductGroupDto+TimeInAdvance": {
      /** Format: int32 */
      maxDaysInAdvance?: number;
      /** Format: int32 */
      minDaysInAdvance?: number;
    };
    "Tourmap.ProductService.ProductGroups.ProductGroupDto+WithNavigationProperties": {
      productGroup?: components["schemas"]["Tourmap.ProductService.ProductGroups.ProductGroupDto"];
      periodSchemes?: components["schemas"]["EasyAbp.BookingService.PeriodSchemes.Dtos.PeriodSchemeDto"][] | null;
      assets?: components["schemas"]["EasyAbp.BookingService.Assets.Dtos.AssetDto"][] | null;
      assetCategories?: components["schemas"]["EasyAbp.BookingService.AssetCategories.Dtos.AssetCategoryDto"][] | null;
    };
    "Tourmap.ProductService.ProductPeriodPrices.ProductPeriodPriceDto": {
      /** Format: uuid */
      id?: string;
      /** Format: date-time */
      creationTime?: string;
      /** Format: uuid */
      creatorId?: string | null;
      /** Format: date-time */
      lastModificationTime?: string | null;
      /** Format: uuid */
      lastModifierId?: string | null;
      isDeleted?: boolean;
      /** Format: uuid */
      deleterId?: string | null;
      /** Format: date-time */
      deletionTime?: string | null;
      /** Format: uuid */
      productPriceId?: string;
      /** Format: uuid */
      periodId?: string;
      /** Format: double */
      price?: number;
    };
    "Tourmap.ProductService.ProductPeriodPrices.ProductPeriodPriceDto+Create": {
      /** Format: uuid */
      productPriceId?: string;
      /** Format: uuid */
      periodId?: string;
      /** Format: double */
      price?: number;
    };
    "Tourmap.ProductService.ProductPrices.ProductPriceDto": {
      /** Format: uuid */
      id?: string;
      /** Format: date-time */
      creationTime?: string;
      /** Format: uuid */
      creatorId?: string | null;
      /** Format: date-time */
      lastModificationTime?: string | null;
      /** Format: uuid */
      lastModifierId?: string | null;
      isDeleted?: boolean;
      /** Format: uuid */
      deleterId?: string | null;
      /** Format: date-time */
      deletionTime?: string | null;
      /** Format: uuid */
      productId?: string;
      /** Format: uuid */
      periodSchemeId?: string;
      /** Format: double */
      defaultPrice?: number;
    };
    "Tourmap.ProductService.ProductPrices.ProductPriceDto+Create": {
      /** Format: uuid */
      productId?: string;
      /** Format: uuid */
      periodSchemeId?: string;
      /** Format: double */
      defaultPrice?: number;
    };
    "Tourmap.ProductService.ProductPrices.ProductPriceDto+CreateWithPeriodPrice": {
      /** Format: uuid */
      productId?: string;
      /** Format: uuid */
      periodSchemeId?: string;
      /** Format: double */
      defaultPrice?: number;
      productPeriodPrice?: components["schemas"]["Tourmap.ProductService.ProductPrices.ProductPriceDto+CreateWithPeriodPrice+WithPeriodPrice"][] | null;
    };
    "Tourmap.ProductService.ProductPrices.ProductPriceDto+CreateWithPeriodPrice+WithPeriodPrice": {
      /** Format: uuid */
      periodId?: string;
      /** Format: double */
      price?: number;
    };
    "Tourmap.ProductService.ProductPrices.ProductPriceDto+WithNavigationProperties": {
      productPrice?: components["schemas"]["Tourmap.ProductService.ProductPrices.ProductPriceDto"];
      product?: components["schemas"]["Tourmap.ProductService.Products.ProductDto"];
      periodScheme?: components["schemas"]["EasyAbp.BookingService.PeriodSchemes.Dtos.PeriodSchemeDto"];
      productPeriodPrices?: components["schemas"]["Tourmap.ProductService.ProductPeriodPrices.ProductPeriodPriceDto"][] | null;
    };
    "Tourmap.ProductService.Products.BookingCalendarDataDto": {
      canBooking?: components["schemas"]["Tourmap.ProductService.Products.BookingCalendarType"];
    };
    "Tourmap.ProductService.Products.BookingCalendarDto": {
      /** Format: date-time */
      month?: string;
      bookingableDays?: ({
        [key: string]: components["schemas"]["Tourmap.ProductService.Products.BookingCalendarDataDto"] | undefined;
      }) | null;
    };
    /**
     * Format: int32
     * @enum {integer}
     */
    "Tourmap.ProductService.Products.BookingCalendarType": 0 | 1 | 2;
    "Tourmap.ProductService.Products.CampingProductViewDto+AvailbleProjectDto": {
      project?: components["schemas"]["Tourmap.ProductService.Projects.ProjectDto"];
      product?: components["schemas"]["Tourmap.ProductService.Products.ProductDto"];
      /** Format: double */
      price?: number;
    };
    "Tourmap.ProductService.Products.CampingProductViewDto+CampingProductDetailBrowseDto": {
      camping?: components["schemas"]["Tourmap.Camping.Campings.CampingDto"];
      campingImages?: components["schemas"]["Tourmap.ProductService.Products.CampingProductViewDto+FileDetailDto"][] | null;
      product?: components["schemas"]["Tourmap.ProductService.Products.ProductDto"];
      project?: components["schemas"]["Tourmap.ProductService.Projects.ProjectDto"];
      /** Format: double */
      price?: number;
    };
    "Tourmap.ProductService.Products.CampingProductViewDto+CampingProjectDetailDto": {
      availbleProjects?: components["schemas"]["Tourmap.ProductService.Products.CampingProductViewDto+AvailbleProjectDto"][] | null;
    };
    "Tourmap.ProductService.Products.CampingProductViewDto+CampingWithDetailDto": {
      camping?: components["schemas"]["Tourmap.Camping.Campings.CampingDto"];
      campingImages?: components["schemas"]["Tourmap.ProductService.Products.CampingProductViewDto+FileDetailDto"][] | null;
      campingProjectDetails?: ({
        [key: string]: components["schemas"]["Tourmap.ProductService.Products.CampingProductViewDto+CampingProjectDetailDto"] | undefined;
      }) | null;
    };
    "Tourmap.ProductService.Products.CampingProductViewDto+FileDetailDto": {
      /** Format: uuid */
      id?: string;
      name?: string | null;
      url?: string | null;
      mineType?: string | null;
      /** Format: int64 */
      size?: number;
    };
    "Tourmap.ProductService.Products.ProductDto": {
      /** Format: uuid */
      id?: string;
      /** Format: date-time */
      creationTime?: string;
      /** Format: uuid */
      creatorId?: string | null;
      /** Format: date-time */
      lastModificationTime?: string | null;
      /** Format: uuid */
      lastModifierId?: string | null;
      isDeleted?: boolean;
      /** Format: uuid */
      deleterId?: string | null;
      /** Format: date-time */
      deletionTime?: string | null;
      /** Format: uuid */
      productGroupId?: string;
      /** Format: uuid */
      catalogId?: string;
      /** Format: uuid */
      projectId?: string;
      displayName?: string | null;
      description?: string | null;
      defaultPeriodUsable?: components["schemas"]["EasyAbp.BookingService.AssetSchedules.PeriodUsable"];
    };
    "Tourmap.ProductService.Products.ProductDto+CheckCanCreateResult": {
      canCreate?: boolean;
    };
    "Tourmap.ProductService.Products.ProductDto+ForBrowse": {
      product?: components["schemas"]["Tourmap.ProductService.Products.ProductDto"];
      project?: components["schemas"]["Tourmap.ProductService.Projects.ProjectDto"];
      camping?: components["schemas"]["Tourmap.Camping.Campings.CampingDto"];
      productGroup?: components["schemas"]["Tourmap.ProductService.ProductGroups.ProductGroupDto+WithNavigationProperties"];
      asset?: components["schemas"]["EasyAbp.BookingService.Assets.Dtos.AssetDto"];
    };
    "Tourmap.ProductService.Products.ProductDto+ForCamping": {
      /** Format: uuid */
      productGroupId?: string;
      /** Format: uuid */
      campingId?: string;
      /** Format: uuid */
      projectId?: string;
      displayName?: string | null;
      description?: string | null;
      defaultPeriodUsable?: components["schemas"]["EasyAbp.BookingService.AssetSchedules.PeriodUsable"];
    };
    "Tourmap.ProductService.Projects.ProjectDto": {
      /** Format: uuid */
      id?: string;
      /** Format: date-time */
      creationTime?: string;
      /** Format: uuid */
      creatorId?: string | null;
      /** Format: date-time */
      lastModificationTime?: string | null;
      /** Format: uuid */
      lastModifierId?: string | null;
      isDeleted?: boolean;
      /** Format: uuid */
      deleterId?: string | null;
      /** Format: date-time */
      deletionTime?: string | null;
      /** Format: uuid */
      productGroupId?: string;
      name?: string | null;
      defaultPeriodUsable?: components["schemas"]["EasyAbp.BookingService.AssetSchedules.PeriodUsable"];
      isDefault?: boolean;
      isDisable?: boolean;
      description?: string | null;
    };
    "Tourmap.ProductService.Projects.ProjectDto+Create": {
      /** Format: uuid */
      productGroupId?: string;
      name?: string | null;
      defaultPeriodUsable?: components["schemas"]["EasyAbp.BookingService.AssetSchedules.PeriodUsable"];
      isDefault?: boolean;
      isDisable?: boolean;
      description?: string | null;
    };
    "Tourmap.ProductService.Projects.ProjectDto+Update": {
      /** Format: uuid */
      productGroupId?: string;
      name?: string | null;
      defaultPeriodUsable?: components["schemas"]["EasyAbp.BookingService.AssetSchedules.PeriodUsable"];
      isDefault?: boolean;
      isDisable?: boolean;
      description?: string | null;
    };
    "Tourmap.ProductService.ShoppingCarts.Dtos.AdditionItem": {
      amount?: components["schemas"]["Tourmap.ProductService.ShoppingCarts.Dtos.AmountData"];
      customerRemark?: string | null;
      extraProductId?: string | null;
      extraProductName?: string | null;
      /** Format: int32 */
      freeAmount?: number;
      primarySpec?: components["schemas"]["Tourmap.ProductService.ShoppingCarts.Dtos.PrimarySpec"];
      primaryTimeSpec?: components["schemas"]["Tourmap.ProductService.ShoppingCarts.Dtos.PrimaryTimeSpec"];
      secondarySpec?: components["schemas"]["Tourmap.ProductService.ShoppingCarts.Dtos.SecondarySpec"];
      secondaryTimeSpec?: components["schemas"]["Tourmap.ProductService.ShoppingCarts.Dtos.SecondaryTimeSpec"];
      /** Format: int32 */
      totalPrice?: number;
    };
    "Tourmap.ProductService.ShoppingCarts.Dtos.AmountData": {
      /** Format: int32 */
      amount?: number;
      title?: string | null;
      unit?: string | null;
    };
    "Tourmap.ProductService.ShoppingCarts.Dtos.PrimarySpec": {
      selectedOption?: string | null;
      unitName?: string | null;
    };
    "Tourmap.ProductService.ShoppingCarts.Dtos.PrimaryTimeSpec": {
      dateTitel?: string | null;
      timeTitle?: string | null;
      date?: string | null;
      time?: string | null;
    };
    "Tourmap.ProductService.ShoppingCarts.Dtos.SecondarySpec": {
      selectedOption?: string | null;
      unitName?: string | null;
    };
    "Tourmap.ProductService.ShoppingCarts.Dtos.SecondaryTimeSpec": {
      dateTitel?: string | null;
      timeTitle?: string | null;
      date?: string | null;
      time?: string | null;
    };
    "Tourmap.ProductService.ShoppingCarts.Dtos.ShoppingCartDisplayDto": {
      customerRemark?: string | null;
      /** Format: uuid */
      ownerId?: string;
      shoppingCartItems?: components["schemas"]["Tourmap.ProductService.ShoppingCarts.Dtos.ShoppingCartDisplayItem"][] | null;
      /** Format: int32 */
      totalPrice?: number;
    };
    "Tourmap.ProductService.ShoppingCarts.Dtos.ShoppingCartDisplayItem": {
      additionItems?: components["schemas"]["Tourmap.ProductService.ShoppingCarts.Dtos.AdditionItem"][] | null;
      /** Format: date-time */
      date?: string;
      /** Format: int32 */
      price?: number;
      /** Format: uuid */
      productId?: string;
      productName?: string | null;
    };
    "Tourmap.ProductService.ShoppingCarts.ShoppingCartItemDto+CreateOrUpdate": {
      /** Format: uuid */
      ownerId?: string;
      createOrUpdateDetiails?: components["schemas"]["Tourmap.ProductService.ShoppingCarts.ShoppingCartItemDto+CreateOrUpdateDetail"][] | null;
    };
    "Tourmap.ProductService.ShoppingCarts.ShoppingCartItemDto+CreateOrUpdateDetail": {
      /** Format: uuid */
      id?: string | null;
      /** Format: uuid */
      productId?: string;
      /** Format: int32 */
      quantity?: number;
      /** Format: date-time */
      date?: string;
    };
    "Volo.Abp.Account.AccountExternalProviderSettingsDto": {
      settings?: components["schemas"]["Volo.Abp.Account.ExternalProviders.ExternalProviderSettings"][] | null;
    };
    "Volo.Abp.Account.AccountRecaptchaSettingsDto": {
      useCaptchaOnLogin?: boolean;
      useCaptchaOnRegistration?: boolean;
      verifyBaseUrl?: string | null;
      siteKey?: string | null;
      siteSecret?: string | null;
      /** Format: int32 */
      version?: number;
      /** Format: double */
      score?: number;
    };
    "Volo.Abp.Account.AccountSettingsDto": {
      isSelfRegistrationEnabled?: boolean;
      enableLocalLogin?: boolean;
    };
    "Volo.Abp.Account.AccountTwoFactorSettingsDto": {
      twoFactorBehaviour?: components["schemas"]["Volo.Abp.Identity.Features.IdentityProTwoFactorBehaviour"];
      isRememberBrowserEnabled?: boolean;
      usersCanChange?: boolean;
    };
    "Volo.Abp.Account.ExternalProviders.ExternalProviderSettings": {
      name?: string | null;
      enabled?: boolean;
      properties?: components["schemas"]["Volo.Abp.Account.ExternalProviders.ExternalProviderSettingsProperty"][] | null;
      secretProperties?: components["schemas"]["Volo.Abp.Account.ExternalProviders.ExternalProviderSettingsProperty"][] | null;
    };
    "Volo.Abp.Account.ExternalProviders.ExternalProviderSettingsProperty": {
      name?: string | null;
      value?: string | null;
    };
    "Volo.Abp.Account.UpdateExternalProviderDto": {
      name?: string | null;
      enabled?: boolean;
      properties?: components["schemas"]["Volo.Abp.Account.ExternalProviders.ExternalProviderSettingsProperty"][] | null;
      secretProperties?: components["schemas"]["Volo.Abp.Account.ExternalProviders.ExternalProviderSettingsProperty"][] | null;
    };
    "Volo.Abp.Application.Dtos.ListResultDto`1[[EasyAbp.BookingService.PeriodSchemes.Dtos.PeriodDto, EasyAbp.BookingService.Common.Application.Contracts, Version=0.4.0.0, Culture=neutral, PublicKeyToken=null]]": {
      items?: components["schemas"]["EasyAbp.BookingService.PeriodSchemes.Dtos.PeriodDto"][] | null;
    };
    "Volo.Abp.Application.Dtos.ListResultDto`1[[EasyAbp.BookingService.PeriodSchemes.Dtos.PeriodSchemeDto, EasyAbp.BookingService.Common.Application.Contracts, Version=0.4.0.0, Culture=neutral, PublicKeyToken=null]]": {
      items?: components["schemas"]["EasyAbp.BookingService.PeriodSchemes.Dtos.PeriodSchemeDto"][] | null;
    };
    "Volo.Abp.Application.Dtos.ListResultDto`1[[Tourmap.Camping.CampingAreas.CampingAreaDto+ForBrowse, Tourmap.Camping.Application.Contracts, Version=0.1.0.0, Culture=neutral, PublicKeyToken=null]]": {
      items?: components["schemas"]["Tourmap.Camping.CampingAreas.CampingAreaDto+ForBrowse"][] | null;
    };
    "Volo.Abp.Application.Dtos.ListResultDto`1[[Tourmap.Camping.CampingAreas.CampingAreaDto, Tourmap.Camping.Application.Contracts, Version=0.1.0.0, Culture=neutral, PublicKeyToken=null]]": {
      items?: components["schemas"]["Tourmap.Camping.CampingAreas.CampingAreaDto"][] | null;
    };
    "Volo.Abp.Application.Dtos.ListResultDto`1[[Tourmap.ProductService.IntervalPeriodSchemes.IntervalPeriodSchemeDto, Tourmap.ProductService.Application.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
      items?: components["schemas"]["Tourmap.ProductService.IntervalPeriodSchemes.IntervalPeriodSchemeDto"][] | null;
    };
    "Volo.Abp.Application.Dtos.ListResultDto`1[[Tourmap.ProductService.Products.ProductDto+ForBrowse, Tourmap.ProductService.Application.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
      items?: components["schemas"]["Tourmap.ProductService.Products.ProductDto+ForBrowse"][] | null;
    };
    "Volo.Abp.Application.Dtos.ListResultDto`1[[Volo.Abp.Identity.IdentityRoleDto, Volo.Abp.Identity.Pro.Application.Contracts, Version=7.2.2.0, Culture=neutral, PublicKeyToken=null]]": {
      items?: components["schemas"]["Volo.Abp.Identity.IdentityRoleDto"][] | null;
    };
    "Volo.Abp.Application.Dtos.ListResultDto`1[[Volo.Abp.Identity.OrganizationUnitWithDetailsDto, Volo.Abp.Identity.Pro.Application.Contracts, Version=7.2.2.0, Culture=neutral, PublicKeyToken=null]]": {
      items?: components["schemas"]["Volo.Abp.Identity.OrganizationUnitWithDetailsDto"][] | null;
    };
    "Volo.Abp.Application.Dtos.ListResultDto`1[[Volo.Abp.LanguageManagement.Dto.LanguageDto, Volo.Abp.LanguageManagement.Application.Contracts, Version=7.2.2.0, Culture=neutral, PublicKeyToken=null]]": {
      items?: components["schemas"]["Volo.Abp.LanguageManagement.Dto.LanguageDto"][] | null;
    };
    "Volo.Abp.Application.Dtos.ListResultDto`1[[Volo.Abp.Users.UserData, Volo.Abp.Users.Abstractions, Version=7.2.2.0, Culture=neutral, PublicKeyToken=null]]": {
      items?: components["schemas"]["Volo.Abp.Users.UserData"][] | null;
    };
    "Volo.Abp.Application.Dtos.ListResultDto`1[[Volo.CmsKit.Menus.MenuItemDto, Volo.CmsKit.Common.Application.Contracts, Version=7.2.2.0, Culture=neutral, PublicKeyToken=null]]": {
      items?: components["schemas"]["Volo.CmsKit.Menus.MenuItemDto"][] | null;
    };
    "Volo.Abp.Application.Dtos.ListResultDto`1[[Volo.CmsKit.Public.Comments.CommentWithDetailsDto, Volo.CmsKit.Public.Application.Contracts, Version=7.2.2.0, Culture=neutral, PublicKeyToken=null]]": {
      items?: components["schemas"]["Volo.CmsKit.Public.Comments.CommentWithDetailsDto"][] | null;
    };
    "Volo.Abp.Application.Dtos.ListResultDto`1[[Volo.CmsKit.Public.Reactions.ReactionWithSelectionDto, Volo.CmsKit.Public.Application.Contracts, Version=7.2.2.0, Culture=neutral, PublicKeyToken=null]]": {
      items?: components["schemas"]["Volo.CmsKit.Public.Reactions.ReactionWithSelectionDto"][] | null;
    };
    "Volo.Abp.Application.Dtos.PagedResultDto`1[[EasyAbp.BookingService.AssetCategories.Dtos.AssetCategoryDto, EasyAbp.BookingService.Common.Application.Contracts, Version=0.4.0.0, Culture=neutral, PublicKeyToken=null]]": {
      items?: components["schemas"]["EasyAbp.BookingService.AssetCategories.Dtos.AssetCategoryDto"][] | null;
      /** Format: int64 */
      totalCount?: number;
    };
    "Volo.Abp.Application.Dtos.PagedResultDto`1[[EasyAbp.BookingService.AssetOccupancies.Dtos.AssetOccupancyDto, EasyAbp.BookingService.Common.Application.Contracts, Version=0.4.0.0, Culture=neutral, PublicKeyToken=null]]": {
      items?: components["schemas"]["EasyAbp.BookingService.AssetOccupancies.Dtos.AssetOccupancyDto"][] | null;
      /** Format: int64 */
      totalCount?: number;
    };
    "Volo.Abp.Application.Dtos.PagedResultDto`1[[EasyAbp.BookingService.AssetPeriodSchemes.Dtos.AssetPeriodSchemeDto, EasyAbp.BookingService.Common.Application.Contracts, Version=0.4.0.0, Culture=neutral, PublicKeyToken=null]]": {
      items?: components["schemas"]["EasyAbp.BookingService.AssetPeriodSchemes.Dtos.AssetPeriodSchemeDto"][] | null;
      /** Format: int64 */
      totalCount?: number;
    };
    "Volo.Abp.Application.Dtos.PagedResultDto`1[[EasyAbp.BookingService.AssetSchedules.Dtos.AssetScheduleDto, EasyAbp.BookingService.Common.Application.Contracts, Version=0.4.0.0, Culture=neutral, PublicKeyToken=null]]": {
      items?: components["schemas"]["EasyAbp.BookingService.AssetSchedules.Dtos.AssetScheduleDto"][] | null;
      /** Format: int64 */
      totalCount?: number;
    };
    "Volo.Abp.Application.Dtos.PagedResultDto`1[[EasyAbp.BookingService.Assets.Dtos.AssetDto, EasyAbp.BookingService.Common.Application.Contracts, Version=0.4.0.0, Culture=neutral, PublicKeyToken=null]]": {
      items?: components["schemas"]["EasyAbp.BookingService.Assets.Dtos.AssetDto"][] | null;
      /** Format: int64 */
      totalCount?: number;
    };
    "Volo.Abp.Application.Dtos.PagedResultDto`1[[EasyAbp.BookingService.PeriodSchemes.Dtos.PeriodSchemeDto, EasyAbp.BookingService.Common.Application.Contracts, Version=0.4.0.0, Culture=neutral, PublicKeyToken=null]]": {
      items?: components["schemas"]["EasyAbp.BookingService.PeriodSchemes.Dtos.PeriodSchemeDto"][] | null;
      /** Format: int64 */
      totalCount?: number;
    };
    "Volo.Abp.Application.Dtos.PagedResultDto`1[[Tourmap.ProductService.Projects.ProjectDto, Tourmap.ProductService.Application.Contracts, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
      items?: components["schemas"]["Tourmap.ProductService.Projects.ProjectDto"][] | null;
      /** Format: int64 */
      totalCount?: number;
    };
    "Volo.Abp.Application.Dtos.PagedResultDto`1[[Volo.Abp.AuditLogging.AuditLogDto, Volo.Abp.AuditLogging.Application.Contracts, Version=7.2.2.0, Culture=neutral, PublicKeyToken=null]]": {
      items?: components["schemas"]["Volo.Abp.AuditLogging.AuditLogDto"][] | null;
      /** Format: int64 */
      totalCount?: number;
    };
    "Volo.Abp.Application.Dtos.PagedResultDto`1[[Volo.Abp.AuditLogging.EntityChangeDto, Volo.Abp.AuditLogging.Application.Contracts, Version=7.2.2.0, Culture=neutral, PublicKeyToken=null]]": {
      items?: components["schemas"]["Volo.Abp.AuditLogging.EntityChangeDto"][] | null;
      /** Format: int64 */
      totalCount?: number;
    };
    "Volo.Abp.Application.Dtos.PagedResultDto`1[[Volo.Abp.Identity.ClaimTypeDto, Volo.Abp.Identity.Pro.Application.Contracts, Version=7.2.2.0, Culture=neutral, PublicKeyToken=null]]": {
      items?: components["schemas"]["Volo.Abp.Identity.ClaimTypeDto"][] | null;
      /** Format: int64 */
      totalCount?: number;
    };
    "Volo.Abp.Application.Dtos.PagedResultDto`1[[Volo.Abp.Identity.IdentityRoleDto, Volo.Abp.Identity.Pro.Application.Contracts, Version=7.2.2.0, Culture=neutral, PublicKeyToken=null]]": {
      items?: components["schemas"]["Volo.Abp.Identity.IdentityRoleDto"][] | null;
      /** Format: int64 */
      totalCount?: number;
    };
    "Volo.Abp.Application.Dtos.PagedResultDto`1[[Volo.Abp.Identity.IdentitySecurityLogDto, Volo.Abp.Identity.Pro.Application.Contracts, Version=7.2.2.0, Culture=neutral, PublicKeyToken=null]]": {
      items?: components["schemas"]["Volo.Abp.Identity.IdentitySecurityLogDto"][] | null;
      /** Format: int64 */
      totalCount?: number;
    };
    "Volo.Abp.Application.Dtos.PagedResultDto`1[[Volo.Abp.Identity.IdentityUserDto, Volo.Abp.Identity.Pro.Application.Contracts, Version=7.2.2.0, Culture=neutral, PublicKeyToken=null]]": {
      items?: components["schemas"]["Volo.Abp.Identity.IdentityUserDto"][] | null;
      /** Format: int64 */
      totalCount?: number;
    };
    "Volo.Abp.Application.Dtos.PagedResultDto`1[[Volo.Abp.Identity.OrganizationUnitWithDetailsDto, Volo.Abp.Identity.Pro.Application.Contracts, Version=7.2.2.0, Culture=neutral, PublicKeyToken=null]]": {
      items?: components["schemas"]["Volo.Abp.Identity.OrganizationUnitWithDetailsDto"][] | null;
      /** Format: int64 */
      totalCount?: number;
    };
    "Volo.Abp.Application.Dtos.PagedResultDto`1[[Volo.Abp.LanguageManagement.Dto.LanguageDto, Volo.Abp.LanguageManagement.Application.Contracts, Version=7.2.2.0, Culture=neutral, PublicKeyToken=null]]": {
      items?: components["schemas"]["Volo.Abp.LanguageManagement.Dto.LanguageDto"][] | null;
      /** Format: int64 */
      totalCount?: number;
    };
    "Volo.Abp.Application.Dtos.PagedResultDto`1[[Volo.Abp.LanguageManagement.Dto.LanguageTextDto, Volo.Abp.LanguageManagement.Application.Contracts, Version=7.2.2.0, Culture=neutral, PublicKeyToken=null]]": {
      items?: components["schemas"]["Volo.Abp.LanguageManagement.Dto.LanguageTextDto"][] | null;
      /** Format: int64 */
      totalCount?: number;
    };
    "Volo.Abp.Application.Dtos.PagedResultDto`1[[Volo.Abp.OpenIddict.Applications.Dtos.ApplicationDto, Volo.Abp.OpenIddict.Pro.Application.Contracts, Version=7.2.2.0, Culture=neutral, PublicKeyToken=null]]": {
      items?: components["schemas"]["Volo.Abp.OpenIddict.Applications.Dtos.ApplicationDto"][] | null;
      /** Format: int64 */
      totalCount?: number;
    };
    "Volo.Abp.Application.Dtos.PagedResultDto`1[[Volo.Abp.OpenIddict.Scopes.Dtos.ScopeDto, Volo.Abp.OpenIddict.Pro.Application.Contracts, Version=7.2.2.0, Culture=neutral, PublicKeyToken=null]]": {
      items?: components["schemas"]["Volo.Abp.OpenIddict.Scopes.Dtos.ScopeDto"][] | null;
      /** Format: int64 */
      totalCount?: number;
    };
    "Volo.Abp.Application.Dtos.PagedResultDto`1[[Volo.Abp.TextTemplateManagement.TextTemplates.TemplateDefinitionDto, Volo.Abp.TextTemplateManagement.Application.Contracts, Version=7.2.2.0, Culture=neutral, PublicKeyToken=null]]": {
      items?: components["schemas"]["Volo.Abp.TextTemplateManagement.TextTemplates.TemplateDefinitionDto"][] | null;
      /** Format: int64 */
      totalCount?: number;
    };
    "Volo.Abp.Application.Dtos.PagedResultDto`1[[Volo.CmsKit.Admin.Blogs.BlogDto, Volo.CmsKit.Admin.Application.Contracts, Version=7.2.2.0, Culture=neutral, PublicKeyToken=null]]": {
      items?: components["schemas"]["Volo.CmsKit.Admin.Blogs.BlogDto"][] | null;
      /** Format: int64 */
      totalCount?: number;
    };
    "Volo.Abp.Application.Dtos.PagedResultDto`1[[Volo.CmsKit.Admin.Blogs.BlogPostListDto, Volo.CmsKit.Admin.Application.Contracts, Version=7.2.2.0, Culture=neutral, PublicKeyToken=null]]": {
      items?: components["schemas"]["Volo.CmsKit.Admin.Blogs.BlogPostListDto"][] | null;
      /** Format: int64 */
      totalCount?: number;
    };
    "Volo.Abp.Application.Dtos.PagedResultDto`1[[Volo.CmsKit.Admin.Comments.CommentWithAuthorDto, Volo.CmsKit.Admin.Application.Contracts, Version=7.2.2.0, Culture=neutral, PublicKeyToken=null]]": {
      items?: components["schemas"]["Volo.CmsKit.Admin.Comments.CommentWithAuthorDto"][] | null;
      /** Format: int64 */
      totalCount?: number;
    };
    "Volo.Abp.Application.Dtos.PagedResultDto`1[[Volo.CmsKit.Admin.Menus.PageLookupDto, Volo.CmsKit.Admin.Application.Contracts, Version=7.2.2.0, Culture=neutral, PublicKeyToken=null]]": {
      items?: components["schemas"]["Volo.CmsKit.Admin.Menus.PageLookupDto"][] | null;
      /** Format: int64 */
      totalCount?: number;
    };
    "Volo.Abp.Application.Dtos.PagedResultDto`1[[Volo.CmsKit.Admin.Pages.PageDto, Volo.CmsKit.Admin.Application.Contracts, Version=7.2.2.0, Culture=neutral, PublicKeyToken=null]]": {
      items?: components["schemas"]["Volo.CmsKit.Admin.Pages.PageDto"][] | null;
      /** Format: int64 */
      totalCount?: number;
    };
    "Volo.Abp.Application.Dtos.PagedResultDto`1[[Volo.CmsKit.Contents.BlogPostCommonDto, Volo.CmsKit.Common.Application.Contracts, Version=7.2.2.0, Culture=neutral, PublicKeyToken=null]]": {
      items?: components["schemas"]["Volo.CmsKit.Contents.BlogPostCommonDto"][] | null;
      /** Format: int64 */
      totalCount?: number;
    };
    "Volo.Abp.Application.Dtos.PagedResultDto`1[[Volo.CmsKit.Tags.TagDto, Volo.CmsKit.Common.Application.Contracts, Version=7.2.2.0, Culture=neutral, PublicKeyToken=null]]": {
      items?: components["schemas"]["Volo.CmsKit.Tags.TagDto"][] | null;
      /** Format: int64 */
      totalCount?: number;
    };
    "Volo.Abp.Application.Dtos.PagedResultDto`1[[Volo.CmsKit.Users.CmsUserDto, Volo.CmsKit.Common.Application.Contracts, Version=7.2.2.0, Culture=neutral, PublicKeyToken=null]]": {
      items?: components["schemas"]["Volo.CmsKit.Users.CmsUserDto"][] | null;
      /** Format: int64 */
      totalCount?: number;
    };
    "Volo.Abp.Application.Dtos.PagedResultDto`1[[Volo.Saas.Host.Dtos.EditionDto, Volo.Saas.Host.Application.Contracts, Version=7.2.2.0, Culture=neutral, PublicKeyToken=null]]": {
      items?: components["schemas"]["Volo.Saas.Host.Dtos.EditionDto"][] | null;
      /** Format: int64 */
      totalCount?: number;
    };
    "Volo.Abp.Application.Dtos.PagedResultDto`1[[Volo.Saas.Host.Dtos.SaasTenantDto, Volo.Saas.Host.Application.Contracts, Version=7.2.2.0, Culture=neutral, PublicKeyToken=null]]": {
      items?: components["schemas"]["Volo.Saas.Host.Dtos.SaasTenantDto"][] | null;
      /** Format: int64 */
      totalCount?: number;
    };
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationAuthConfigurationDto": {
      grantedPolicies?: ({
        [key: string]: (boolean | null) | undefined;
      }) | null;
    };
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationConfigurationDto": {
      localization?: components["schemas"]["Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationLocalizationConfigurationDto"];
      auth?: components["schemas"]["Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationAuthConfigurationDto"];
      setting?: components["schemas"]["Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationSettingConfigurationDto"];
      currentUser?: components["schemas"]["Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.CurrentUserDto"];
      features?: components["schemas"]["Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationFeatureConfigurationDto"];
      globalFeatures?: components["schemas"]["Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationGlobalFeatureConfigurationDto"];
      multiTenancy?: components["schemas"]["Volo.Abp.AspNetCore.Mvc.MultiTenancy.MultiTenancyInfoDto"];
      currentTenant?: components["schemas"]["Volo.Abp.AspNetCore.Mvc.MultiTenancy.CurrentTenantDto"];
      timing?: components["schemas"]["Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.TimingDto"];
      clock?: components["schemas"]["Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ClockDto"];
      objectExtensions?: components["schemas"]["Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ObjectExtensionsDto"];
      extraProperties?: {
        [key: string]: unknown;
      } | null;
    };
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationFeatureConfigurationDto": {
      values?: ({
        [key: string]: (string | null) | undefined;
      }) | null;
    };
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationGlobalFeatureConfigurationDto": {
      enabledFeatures?: string[] | null;
    };
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationLocalizationConfigurationDto": {
      values?: ({
        [key: string]: (({
          [key: string]: string | undefined;
        }) | null) | undefined;
      }) | null;
      resources?: ({
        [key: string]: components["schemas"]["Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationLocalizationResourceDto"] | undefined;
      }) | null;
      languages?: components["schemas"]["Volo.Abp.Localization.LanguageInfo"][] | null;
      currentCulture?: components["schemas"]["Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.CurrentCultureDto"];
      defaultResourceName?: string | null;
      languagesMap?: ({
        [key: string]: (components["schemas"]["Volo.Abp.NameValue"][] | null) | undefined;
      }) | null;
      languageFilesMap?: ({
        [key: string]: (components["schemas"]["Volo.Abp.NameValue"][] | null) | undefined;
      }) | null;
    };
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationLocalizationDto": {
      resources?: ({
        [key: string]: components["schemas"]["Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationLocalizationResourceDto"] | undefined;
      }) | null;
    };
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationLocalizationResourceDto": {
      texts?: ({
        [key: string]: (string | null) | undefined;
      }) | null;
      baseResources?: string[] | null;
    };
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationSettingConfigurationDto": {
      values?: ({
        [key: string]: (string | null) | undefined;
      }) | null;
    };
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ClockDto": {
      kind?: string | null;
    };
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.CurrentCultureDto": {
      displayName?: string | null;
      englishName?: string | null;
      threeLetterIsoLanguageName?: string | null;
      twoLetterIsoLanguageName?: string | null;
      isRightToLeft?: boolean;
      cultureName?: string | null;
      name?: string | null;
      nativeName?: string | null;
      dateTimeFormat?: components["schemas"]["Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.DateTimeFormatDto"];
    };
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.CurrentUserDto": {
      isAuthenticated?: boolean;
      /** Format: uuid */
      id?: string | null;
      /** Format: uuid */
      tenantId?: string | null;
      /** Format: uuid */
      impersonatorUserId?: string | null;
      /** Format: uuid */
      impersonatorTenantId?: string | null;
      impersonatorUserName?: string | null;
      impersonatorTenantName?: string | null;
      userName?: string | null;
      name?: string | null;
      surName?: string | null;
      email?: string | null;
      emailVerified?: boolean;
      phoneNumber?: string | null;
      phoneNumberVerified?: boolean;
      roles?: string[] | null;
    };
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.DateTimeFormatDto": {
      calendarAlgorithmType?: string | null;
      dateTimeFormatLong?: string | null;
      shortDatePattern?: string | null;
      fullDateTimePattern?: string | null;
      dateSeparator?: string | null;
      shortTimePattern?: string | null;
      longTimePattern?: string | null;
    };
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.IanaTimeZone": {
      timeZoneName?: string | null;
    };
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.EntityExtensionDto": {
      properties?: ({
        [key: string]: components["schemas"]["Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyDto"] | undefined;
      }) | null;
      configuration?: ({
        [key: string]: (Record<string, unknown> | null) | undefined;
      }) | null;
    };
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionEnumDto": {
      fields?: components["schemas"]["Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionEnumFieldDto"][] | null;
      localizationResource?: string | null;
    };
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionEnumFieldDto": {
      name?: string | null;
      value?: Record<string, unknown> | null;
    };
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyApiCreateDto": {
      isAvailable?: boolean;
    };
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyApiDto": {
      onGet?: components["schemas"]["Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyApiGetDto"];
      onCreate?: components["schemas"]["Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyApiCreateDto"];
      onUpdate?: components["schemas"]["Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyApiUpdateDto"];
    };
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyApiGetDto": {
      isAvailable?: boolean;
    };
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyApiUpdateDto": {
      isAvailable?: boolean;
    };
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyAttributeDto": {
      typeSimple?: string | null;
      config?: ({
        [key: string]: (Record<string, unknown> | null) | undefined;
      }) | null;
    };
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyDto": {
      type?: string | null;
      typeSimple?: string | null;
      displayName?: components["schemas"]["Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.LocalizableStringDto"];
      api?: components["schemas"]["Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyApiDto"];
      ui?: components["schemas"]["Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyUiDto"];
      attributes?: components["schemas"]["Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyAttributeDto"][] | null;
      configuration?: ({
        [key: string]: (Record<string, unknown> | null) | undefined;
      }) | null;
      defaultValue?: Record<string, unknown> | null;
    };
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyUiDto": {
      onTable?: components["schemas"]["Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyUiTableDto"];
      onCreateForm?: components["schemas"]["Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyUiFormDto"];
      onEditForm?: components["schemas"]["Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyUiFormDto"];
      lookup?: components["schemas"]["Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyUiLookupDto"];
    };
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyUiFormDto": {
      isVisible?: boolean;
    };
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyUiLookupDto": {
      url?: string | null;
      resultListPropertyName?: string | null;
      displayPropertyName?: string | null;
      valuePropertyName?: string | null;
      filterParamName?: string | null;
    };
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyUiTableDto": {
      isVisible?: boolean;
    };
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.LocalizableStringDto": {
      name?: string | null;
      resource?: string | null;
    };
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ModuleExtensionDto": {
      entities?: ({
        [key: string]: components["schemas"]["Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.EntityExtensionDto"] | undefined;
      }) | null;
      configuration?: ({
        [key: string]: (Record<string, unknown> | null) | undefined;
      }) | null;
    };
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ObjectExtensionsDto": {
      modules?: ({
        [key: string]: components["schemas"]["Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ModuleExtensionDto"] | undefined;
      }) | null;
      enums?: ({
        [key: string]: components["schemas"]["Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionEnumDto"] | undefined;
      }) | null;
    };
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.TimeZone": {
      iana?: components["schemas"]["Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.IanaTimeZone"];
      windows?: components["schemas"]["Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.WindowsTimeZone"];
    };
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.TimingDto": {
      timeZone?: components["schemas"]["Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.TimeZone"];
    };
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.WindowsTimeZone": {
      timeZoneId?: string | null;
    };
    "Volo.Abp.AspNetCore.Mvc.MultiTenancy.CurrentTenantDto": {
      /** Format: uuid */
      id?: string | null;
      name?: string | null;
      isAvailable?: boolean;
    };
    "Volo.Abp.AspNetCore.Mvc.MultiTenancy.FindTenantResultDto": {
      success?: boolean;
      /** Format: uuid */
      tenantId?: string | null;
      name?: string | null;
      isActive?: boolean;
    };
    "Volo.Abp.AspNetCore.Mvc.MultiTenancy.MultiTenancyInfoDto": {
      isEnabled?: boolean;
    };
    "Volo.Abp.AuditLogging.AuditLogActionDto": {
      extraProperties?: {
        [key: string]: unknown;
      } | null;
      /** Format: uuid */
      id?: string;
      /** Format: uuid */
      tenantId?: string | null;
      /** Format: uuid */
      auditLogId?: string;
      serviceName?: string | null;
      methodName?: string | null;
      parameters?: string | null;
      /** Format: date-time */
      executionTime?: string;
      /** Format: int32 */
      executionDuration?: number;
    };
    "Volo.Abp.AuditLogging.AuditLogDto": {
      extraProperties?: {
        [key: string]: unknown;
      } | null;
      /** Format: uuid */
      id?: string;
      /** Format: uuid */
      userId?: string | null;
      userName?: string | null;
      /** Format: uuid */
      tenantId?: string | null;
      tenantName?: string | null;
      /** Format: uuid */
      impersonatorUserId?: string | null;
      impersonatorUserName?: string | null;
      /** Format: uuid */
      impersonatorTenantId?: string | null;
      impersonatorTenantName?: string | null;
      /** Format: date-time */
      executionTime?: string;
      /** Format: int32 */
      executionDuration?: number;
      clientIpAddress?: string | null;
      clientName?: string | null;
      browserInfo?: string | null;
      httpMethod?: string | null;
      url?: string | null;
      exceptions?: string | null;
      comments?: string | null;
      /** Format: int32 */
      httpStatusCode?: number | null;
      applicationName?: string | null;
      correlationId?: string | null;
      entityChanges?: components["schemas"]["Volo.Abp.AuditLogging.EntityChangeDto"][] | null;
      actions?: components["schemas"]["Volo.Abp.AuditLogging.AuditLogActionDto"][] | null;
    };
    "Volo.Abp.AuditLogging.EntityChangeDto": {
      extraProperties?: {
        [key: string]: unknown;
      } | null;
      /** Format: uuid */
      id?: string;
      /** Format: uuid */
      auditLogId?: string;
      /** Format: uuid */
      tenantId?: string | null;
      /** Format: date-time */
      changeTime?: string;
      changeType?: components["schemas"]["Volo.Abp.Auditing.EntityChangeType"];
      entityId?: string | null;
      entityTypeFullName?: string | null;
      propertyChanges?: components["schemas"]["Volo.Abp.AuditLogging.EntityPropertyChangeDto"][] | null;
    };
    "Volo.Abp.AuditLogging.EntityChangeWithUsernameDto": {
      entityChange?: components["schemas"]["Volo.Abp.AuditLogging.EntityChangeDto"];
      userName?: string | null;
    };
    "Volo.Abp.AuditLogging.EntityPropertyChangeDto": {
      /** Format: uuid */
      id?: string;
      /** Format: uuid */
      tenantId?: string | null;
      /** Format: uuid */
      entityChangeId?: string;
      newValue?: string | null;
      originalValue?: string | null;
      propertyName?: string | null;
      propertyTypeFullName?: string | null;
    };
    "Volo.Abp.AuditLogging.GetAverageExecutionDurationPerDayOutput": {
      data?: ({
        [key: string]: (number | null) | undefined;
      }) | null;
    };
    "Volo.Abp.AuditLogging.GetErrorRateOutput": {
      data?: ({
        [key: string]: (number | null) | undefined;
      }) | null;
    };
    /**
     * Format: int32
     * @enum {integer}
     */
    "Volo.Abp.Auditing.EntityChangeType": 0 | 1 | 2;
    "Volo.Abp.FeatureManagement.FeatureDto": {
      name?: string | null;
      displayName?: string | null;
      value?: string | null;
      provider?: components["schemas"]["Volo.Abp.FeatureManagement.FeatureProviderDto"];
      description?: string | null;
      valueType?: components["schemas"]["Volo.Abp.Validation.StringValues.IStringValueType"];
      /** Format: int32 */
      depth?: number;
      parentName?: string | null;
    };
    "Volo.Abp.FeatureManagement.FeatureGroupDto": {
      name?: string | null;
      displayName?: string | null;
      features?: components["schemas"]["Volo.Abp.FeatureManagement.FeatureDto"][] | null;
    };
    "Volo.Abp.FeatureManagement.FeatureProviderDto": {
      name?: string | null;
      key?: string | null;
    };
    "Volo.Abp.FeatureManagement.GetFeatureListResultDto": {
      groups?: components["schemas"]["Volo.Abp.FeatureManagement.FeatureGroupDto"][] | null;
    };
    "Volo.Abp.FeatureManagement.UpdateFeatureDto": {
      name?: string | null;
      value?: string | null;
    };
    "Volo.Abp.FeatureManagement.UpdateFeaturesDto": {
      features?: components["schemas"]["Volo.Abp.FeatureManagement.UpdateFeatureDto"][] | null;
    };
    "Volo.Abp.Http.Modeling.ActionApiDescriptionModel": {
      uniqueName?: string | null;
      name?: string | null;
      httpMethod?: string | null;
      url?: string | null;
      supportedVersions?: string[] | null;
      parametersOnMethod?: components["schemas"]["Volo.Abp.Http.Modeling.MethodParameterApiDescriptionModel"][] | null;
      parameters?: components["schemas"]["Volo.Abp.Http.Modeling.ParameterApiDescriptionModel"][] | null;
      returnValue?: components["schemas"]["Volo.Abp.Http.Modeling.ReturnValueApiDescriptionModel"];
      allowAnonymous?: boolean | null;
      implementFrom?: string | null;
    };
    "Volo.Abp.Http.Modeling.ApplicationApiDescriptionModel": {
      modules?: ({
        [key: string]: components["schemas"]["Volo.Abp.Http.Modeling.ModuleApiDescriptionModel"] | undefined;
      }) | null;
      types?: ({
        [key: string]: components["schemas"]["Volo.Abp.Http.Modeling.TypeApiDescriptionModel"] | undefined;
      }) | null;
    };
    "Volo.Abp.Http.Modeling.ControllerApiDescriptionModel": {
      controllerName?: string | null;
      controllerGroupName?: string | null;
      isRemoteService?: boolean;
      isIntegrationService?: boolean;
      apiVersion?: string | null;
      type?: string | null;
      interfaces?: components["schemas"]["Volo.Abp.Http.Modeling.ControllerInterfaceApiDescriptionModel"][] | null;
      actions?: ({
        [key: string]: components["schemas"]["Volo.Abp.Http.Modeling.ActionApiDescriptionModel"] | undefined;
      }) | null;
    };
    "Volo.Abp.Http.Modeling.ControllerInterfaceApiDescriptionModel": {
      type?: string | null;
      name?: string | null;
      methods?: components["schemas"]["Volo.Abp.Http.Modeling.InterfaceMethodApiDescriptionModel"][] | null;
    };
    "Volo.Abp.Http.Modeling.InterfaceMethodApiDescriptionModel": {
      name?: string | null;
      parametersOnMethod?: components["schemas"]["Volo.Abp.Http.Modeling.MethodParameterApiDescriptionModel"][] | null;
      returnValue?: components["schemas"]["Volo.Abp.Http.Modeling.ReturnValueApiDescriptionModel"];
    };
    "Volo.Abp.Http.Modeling.MethodParameterApiDescriptionModel": {
      name?: string | null;
      typeAsString?: string | null;
      type?: string | null;
      typeSimple?: string | null;
      isOptional?: boolean;
      defaultValue?: Record<string, unknown> | null;
    };
    "Volo.Abp.Http.Modeling.ModuleApiDescriptionModel": {
      rootPath?: string | null;
      remoteServiceName?: string | null;
      controllers?: ({
        [key: string]: components["schemas"]["Volo.Abp.Http.Modeling.ControllerApiDescriptionModel"] | undefined;
      }) | null;
    };
    "Volo.Abp.Http.Modeling.ParameterApiDescriptionModel": {
      nameOnMethod?: string | null;
      name?: string | null;
      jsonName?: string | null;
      type?: string | null;
      typeSimple?: string | null;
      isOptional?: boolean;
      defaultValue?: Record<string, unknown> | null;
      constraintTypes?: string[] | null;
      bindingSourceId?: string | null;
      descriptorName?: string | null;
    };
    "Volo.Abp.Http.Modeling.PropertyApiDescriptionModel": {
      name?: string | null;
      jsonName?: string | null;
      type?: string | null;
      typeSimple?: string | null;
      isRequired?: boolean;
      /** Format: int32 */
      minLength?: number | null;
      /** Format: int32 */
      maxLength?: number | null;
      minimum?: string | null;
      maximum?: string | null;
      regex?: string | null;
    };
    "Volo.Abp.Http.Modeling.ReturnValueApiDescriptionModel": {
      type?: string | null;
      typeSimple?: string | null;
    };
    "Volo.Abp.Http.Modeling.TypeApiDescriptionModel": {
      baseType?: string | null;
      isEnum?: boolean;
      enumNames?: string[] | null;
      enumValues?: unknown[] | null;
      genericArguments?: string[] | null;
      properties?: components["schemas"]["Volo.Abp.Http.Modeling.PropertyApiDescriptionModel"][] | null;
    };
    "Volo.Abp.Http.RemoteServiceErrorInfo": {
      code?: string | null;
      message?: string | null;
      details?: string | null;
      data?: {
        [key: string]: unknown;
      } | null;
      validationErrors?: components["schemas"]["Volo.Abp.Http.RemoteServiceValidationErrorInfo"][] | null;
    };
    "Volo.Abp.Http.RemoteServiceErrorResponse": {
      error?: components["schemas"]["Volo.Abp.Http.RemoteServiceErrorInfo"];
    };
    "Volo.Abp.Http.RemoteServiceValidationErrorInfo": {
      message?: string | null;
      members?: string[] | null;
    };
    "Volo.Abp.Identity.ClaimTypeDto": {
      extraProperties?: {
        [key: string]: unknown;
      } | null;
      /** Format: uuid */
      id?: string;
      name?: string | null;
      required?: boolean;
      isStatic?: boolean;
      regex?: string | null;
      regexDescription?: string | null;
      description?: string | null;
      valueType?: components["schemas"]["Volo.Abp.Identity.IdentityClaimValueType"];
      valueTypeAsString?: string | null;
      concurrencyStamp?: string | null;
    };
    "Volo.Abp.Identity.CreateClaimTypeDto": {
      extraProperties?: {
        [key: string]: unknown;
      } | null;
      name: string;
      required?: boolean;
      regex?: string | null;
      regexDescription?: string | null;
      description?: string | null;
      valueType?: components["schemas"]["Volo.Abp.Identity.IdentityClaimValueType"];
    };
    "Volo.Abp.Identity.ExternalLoginProviderDto": {
      name?: string | null;
      canObtainUserInfoWithoutPassword?: boolean;
    };
    /**
     * Format: int32
     * @enum {integer}
     */
    "Volo.Abp.Identity.Features.IdentityProTwoFactorBehaviour": 0 | 1 | 2;
    /**
     * Format: int32
     * @enum {integer}
     */
    "Volo.Abp.Identity.IdentityClaimValueType": 0 | 1 | 2 | 3;
    "Volo.Abp.Identity.IdentityLdapSettingsDto": {
      enableLdapLogin?: boolean;
      ldapServerHost?: string | null;
      ldapServerPort?: string | null;
      ldapBaseDc?: string | null;
      ldapDomain?: string | null;
      ldapUserName?: string | null;
      ldapPassword?: string | null;
    };
    "Volo.Abp.Identity.IdentityLockoutSettingsDto": {
      allowedForNewUsers?: boolean;
      /** Format: int32 */
      lockoutDuration?: number;
      /** Format: int32 */
      maxFailedAccessAttempts?: number;
    };
    "Volo.Abp.Identity.IdentityOAuthSettingsDto": {
      enableOAuthLogin?: boolean;
      clientId: string;
      clientSecret?: string | null;
      authority: string;
      scope?: string | null;
      requireHttpsMetadata?: boolean;
      validateEndpoints?: boolean;
      validateIssuerName?: boolean;
    };
    "Volo.Abp.Identity.IdentityPasswordSettingsDto": {
      /** Format: int32 */
      requiredLength?: number;
      /** Format: int32 */
      requiredUniqueChars?: number;
      requireNonAlphanumeric?: boolean;
      requireLowercase?: boolean;
      requireUppercase?: boolean;
      requireDigit?: boolean;
      forceUsersToPeriodicallyChangePassword?: boolean;
      /** Format: int32 */
      passwordChangePeriodDays?: number;
    };
    "Volo.Abp.Identity.IdentityRoleClaimDto": {
      /** Format: uuid */
      roleId?: string;
      claimType?: string | null;
      claimValue?: string | null;
    };
    "Volo.Abp.Identity.IdentityRoleCreateDto": {
      extraProperties?: {
        [key: string]: unknown;
      } | null;
      name: string;
      isDefault?: boolean;
      isPublic?: boolean;
    };
    "Volo.Abp.Identity.IdentityRoleDto": {
      extraProperties?: {
        [key: string]: unknown;
      } | null;
      /** Format: uuid */
      id?: string;
      name?: string | null;
      isDefault?: boolean;
      isStatic?: boolean;
      isPublic?: boolean;
      concurrencyStamp?: string | null;
    };
    "Volo.Abp.Identity.IdentityRoleLookupDto": {
      /** Format: uuid */
      id?: string;
      name?: string | null;
    };
    "Volo.Abp.Identity.IdentityRoleUpdateDto": {
      extraProperties?: {
        [key: string]: unknown;
      } | null;
      name: string;
      isDefault?: boolean;
      isPublic?: boolean;
      concurrencyStamp?: string | null;
    };
    "Volo.Abp.Identity.IdentitySecurityLogDto": {
      /** Format: uuid */
      id?: string;
      /** Format: uuid */
      tenantId?: string | null;
      applicationName?: string | null;
      identity?: string | null;
      action?: string | null;
      /** Format: uuid */
      userId?: string | null;
      userName?: string | null;
      tenantName?: string | null;
      clientId?: string | null;
      correlationId?: string | null;
      clientIpAddress?: string | null;
      browserInfo?: string | null;
      /** Format: date-time */
      creationTime?: string;
      extraProperties?: ({
        [key: string]: (Record<string, unknown> | null) | undefined;
      }) | null;
    };
    "Volo.Abp.Identity.IdentitySettingsDto": {
      password?: components["schemas"]["Volo.Abp.Identity.IdentityPasswordSettingsDto"];
      lockout?: components["schemas"]["Volo.Abp.Identity.IdentityLockoutSettingsDto"];
      signIn?: components["schemas"]["Volo.Abp.Identity.IdentitySignInSettingsDto"];
      user?: components["schemas"]["Volo.Abp.Identity.IdentityUserSettingsDto"];
    };
    "Volo.Abp.Identity.IdentitySignInSettingsDto": {
      requireConfirmedEmail?: boolean;
      enablePhoneNumberConfirmation?: boolean;
      requireConfirmedPhoneNumber?: boolean;
    };
    "Volo.Abp.Identity.IdentityUserClaimDto": {
      /** Format: uuid */
      userId?: string;
      claimType?: string | null;
      claimValue?: string | null;
    };
    "Volo.Abp.Identity.IdentityUserCreateDto": {
      extraProperties?: {
        [key: string]: unknown;
      } | null;
      userName: string;
      name?: string | null;
      surname?: string | null;
      /** Format: email */
      email: string;
      phoneNumber?: string | null;
      isActive?: boolean;
      shouldChangePasswordOnNextLogin?: boolean;
      lockoutEnabled?: boolean;
      roleNames?: string[] | null;
      organizationUnitIds?: string[] | null;
      password: string;
      sendConfirmationEmail?: boolean;
    };
    "Volo.Abp.Identity.IdentityUserDto": {
      extraProperties?: {
        [key: string]: unknown;
      } | null;
      /** Format: uuid */
      id?: string;
      /** Format: date-time */
      creationTime?: string;
      /** Format: uuid */
      creatorId?: string | null;
      /** Format: date-time */
      lastModificationTime?: string | null;
      /** Format: uuid */
      lastModifierId?: string | null;
      /** Format: uuid */
      tenantId?: string | null;
      userName?: string | null;
      email?: string | null;
      name?: string | null;
      surname?: string | null;
      emailConfirmed?: boolean;
      phoneNumber?: string | null;
      phoneNumberConfirmed?: boolean;
      supportTwoFactor?: boolean;
      twoFactorEnabled?: boolean;
      isActive?: boolean;
      lockoutEnabled?: boolean;
      isLockedOut?: boolean;
      /** Format: date-time */
      lockoutEnd?: string | null;
      shouldChangePasswordOnNextLogin?: boolean;
      concurrencyStamp?: string | null;
      roleNames?: string[] | null;
      /** Format: int32 */
      accessFailedCount?: number;
      /** Format: date-time */
      lastPasswordChangeTime?: string | null;
    };
    "Volo.Abp.Identity.IdentityUserSettingsDto": {
      isUserNameUpdateEnabled?: boolean;
      isEmailUpdateEnabled?: boolean;
    };
    "Volo.Abp.Identity.IdentityUserUpdateDto": {
      extraProperties?: {
        [key: string]: unknown;
      } | null;
      userName: string;
      name?: string | null;
      surname?: string | null;
      /** Format: email */
      email: string;
      phoneNumber?: string | null;
      isActive?: boolean;
      shouldChangePasswordOnNextLogin?: boolean;
      lockoutEnabled?: boolean;
      roleNames?: string[] | null;
      organizationUnitIds?: string[] | null;
      concurrencyStamp?: string | null;
    };
    "Volo.Abp.Identity.IdentityUserUpdatePasswordInput": {
      newPassword: string;
    };
    "Volo.Abp.Identity.IdentityUserUpdateRolesDto": {
      roleNames: string[];
    };
    "Volo.Abp.Identity.ImportExternalUserInput": {
      provider: string;
      userNameOrEmailAddress: string;
      password?: string | null;
    };
    "Volo.Abp.Identity.OrganizationUnitCreateDto": {
      extraProperties?: {
        [key: string]: unknown;
      } | null;
      displayName: string;
      /** Format: uuid */
      parentId?: string | null;
    };
    "Volo.Abp.Identity.OrganizationUnitDto": {
      extraProperties?: {
        [key: string]: unknown;
      } | null;
      /** Format: uuid */
      id?: string;
      /** Format: date-time */
      creationTime?: string;
      /** Format: uuid */
      creatorId?: string | null;
      /** Format: date-time */
      lastModificationTime?: string | null;
      /** Format: uuid */
      lastModifierId?: string | null;
      isDeleted?: boolean;
      /** Format: uuid */
      deleterId?: string | null;
      /** Format: date-time */
      deletionTime?: string | null;
      /** Format: uuid */
      parentId?: string | null;
      code?: string | null;
      displayName?: string | null;
      roles?: components["schemas"]["Volo.Abp.Identity.OrganizationUnitRoleDto"][] | null;
    };
    "Volo.Abp.Identity.OrganizationUnitLookupDto": {
      /** Format: uuid */
      id?: string;
      displayName?: string | null;
    };
    "Volo.Abp.Identity.OrganizationUnitMoveInput": {
      /** Format: uuid */
      newParentId?: string | null;
    };
    "Volo.Abp.Identity.OrganizationUnitRoleDto": {
      /** Format: date-time */
      creationTime?: string;
      /** Format: uuid */
      creatorId?: string | null;
      /** Format: uuid */
      organizationUnitId?: string;
      /** Format: uuid */
      roleId?: string;
    };
    "Volo.Abp.Identity.OrganizationUnitRoleInput": {
      roleIds?: string[] | null;
    };
    "Volo.Abp.Identity.OrganizationUnitUpdateDto": {
      extraProperties?: {
        [key: string]: unknown;
      } | null;
      displayName: string;
      concurrencyStamp?: string | null;
    };
    "Volo.Abp.Identity.OrganizationUnitUserInput": {
      userIds?: string[] | null;
    };
    "Volo.Abp.Identity.OrganizationUnitWithDetailsDto": {
      extraProperties?: {
        [key: string]: unknown;
      } | null;
      /** Format: uuid */
      id?: string;
      /** Format: date-time */
      creationTime?: string;
      /** Format: uuid */
      creatorId?: string | null;
      /** Format: date-time */
      lastModificationTime?: string | null;
      /** Format: uuid */
      lastModifierId?: string | null;
      isDeleted?: boolean;
      /** Format: uuid */
      deleterId?: string | null;
      /** Format: date-time */
      deletionTime?: string | null;
      /** Format: uuid */
      parentId?: string | null;
      code?: string | null;
      displayName?: string | null;
      roles?: components["schemas"]["Volo.Abp.Identity.IdentityRoleDto"][] | null;
      concurrencyStamp?: string | null;
    };
    "Volo.Abp.Identity.UpdateClaimTypeDto": {
      extraProperties?: {
        [key: string]: unknown;
      } | null;
      name: string;
      required?: boolean;
      regex?: string | null;
      regexDescription?: string | null;
      description?: string | null;
      valueType?: components["schemas"]["Volo.Abp.Identity.IdentityClaimValueType"];
      concurrencyStamp?: string | null;
    };
    "Volo.Abp.LanguageManagement.Dto.CreateLanguageDto": {
      extraProperties?: {
        [key: string]: unknown;
      } | null;
      displayName?: string | null;
      cultureName?: string | null;
      uiCultureName?: string | null;
      flagIcon?: string | null;
      isEnabled?: boolean;
    };
    "Volo.Abp.LanguageManagement.Dto.CultureInfoDto": {
      displayName?: string | null;
      name?: string | null;
    };
    "Volo.Abp.LanguageManagement.Dto.LanguageDto": {
      extraProperties?: {
        [key: string]: unknown;
      } | null;
      /** Format: uuid */
      id?: string;
      /** Format: date-time */
      creationTime?: string;
      /** Format: uuid */
      creatorId?: string | null;
      cultureName?: string | null;
      uiCultureName?: string | null;
      displayName?: string | null;
      flagIcon?: string | null;
      isEnabled?: boolean;
      isDefaultLanguage?: boolean;
      concurrencyStamp?: string | null;
    };
    "Volo.Abp.LanguageManagement.Dto.LanguageResourceDto": {
      name?: string | null;
    };
    "Volo.Abp.LanguageManagement.Dto.LanguageTextDto": {
      resourceName?: string | null;
      cultureName?: string | null;
      baseCultureName?: string | null;
      baseValue?: string | null;
      name?: string | null;
      value?: string | null;
    };
    "Volo.Abp.LanguageManagement.Dto.UpdateLanguageDto": {
      extraProperties?: {
        [key: string]: unknown;
      } | null;
      displayName?: string | null;
      flagIcon?: string | null;
      isEnabled?: boolean;
      concurrencyStamp?: string | null;
    };
    "Volo.Abp.Localization.LanguageInfo": {
      cultureName?: string | null;
      uiCultureName?: string | null;
      displayName?: string | null;
      twoLetterISOLanguageName?: string | null;
      flagIcon?: string | null;
    };
    "Volo.Abp.NameValue": {
      name?: string | null;
      value?: string | null;
    };
    "Volo.Abp.OpenIddict.Applications.Dtos.ApplicationDto": {
      extraProperties?: {
        [key: string]: unknown;
      } | null;
      /** Format: uuid */
      id?: string;
      clientId?: string | null;
      displayName?: string | null;
      type?: string | null;
      clientSecret?: string | null;
      consentType?: string | null;
      postLogoutRedirectUris?: string[] | null;
      redirectUris?: string[] | null;
      allowPasswordFlow?: boolean;
      allowClientCredentialsFlow?: boolean;
      allowAuthorizationCodeFlow?: boolean;
      allowRefreshTokenFlow?: boolean;
      allowHybridFlow?: boolean;
      allowImplicitFlow?: boolean;
      allowLogoutEndpoint?: boolean;
      allowDeviceEndpoint?: boolean;
      scopes?: string[] | null;
      clientUri?: string | null;
      logoUri?: string | null;
    };
    "Volo.Abp.OpenIddict.Applications.Dtos.CreateApplicationInput": {
      extraProperties?: {
        [key: string]: unknown;
      } | null;
      clientId: string;
      displayName: string;
      type?: string | null;
      clientSecret?: string | null;
      consentType?: string | null;
      postLogoutRedirectUris?: string[] | null;
      redirectUris?: string[] | null;
      allowPasswordFlow?: boolean;
      allowClientCredentialsFlow?: boolean;
      allowAuthorizationCodeFlow?: boolean;
      allowRefreshTokenFlow?: boolean;
      allowHybridFlow?: boolean;
      allowImplicitFlow?: boolean;
      allowLogoutEndpoint?: boolean;
      allowDeviceEndpoint?: boolean;
      scopes?: string[] | null;
      clientUri?: string | null;
      logoUri?: string | null;
    };
    "Volo.Abp.OpenIddict.Applications.Dtos.UpdateApplicationInput": {
      extraProperties?: {
        [key: string]: unknown;
      } | null;
      clientId: string;
      displayName: string;
      type?: string | null;
      clientSecret?: string | null;
      consentType?: string | null;
      postLogoutRedirectUris?: string[] | null;
      redirectUris?: string[] | null;
      allowPasswordFlow?: boolean;
      allowClientCredentialsFlow?: boolean;
      allowAuthorizationCodeFlow?: boolean;
      allowRefreshTokenFlow?: boolean;
      allowHybridFlow?: boolean;
      allowImplicitFlow?: boolean;
      allowLogoutEndpoint?: boolean;
      allowDeviceEndpoint?: boolean;
      scopes?: string[] | null;
      clientUri?: string | null;
      logoUri?: string | null;
    };
    "Volo.Abp.OpenIddict.Scopes.Dtos.CreateScopeInput": {
      extraProperties?: {
        [key: string]: unknown;
      } | null;
      name: string;
      displayName?: string | null;
      description?: string | null;
      resources?: string[] | null;
    };
    "Volo.Abp.OpenIddict.Scopes.Dtos.ScopeDto": {
      extraProperties?: {
        [key: string]: unknown;
      } | null;
      /** Format: uuid */
      id?: string;
      name?: string | null;
      displayName?: string | null;
      description?: string | null;
      buildIn?: boolean;
      resources?: string[] | null;
    };
    "Volo.Abp.OpenIddict.Scopes.Dtos.UpdateScopeInput": {
      extraProperties?: {
        [key: string]: unknown;
      } | null;
      name: string;
      displayName?: string | null;
      description?: string | null;
      resources?: string[] | null;
    };
    "Volo.Abp.PermissionManagement.GetPermissionListResultDto": {
      entityDisplayName?: string | null;
      groups?: components["schemas"]["Volo.Abp.PermissionManagement.PermissionGroupDto"][] | null;
    };
    "Volo.Abp.PermissionManagement.PermissionGrantInfoDto": {
      name?: string | null;
      displayName?: string | null;
      parentName?: string | null;
      isGranted?: boolean;
      allowedProviders?: string[] | null;
      grantedProviders?: components["schemas"]["Volo.Abp.PermissionManagement.ProviderInfoDto"][] | null;
    };
    "Volo.Abp.PermissionManagement.PermissionGroupDto": {
      name?: string | null;
      displayName?: string | null;
      displayNameKey?: string | null;
      displayNameResource?: string | null;
      permissions?: components["schemas"]["Volo.Abp.PermissionManagement.PermissionGrantInfoDto"][] | null;
    };
    "Volo.Abp.PermissionManagement.ProviderInfoDto": {
      providerName?: string | null;
      providerKey?: string | null;
    };
    "Volo.Abp.PermissionManagement.UpdatePermissionDto": {
      name?: string | null;
      isGranted?: boolean;
    };
    "Volo.Abp.PermissionManagement.UpdatePermissionsDto": {
      permissions?: components["schemas"]["Volo.Abp.PermissionManagement.UpdatePermissionDto"][] | null;
    };
    "Volo.Abp.SettingManagement.EmailSettingsDto": {
      smtpHost?: string | null;
      /** Format: int32 */
      smtpPort?: number;
      smtpUserName?: string | null;
      smtpPassword?: string | null;
      smtpDomain?: string | null;
      smtpEnableSsl?: boolean;
      smtpUseDefaultCredentials?: boolean;
      defaultFromAddress?: string | null;
      defaultFromDisplayName?: string | null;
    };
    "Volo.Abp.SettingManagement.SendTestEmailInput": {
      senderEmailAddress: string;
      targetEmailAddress: string;
      subject: string;
      body?: string | null;
    };
    "Volo.Abp.SettingManagement.UpdateEmailSettingsDto": {
      smtpHost?: string | null;
      /** Format: int32 */
      smtpPort?: number;
      smtpUserName?: string | null;
      /** Format: password */
      smtpPassword?: string | null;
      smtpDomain?: string | null;
      smtpEnableSsl?: boolean;
      smtpUseDefaultCredentials?: boolean;
      defaultFromAddress: string;
      defaultFromDisplayName: string;
    };
    "Volo.Abp.TextTemplateManagement.TextTemplates.RestoreTemplateContentInput": {
      templateName: string;
      cultureName?: string | null;
    };
    "Volo.Abp.TextTemplateManagement.TextTemplates.TemplateDefinitionDto": {
      name?: string | null;
      displayName?: string | null;
      isLayout?: boolean;
      layout?: string | null;
      isInlineLocalized?: boolean;
      defaultCultureName?: string | null;
    };
    "Volo.Abp.TextTemplateManagement.TextTemplates.TextTemplateContentDto": {
      name?: string | null;
      cultureName?: string | null;
      content?: string | null;
    };
    "Volo.Abp.TextTemplateManagement.TextTemplates.UpdateTemplateContentInput": {
      templateName: string;
      cultureName?: string | null;
      content?: string | null;
    };
    "Volo.Abp.Users.UserData": {
      /** Format: uuid */
      id?: string;
      /** Format: uuid */
      tenantId?: string | null;
      userName?: string | null;
      name?: string | null;
      surname?: string | null;
      isActive?: boolean;
      email?: string | null;
      emailConfirmed?: boolean;
      phoneNumber?: string | null;
      phoneNumberConfirmed?: boolean;
    };
    "Volo.Abp.Validation.StringValues.IStringValueType": {
      name?: string | null;
      properties?: ({
        [key: string]: (Record<string, unknown> | null) | undefined;
      }) | null;
      validator?: components["schemas"]["Volo.Abp.Validation.StringValues.IValueValidator"];
    };
    "Volo.Abp.Validation.StringValues.IValueValidator": {
      name?: string | null;
      properties?: {
        [key: string]: unknown;
      } | null;
    };
    "Volo.CmsKit.Admin.Blogs.BlogDto": {
      /** Format: uuid */
      id?: string;
      name?: string | null;
      slug?: string | null;
      concurrencyStamp?: string | null;
    };
    "Volo.CmsKit.Admin.Blogs.BlogFeatureInputDto": {
      featureName: string;
      isEnabled?: boolean;
    };
    "Volo.CmsKit.Admin.Blogs.BlogPostDto": {
      /** Format: uuid */
      id?: string;
      /** Format: uuid */
      blogId?: string;
      title?: string | null;
      slug?: string | null;
      shortDescription?: string | null;
      content?: string | null;
      /** Format: uuid */
      coverImageMediaId?: string | null;
      /** Format: date-time */
      creationTime?: string;
      /** Format: date-time */
      lastModificationTime?: string | null;
      concurrencyStamp?: string | null;
      status?: components["schemas"]["Volo.CmsKit.Blogs.BlogPostStatus"];
    };
    "Volo.CmsKit.Admin.Blogs.BlogPostListDto": {
      /** Format: uuid */
      id?: string;
      /** Format: uuid */
      blogId?: string;
      blogName?: string | null;
      title?: string | null;
      slug?: string | null;
      shortDescription?: string | null;
      content?: string | null;
      /** Format: uuid */
      coverImageMediaId?: string | null;
      /** Format: date-time */
      creationTime?: string;
      /** Format: date-time */
      lastModificationTime?: string | null;
      status?: components["schemas"]["Volo.CmsKit.Blogs.BlogPostStatus"];
    };
    "Volo.CmsKit.Admin.Blogs.CreateBlogDto": {
      name: string;
      slug: string;
    };
    "Volo.CmsKit.Admin.Blogs.CreateBlogPostDto": {
      /** Format: uuid */
      blogId: string;
      title: string;
      slug: string;
      shortDescription?: string | null;
      content?: string | null;
      /** Format: uuid */
      coverImageMediaId?: string | null;
    };
    "Volo.CmsKit.Admin.Blogs.UpdateBlogDto": {
      name: string;
      slug: string;
      concurrencyStamp?: string | null;
    };
    "Volo.CmsKit.Admin.Blogs.UpdateBlogPostDto": {
      title: string;
      slug: string;
      shortDescription?: string | null;
      content?: string | null;
      /** Format: uuid */
      coverImageMediaId?: string | null;
      concurrencyStamp?: string | null;
    };
    "Volo.CmsKit.Admin.Comments.CmsUserDto": {
      /** Format: uuid */
      id?: string;
      userName?: string | null;
      name?: string | null;
      surname?: string | null;
    };
    "Volo.CmsKit.Admin.Comments.CommentWithAuthorDto": {
      /** Format: uuid */
      id?: string;
      entityType?: string | null;
      entityId?: string | null;
      text?: string | null;
      /** Format: uuid */
      repliedCommentId?: string | null;
      /** Format: uuid */
      creatorId?: string;
      /** Format: date-time */
      creationTime?: string;
      author?: components["schemas"]["Volo.CmsKit.Admin.Comments.CmsUserDto"];
    };
    "Volo.CmsKit.Admin.GlobalResources.GlobalResourcesDto": {
      styleContent?: string | null;
      scriptContent?: string | null;
    };
    "Volo.CmsKit.Admin.GlobalResources.GlobalResourcesUpdateDto": {
      style?: string | null;
      script?: string | null;
    };
    "Volo.CmsKit.Admin.MediaDescriptors.MediaDescriptorDto": {
      /** Format: uuid */
      id?: string;
      name?: string | null;
      mimeType?: string | null;
      /** Format: int32 */
      size?: number;
    };
    "Volo.CmsKit.Admin.Menus.MenuItemCreateInput": {
      /** Format: uuid */
      parentId?: string | null;
      displayName: string;
      isActive?: boolean;
      url?: string | null;
      icon?: string | null;
      /** Format: int32 */
      order?: number;
      target?: string | null;
      elementId?: string | null;
      cssClass?: string | null;
      /** Format: uuid */
      pageId?: string | null;
    };
    "Volo.CmsKit.Admin.Menus.MenuItemMoveInput": {
      /** Format: uuid */
      newParentId?: string | null;
      /** Format: int32 */
      position?: number;
    };
    "Volo.CmsKit.Admin.Menus.MenuItemUpdateInput": {
      displayName: string;
      isActive?: boolean;
      url?: string | null;
      icon?: string | null;
      target?: string | null;
      elementId?: string | null;
      cssClass?: string | null;
      /** Format: uuid */
      pageId?: string | null;
      concurrencyStamp?: string | null;
    };
    "Volo.CmsKit.Admin.Menus.PageLookupDto": {
      /** Format: uuid */
      id?: string;
      title?: string | null;
      slug?: string | null;
    };
    "Volo.CmsKit.Admin.Pages.CreatePageInputDto": {
      title: string;
      slug: string;
      content?: string | null;
      script?: string | null;
      style?: string | null;
    };
    "Volo.CmsKit.Admin.Pages.PageDto": {
      /** Format: uuid */
      id?: string;
      /** Format: date-time */
      creationTime?: string;
      /** Format: uuid */
      creatorId?: string | null;
      /** Format: date-time */
      lastModificationTime?: string | null;
      /** Format: uuid */
      lastModifierId?: string | null;
      title?: string | null;
      slug?: string | null;
      content?: string | null;
      script?: string | null;
      style?: string | null;
      isHomePage?: boolean;
      concurrencyStamp?: string | null;
    };
    "Volo.CmsKit.Admin.Pages.UpdatePageInputDto": {
      title: string;
      slug: string;
      content?: string | null;
      script?: string | null;
      style?: string | null;
      concurrencyStamp?: string | null;
    };
    "Volo.CmsKit.Admin.Tags.EntityTagCreateDto": {
      tagName: string;
      entityType: string;
      entityId: string;
    };
    "Volo.CmsKit.Admin.Tags.EntityTagSetDto": {
      entityId?: string | null;
      entityType?: string | null;
      tags: string[];
    };
    "Volo.CmsKit.Admin.Tags.TagCreateDto": {
      entityType: string;
      name: string;
    };
    "Volo.CmsKit.Admin.Tags.TagDefinitionDto": {
      entityType?: string | null;
      displayName?: string | null;
    };
    "Volo.CmsKit.Admin.Tags.TagUpdateDto": {
      name: string;
      concurrencyStamp?: string | null;
    };
    "Volo.CmsKit.Blogs.BlogFeatureDto": {
      /** Format: uuid */
      id?: string;
      featureName?: string | null;
      isEnabled?: boolean;
    };
    /**
     * Format: int32
     * @enum {integer}
     */
    "Volo.CmsKit.Blogs.BlogPostStatus": 0 | 1 | 2;
    "Volo.CmsKit.Contents.BlogPostCommonDto": {
      /** Format: uuid */
      id?: string;
      /** Format: date-time */
      creationTime?: string;
      /** Format: uuid */
      creatorId?: string | null;
      /** Format: date-time */
      lastModificationTime?: string | null;
      /** Format: uuid */
      lastModifierId?: string | null;
      /** Format: uuid */
      blogId?: string;
      title?: string | null;
      slug?: string | null;
      shortDescription?: string | null;
      content?: string | null;
      /** Format: uuid */
      coverImageMediaId?: string | null;
      author?: components["schemas"]["Volo.CmsKit.Users.CmsUserDto"];
    };
    "Volo.CmsKit.Contents.PageDto": {
      /** Format: uuid */
      id?: string;
      title?: string | null;
      slug?: string | null;
      content?: string | null;
      script?: string | null;
      style?: string | null;
    };
    "Volo.CmsKit.Menus.MenuItemDto": {
      /** Format: uuid */
      id?: string;
      /** Format: date-time */
      creationTime?: string;
      /** Format: uuid */
      creatorId?: string | null;
      /** Format: date-time */
      lastModificationTime?: string | null;
      /** Format: uuid */
      lastModifierId?: string | null;
      /** Format: uuid */
      parentId?: string | null;
      displayName?: string | null;
      isActive?: boolean;
      url?: string | null;
      icon?: string | null;
      /** Format: int32 */
      order?: number;
      target?: string | null;
      elementId?: string | null;
      cssClass?: string | null;
      /** Format: uuid */
      pageId?: string | null;
      concurrencyStamp?: string | null;
    };
    "Volo.CmsKit.Public.Comments.CmsUserDto": {
      /** Format: uuid */
      id?: string;
      userName?: string | null;
      name?: string | null;
      surname?: string | null;
    };
    "Volo.CmsKit.Public.Comments.CommentDto": {
      /** Format: uuid */
      id?: string;
      entityType?: string | null;
      entityId?: string | null;
      text?: string | null;
      /** Format: uuid */
      repliedCommentId?: string | null;
      /** Format: uuid */
      creatorId?: string;
      /** Format: date-time */
      creationTime?: string;
      author?: components["schemas"]["Volo.CmsKit.Public.Comments.CmsUserDto"];
      concurrencyStamp?: string | null;
    };
    "Volo.CmsKit.Public.Comments.CommentWithDetailsDto": {
      /** Format: uuid */
      id?: string;
      entityType?: string | null;
      entityId?: string | null;
      text?: string | null;
      /** Format: uuid */
      creatorId?: string;
      /** Format: date-time */
      creationTime?: string;
      replies?: components["schemas"]["Volo.CmsKit.Public.Comments.CommentDto"][] | null;
      author?: components["schemas"]["Volo.CmsKit.Public.Comments.CmsUserDto"];
      concurrencyStamp?: string | null;
    };
    "Volo.CmsKit.Public.Comments.CreateCommentInput": {
      text: string;
      /** Format: uuid */
      repliedCommentId?: string | null;
      /** Format: uuid */
      captchaToken?: string | null;
      /** Format: int32 */
      captchaAnswer?: number;
    };
    "Volo.CmsKit.Public.Comments.UpdateCommentInput": {
      text: string;
      concurrencyStamp?: string | null;
    };
    "Volo.CmsKit.Public.GlobalResources.GlobalResourceDto": {
      /** Format: date-time */
      creationTime?: string;
      /** Format: uuid */
      creatorId?: string | null;
      /** Format: date-time */
      lastModificationTime?: string | null;
      /** Format: uuid */
      lastModifierId?: string | null;
      name?: string | null;
      value?: string | null;
    };
    "Volo.CmsKit.Public.Ratings.CreateUpdateRatingInput": {
      /** Format: int32 */
      starCount: number;
    };
    "Volo.CmsKit.Public.Ratings.RatingDto": {
      /** Format: uuid */
      id?: string;
      entityType?: string | null;
      entityId?: string | null;
      /** Format: int32 */
      starCount?: number;
      /** Format: uuid */
      creatorId?: string;
      /** Format: date-time */
      creationTime?: string;
    };
    "Volo.CmsKit.Public.Ratings.RatingWithStarCountDto": {
      /** Format: int32 */
      starCount?: number;
      /** Format: int32 */
      count?: number;
      isSelectedByCurrentUser?: boolean;
    };
    "Volo.CmsKit.Public.Reactions.ReactionDto": {
      name?: string | null;
      displayName?: string | null;
    };
    "Volo.CmsKit.Public.Reactions.ReactionWithSelectionDto": {
      reaction?: components["schemas"]["Volo.CmsKit.Public.Reactions.ReactionDto"];
      /** Format: int32 */
      count?: number;
      isSelectedByCurrentUser?: boolean;
    };
    "Volo.CmsKit.Tags.TagDto": {
      /** Format: uuid */
      id?: string;
      entityType?: string | null;
      name?: string | null;
      concurrencyStamp?: string | null;
    };
    "Volo.CmsKit.Users.CmsUserDto": {
      /** Format: uuid */
      id?: string;
      /** Format: uuid */
      tenantId?: string | null;
      userName?: string | null;
      name?: string | null;
      surname?: string | null;
    };
    "Volo.Cmskit.MediaDescriptors.MediaDescriptorsDto+Attachment": {
      /** Format: uuid */
      id?: string;
      url?: string | null;
      name?: string | null;
      mimeType?: string | null;
      /** Format: int64 */
      size?: number;
    };
    "Volo.Payment.Plans.PlanDto": {
      extraProperties?: {
        [key: string]: unknown;
      } | null;
      /** Format: uuid */
      id?: string;
      name?: string | null;
      concurrencyStamp?: string | null;
    };
    "Volo.Payment.Requests.PaymentRequestProductDto": {
      /** Format: uuid */
      paymentRequestId?: string;
      code?: string | null;
      name?: string | null;
      /** Format: float */
      unitPrice?: number;
      /** Format: int32 */
      count?: number;
      /** Format: float */
      totalPrice?: number;
      paymentType?: components["schemas"]["Volo.Payment.Requests.PaymentType"];
      /** Format: uuid */
      planId?: string;
      extraProperties?: {
        [key: string]: unknown;
      } | null;
    };
    /**
     * Format: int32
     * @enum {integer}
     */
    "Volo.Payment.Requests.PaymentRequestState": 0 | 1 | 2 | 3;
    "Volo.Payment.Requests.PaymentRequestWithDetailsDto": {
      extraProperties?: {
        [key: string]: unknown;
      } | null;
      /** Format: uuid */
      id?: string;
      products?: components["schemas"]["Volo.Payment.Requests.PaymentRequestProductDto"][] | null;
      currency?: string | null;
      state?: components["schemas"]["Volo.Payment.Requests.PaymentRequestState"];
      failReason?: string | null;
      /** Format: date-time */
      emailSendDate?: string | null;
      gateway?: string | null;
      externalSubscriptionId?: string | null;
      /** Format: float */
      totalPrice?: number;
      /** Format: date-time */
      creationTime?: string;
    };
    /**
     * Format: int32
     * @enum {integer}
     */
    "Volo.Payment.Requests.PaymentType": 0 | 1;
    "Volo.Saas.Host.Dtos.EditionCreateDto": {
      extraProperties?: {
        [key: string]: unknown;
      } | null;
      displayName: string;
      /** Format: uuid */
      planId?: string | null;
    };
    "Volo.Saas.Host.Dtos.EditionDto": {
      extraProperties?: {
        [key: string]: unknown;
      } | null;
      /** Format: uuid */
      id?: string;
      displayName?: string | null;
      /** Format: uuid */
      planId?: string | null;
      planName?: string | null;
      concurrencyStamp?: string | null;
    };
    "Volo.Saas.Host.Dtos.EditionLookupDto": {
      extraProperties?: {
        [key: string]: unknown;
      } | null;
      /** Format: uuid */
      id?: string;
      displayName?: string | null;
    };
    "Volo.Saas.Host.Dtos.EditionUpdateDto": {
      extraProperties?: {
        [key: string]: unknown;
      } | null;
      displayName: string;
      /** Format: uuid */
      planId?: string | null;
      concurrencyStamp?: string | null;
    };
    "Volo.Saas.Host.Dtos.SaasTenantConnectionStringsDto": {
      extraProperties?: {
        [key: string]: unknown;
      } | null;
      default?: string | null;
      databases?: components["schemas"]["Volo.Saas.Host.Dtos.SaasTenantDatabaseConnectionStringsDto"][] | null;
    };
    "Volo.Saas.Host.Dtos.SaasTenantCreateDto": {
      extraProperties?: {
        [key: string]: unknown;
      } | null;
      name: string;
      /** Format: uuid */
      editionId?: string | null;
      activationState?: components["schemas"]["Volo.Saas.TenantActivationState"];
      /** Format: date-time */
      activationEndDate?: string | null;
      /** Format: date-time */
      editionEndDateUtc?: string | null;
      /** Format: email */
      adminEmailAddress: string;
      adminPassword: string;
      connectionStrings?: components["schemas"]["Volo.Saas.Host.Dtos.SaasTenantConnectionStringsDto"];
    };
    "Volo.Saas.Host.Dtos.SaasTenantDatabaseConnectionStringsDto": {
      extraProperties?: {
        [key: string]: unknown;
      } | null;
      databaseName?: string | null;
      connectionString?: string | null;
    };
    "Volo.Saas.Host.Dtos.SaasTenantDatabasesDto": {
      extraProperties?: {
        [key: string]: unknown;
      } | null;
      databases?: string[] | null;
    };
    "Volo.Saas.Host.Dtos.SaasTenantDto": {
      extraProperties?: {
        [key: string]: unknown;
      } | null;
      /** Format: uuid */
      id?: string;
      name?: string | null;
      /** Format: uuid */
      editionId?: string | null;
      /** Format: date-time */
      editionEndDateUtc?: string | null;
      editionName?: string | null;
      hasDefaultConnectionString?: boolean;
      activationState?: components["schemas"]["Volo.Saas.TenantActivationState"];
      /** Format: date-time */
      activationEndDate?: string | null;
      concurrencyStamp?: string | null;
    };
    "Volo.Saas.Host.Dtos.SaasTenantSetPasswordDto": {
      username?: string | null;
      password?: string | null;
    };
    "Volo.Saas.Host.Dtos.SaasTenantUpdateDto": {
      extraProperties?: {
        [key: string]: unknown;
      } | null;
      name: string;
      /** Format: uuid */
      editionId?: string | null;
      activationState?: components["schemas"]["Volo.Saas.TenantActivationState"];
      /** Format: date-time */
      activationEndDate?: string | null;
      /** Format: date-time */
      editionEndDateUtc?: string | null;
      concurrencyStamp?: string | null;
    };
    "Volo.Saas.Host.GetEditionUsageStatisticsResultDto": {
      data?: ({
        [key: string]: (number | null) | undefined;
      }) | null;
    };
    /**
     * Format: int32
     * @enum {integer}
     */
    "Volo.Saas.TenantActivationState": 0 | 1 | 2;
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type external = Record<string, never>;

export type operations = Record<string, never>;
